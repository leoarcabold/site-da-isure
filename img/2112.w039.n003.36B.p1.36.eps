%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Cyrillic
%%Title: Adobe Illustrator Artwork
%%Creator: Adobe Illustrator(R) 26.0
%%For:  
%%CreationDate: 12/4/2021
%%BoundingBox: 0 0 740 400
%%HiResBoundingBox: 0 0 740 400
%%CropBox: 0 0 740 400
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 26.0.1%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 26.0.1 x731 R agm 5.2 ct 6.2%ADO_ContainsXMP: MainFirst%AI7_Thumbnail: 128 72 8%%BeginData: 8912 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF
%0066000066330066660066990066CC0066FF009900009933009966009999
%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66
%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333
%3333663333993333CC3333FF3366003366333366663366993366CC3366FF
%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99
%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033
%6600666600996600CC6600FF6633006633336633666633996633CC6633FF
%6666006666336666666666996666CC6666FF669900669933669966669999
%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33
%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF
%9933009933339933669933999933CC9933FF996600996633996666996699
%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33
%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF
%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399
%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933
%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF
%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC
%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699
%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33
%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100
%000011111111220000002200000022222222440000004400000044444444
%550000005500000055555555770000007700000077777777880000008800
%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB
%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF
%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF
%524C45FDFCFFFDFCFFFD1DFFA8FD1FFFA8FD5EFF5959537DA8FD1CFFA87D
%FFFFFF7DFD58FF538585AF7E7DFD1EFFA8A8A8FD58FFA859858585AF5AA8
%FD1BFFA87DA8A8A87D7DFFFF7DFD53FFA87EAF85A984847DFFA8FD15FF7D
%A8FF7DA8FD05FF7DA8FD55FFA8598585285253847E7E597DA8FD14FFA87D
%FFFFFFA8FFFFFF7DFD56FF7D7E2E5384AF85AF85AF847DA8FD0BFF7DFD07
%FF7DFFFFFFA87DFFFFFFA8A8FD56FF7D5284A9848584A985AF7E7DFD0AFF
%A852A8FD06FF7DA87DA8A852A87DFFA8A8A8FD55FFA85AAF85AF85AF8585
%5A7D7DFD0AFFA87DFD05FFA8FF7DFFA8527D7D27A8FFFD04A8FD54FF7D85
%847D537E597D7D7D52A8FD0AFF7D7DA8FFFFFFA87DA8FF7DFF7DA8A8A8FF
%A87DFD56FFCA7E858559FFA8A8FFFF7DA852FD0AFFA87D7DA8FD06FFA87D
%FFA8A8FFA852FD58FF59857E84A17D7D7D52A8A87D7DFD09FF7D52527D52
%A8FD05FF7D7DA87DA852FD59FFA85A8452A8FFA87DA87DFF52A8FD09FFA8
%7D527D7DA8FD05FFA8597D7D52A8FD59FFA859527D7DFFA8A8A8527D7D7D
%FD09FFA87D527D7DFD06FFA859845A597DFD5AFF7DA8A8A87DA8A8FFA8FF
%FFA8FD09FFA8A8FFFFA8A8FD04FFA87D7EA9AF5AA8FD5BFF527DFFFFA8FF
%A8FFFFFF52FD09FF7DFFFFFF7DFD04FFA8A8FF53AF8559A8FFFFA87DA8A8
%A8FD097DA8A8A87DA87DA87DA87DA87DA8A8A87DA8A8A87DA8A8FD35FFA8
%59CAFFFF7DA8FFFF7D5A7DFD08FF7D7DFFA852A8FFFFA8A8FFFFA8597E59
%FFFFFF7DA8FFFFA8FFFFFFA8FFFFFFA8FD0DFF7DFFFFA87DFFA87DA8A8FD
%35FF59A953A8FD04FF7D7D855A7DFD07FF52A87D7D52A8FFFFA8FD05FFA8
%A8A8FFFFA8A8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FD07FFA87DA8FF7D
%7DFFA852FFA8FD34FF7D7E85A9597E7DA8527E85AF857DFD06FFA8A8FFFF
%FFA8A8FFFFA8A8FD05FFA8FFFFFFFD16A87DA87DA87DA87DA87DA8A8A87D
%A8FD32FFCF597E858584AF53A17D7D84A985AF59A8FD06FF7DFFFFFF7DFF
%FFFFA8A8FD04FFA8A8FFFFFFA8A8FD15FFA8FFA8FFA8FFA8FFA8FFFFA87D
%FD31FF84538585AF85AF857EFFFFA87E7E847E7EA8FD05FFA8A8FFFFFFA8
%A8FFFFFF7DFD04FFA8FD04FFA8FD20FFA87DA8FD30FF7E598585A9858559
%7E52FFFFA852A87DA87D7DFD05FFA8A8FFFFFF7DFD05FF7DFD04A8FD04FF
%A8A8FD0CFF7DA8FD0FFFA8525A5A52A87DFD2EFF59AF85AF847E7DA87D7D
%7DA87DFD05FFA87DFD04FF7DFD04FFA8FD0EFF7DFD07FF7DFD04FF7D7DA8
%FD08FFA8FD05FF7D7D59AFA97E59847DCAA8FD2AFFA85984AF5A7DA1FFFF
%A87D7DA8FD07FFA87DFFFFFF7DA8FFFFFF7DFD0EFF7DA8FD05FF7D7DA8FF
%FF7D7DFF7DA8A8FF52FFFFFFA87DA8FFFFFF7D7E85A984A985A9857E5359
%A8FD29FFA853AF847DFD10FF7DA8FFFF7DFFFFFFA8A8FD0EFF7DFD05FFFD
%04A8FFA87DFFFFFF7DA87DFF7DFFFFA8A8FD04FFA859AF85AF85A985AF85
%AF59A8FD29FF5385847DCFFD11FF7DFFA8A8FFFFFFA87DFD0EFF7DA8FFFF
%FFA87DA8FF7D7D7DFFFFFFA87D52A8FF7DA8FF7DFD05FF7D7E85A984AF85
%8585A9858452A8FD27FF7D85A97EA8FD0FFFA8FFFFFF7D7DFD04FFA8A8FD
%0EFF7DFD04FF7D7DFFFFFF7DFFFFFF7DFFFFFFA8FFFF7D7DFD06FF7D85AF
%84AF5A8485597EAF85597DFD26FFA87D858559FD11FF7DFFFF7D52FD04FF
%7DA8FFFD05A8FD08FF7DA8FFFFFF7DA8A8FD05FF7DA8FD04FF7DFF7D7DFD
%06FF7D5959535252527D7D5985842E84FD27FF59AF84A8FD11FFA8A8FFA8
%FD05FF7DFFFFFF7DA8A8A87DA8FD06FF7DFFFFFFA8A8FFA8FFA8FFFFA8FD
%07FFA8FD09FF7DA8FFA8FD04FFA859597DFD28FFA8537DA8FFFFFFA87DFD
%0CFFA8A8FD06FFA8A8FFFFA8A8FD04FFA87DA8FD04FFA8A8FD05FFA8A87D
%A8A8A8FD06FFA8A8FD09FFA8A8FD07FF535AA8FD29FFA852FD04FFA87DFD
%0DFF7DFD06FFA8A8FFFFFF7DFFA8FFFFFFA87DFD04FF7DFD07FF7DFFA8A8
%FD08FFA8FD09FF7DFFA8A8A8FFA8FFA85353FD2AFFA8A8FD04FF527DFD0D
%FF7DA8FD05FF7DFFFFFFA87DFFA87D7DA8FF7DA8FFFFFF7DA8FD1BFFA8A8
%FFFF7DFD05FFA8A7A8FD29FFA8A8FD04FFA87DFD0CFFA87DFD05FF7DA8FD
%04FF7DFFA8FD04FF7DA8FFFFFF7DFD13FFFD04A87DA8A8FFFFFFA8FFA8A8
%FD04FFA87DA1FD2AFF7DFD04FFA87DA8A8FD0BFF27A8FD04FF7D7DFD04FF
%A87DFFA87DFFFFFF52A8FFFFFF7DA8FD07FFA8FD0BFFA8FFA8A8A8FFFFFF
%A8A8FFFF7DA8FFFFFF7D52FD2BFFA8FD04FFA8FFA8FD0BFFFD047DA8A87D
%A8FD06FF7DFFA8A8A8FF7D7DA8FFFFFF7DFD05FF7DA8A8A87DA8FD08FFA8
%FFA8FD07FF7DFFFFFFA8FFFFFF52FD2CFF7DFFFFFFA8527D7D7DFFA8FFA8
%FD07FF7DFFA87D7DA8FD06FFA87DFFFFA8A87DFF7DFD04FF7DA8FFFFA87D
%A8A8FFFFFF7D7DA8FD05FFA8A87DA87DFD06FFA87DFFFF7DA8FF7DA8FD2B
%FFA8A8FD04FF7DFD05A87DA87D7DA8FFFFFFA8A8FD0CFF7DFF7DA8A8FFFF
%A8FD04FFA8FFFFA87DFFFFFFA8A8A8FFFF7DA8FD10FFA87DFFFFFF7D7DA8
%FD24FF7DA87DA87DA8FF7DA8FD0CFF7D7DA87D7DA8FF7DFD07FFA8FF7DA8
%7D7DA8A8FD04FF7DFD04FFA8A8FF7DA8FF7D7DA8A8A852FFA87DFD05FFA8
%7DFD06A8FD05FF7D7D7DA8A87DFD24FFA8FFFFA8A87DA87DFD0CFFA8A8FD
%04FFA87DA8FFFFA8FFFFA87DA87DA8A8FD08FF7DA8FFFFFFA8FFFFFFA77D
%A8FD05FF52A8A8FD09FFA8FD08FFA8A8FFA8FF7DFD24FF7DFD06FFA8A8FF
%A8FFFFFFA8FFFFFFA8FF7D7D7DFFFFA87D5252A87D7DA8FF7DFD0BFFA8A8
%7DA8FFFFFFA8A87E537EA8FD06FFA87DA8A8FD11FF52FD04FF7D52A8A8FD
%21FFA8FD07FFA87D7D7DA87DA87DA8FD047D52A87DA8527D527DFFFFA8FF
%FFA8FD0BFFA8A87DA8FFFFFFA8FF7DA95A84FD07FF7D527DFD0EFFA8A852
%A87DFFFFFF7DA87DA87DA87DA8A8FD1CFF7DFFFD05A8FFFFFFA8FFFFFFA8
%FFFFFFA8FD05FF527D527D7DFFFFA8A8FF7DFD07FF527DFFFF7DFF7DFD04
%FFA8A87E85857DFD07FF527D52FD0BFFA87D7DA8FFFD04A8FF7DFFA87D7D
%FFFFFFA87D7DFD1AFFA8A8FFFF7DA8A8A8FD11FFA852A8A8FFFFFF7DFFFF
%A8A8FD05FFFD06A8FFA8FD04FFA8A159A9847DFD05A8FFFD047DFD0AA87D
%7DA8FFFFFFA8A8FF7D52A8FFA8A8FD06FFA87DFD1AFF7DFFFFA87DFD1AFF
%A8A8FF7DFD04FF7DA8A8A8FF7D7DA8FF7DA8FD04FFA87D5A8552A8A8FFA8
%FFA8FD047DFFA8FFA8FFA8FFA8FFA87DFD06FF7D7D52597D7DA8FD08FFA8
%7DFD07A87DA8A8FD0FFFA8FFFFA8FD09FF7DA8FD0DFFA8A8FFA8FFFFA8A8
%FFFFFF7D7D7DFFA8FF7DFFFFA8A8FD05FFA87EAF857DFD04FFA87D7D52FD
%0AFFA8A8FD06FFA87D84527D7DFD0AFF7DA8FFA8FFA8FFA8FF7DA8FD0FFF
%7DFFFFA8A8FD07FF7DA87DFD07FF7DFD05FF52A8FFA8A8FFA8FFFFFF52FF
%A8A87DA8A8FFFFFF7DA8FD06FF5285858453A8A87D527D527DFD0AFF7DFD
%09FF7D53CAFD0BFF7DA8FD07FFA87DFD0FFFA8FD06FFA8FD04FFA8A8FD07
%FF7D527DFFFFFF7DA8FFFFA8A8FFA8A8FFFF7DA8FFA8FFFFA8FFFFFFA87D
%FD07FF537E85857DCF7D7D527DFD0AFFA8A8FD09FFA853FD0DFF7DFD07FF
%7DFD10FFA8FD05FF59597DFF7DFF7DA87DFD06FFA8A8A87DCFA87DFFFFFF
%A87DFF7DFFFFA87DFF7DA8FD06FFA8A8FD08FF7D7D52A8A852527DA8FD0A
%FFA8A8FD09FF597E7DFD0CFF7DA8FD06FFA8A8FD0EFFA8A8FFFFA8A8FFA8
%84A87DA8A8A8FFA8A8FD05FF7DFFFFFF5353A8FD04FFA8FFA8FFFFA8FD0A
%FF7DA8FD0DFFA8FD0DFF7DFFFFFFA8FD05FFCF7E84A8FD06FFA8FD05FFFD
%06A87DFFA8FD10FF7DFFFFA87D7D84857DA8A8A87DFF7DFD05FFA8A8FFFF
%FFA853FD05FFA8FFA8FD0CFF7D7DFD1CFF7DFFFFFFA8A8FD04FFCF59857D
%FD06FFA87DFD05FF7DFFFD06A8FD0FFFA8A8FFFF7D7DA8A82EA87DA87DFD
%04A8FD04FFA8FD0AFFA8A8FFA8A8FD09FFA87DA8FD0DFF7DA87DFD0CA87D
%7DFD04FF7DFD04FF7D858584FD07FF7DFD05FFA8A8A87DA8FFA8A8FD0FFF
%A87DFD05FFA8A8A8FF7DA8A87D7DFD04FFA852FD0AFFA87DFF7DA8FD06FF
%A8A87DA8A8FD0DFF7D7DA8A8A8FFA8FFA8FFA8FFA8FFA8FF7D7DFD04FF52
%A8FFFFFF7D5A8559FD07FF7DA8FD04FF7DA8A8FFA8FF7DA8FD0FFFA8A8FD
%12FFA8A8FD0AFFA8A8FFA8A8FFFFFFA8A87DA8A8FD11FF7DFD0FFF7DFFFF
%FFA87DA8FFFFFF7D85857EFD08FF7DFD05FF7DFD04FFA8A8FD10FF7DA87D
%A87DFFA8FFA8FD16FFA87DFFA87D7DA87DA8A8FD14FFA8A8FD0EFFA87DFF
%FF7DFFA8A8FFFF7D7E857DFD08FF7DFD04FFA87DFD04FF7DFD14FFA8A87D
%A87DA87DFD06A8FFA8FFFFFFA8FFA8FFFD04A87DA87DFFFFFFA8FD19FFA8
%A8FD0FFFA8FFA8A8FF7DFFFFFFA87E7EA8FD08FFA8FD05FF7DFFFFFFA8A8
%FD1BFFFD04A87DA87D7D7DA87DA87DFD06A8FFA8FD1FFF7DA8FD05FFA87D
%A8FD06FF7D7D7DFFFFA87DFFA8FF5959A8FFA8FFA8FFA8A87D7D7DA8A8FF
%FFA87DFFFFFF7DFD50FF7DFD05FF7DA87DA8FD06FF52FFFFFFA87D7DA8A8
%7D52FD047DFD04A8FFA8FFA8FFFFFFA8A8FFFFA8A8FD50FF7DA8FD05FF7D
%7DA8FD06FFA8A8FFA87DA8FFFFA8A8A852A8FD0EFF7DA87DA8A8FD50FFA8
%A8FD06FFA8FD08FFA8FF7D527D7DFD04FFA87DFD0DFFA87DA8FFA8FD52FF
%7DFD0FFF7DA8527D52527DA8A8A87DA8FD0EFF7DFFFFA8A8FD52FF7DFD0F
%FF7D7D525252A8A8FF7D277DA8A8FD0BFF7DA8A8FFA8FD53FF7DFD0FFFA8
%7DA87DA8A87DFFFFA8A87DA87D7D7DA87DA87DA8A8A8527D7DA87D7DFD53
%FFA8FD047DA87D7D7DA8FD067D52FD057D527D7DFD05A87D7D5252275252
%7D525252FD047DFD54FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FD05FFA8FDFCFFFDFCFFFD18FFFF
%%EndData
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 7.1-c000 79.a8731b9, 2021/09/09-00:37:38        ">
 <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
  <rdf:Description rdf:about=""
    xmlns:dc="http://purl.org/dc/elements/1.1/"
    xmlns:xmp="http://ns.adobe.com/xap/1.0/"
    xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
    xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
    xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
    xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
    xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
    xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
    xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
    xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
    xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
   dc:format="application/postscript"
   xmp:MetadataDate="2021-12-04T12:05:39+09:00"
   xmp:ModifyDate="2021-12-04T12:05:39+09:00"
   xmp:CreateDate="2021-12-04T12:05:37+09:00"
   xmp:CreatorTool="Adobe Illustrator 26.0 (Windows)"
   xmpMM:InstanceID="xmp.iid:6493114c-6bf1-a64d-b777-4e981384e288"
   xmpMM:DocumentID="xmp.did:6493114c-6bf1-a64d-b777-4e981384e288"
   xmpMM:OriginalDocumentID="uuid:5D20892493BFDB11914A8590D31508C8"
   xmpMM:RenditionClass="proof:pdf"
   illustrator:StartupProfile="Print"
   illustrator:CreatorSubTool="Adobe Illustrator"
   xmpTPg:HasVisibleOverprint="False"
   xmpTPg:HasVisibleTransparency="True"
   xmpTPg:NPages="1"
   pdf:Producer="Adobe PDF library 16.03">
   <dc:title>
    <rdf:Alt>
     <rdf:li xml:lang="x-default">2112.w039.n003.36B.p1.36</rdf:li>
    </rdf:Alt>
   </dc:title>
   <xmp:Thumbnails>
    <rdf:Alt>
     <rdf:li
      xmpGImg:width="256"
      xmpGImg:height="140"
      xmpGImg:format="JPEG"
      xmpGImg:image="/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAjAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FUo82a&#xA;5JouhzXsEQnuy0cFnAx4q088ixR8yNwgZ+T034g5KMeI0xlKhbCjP5vZvXPmO4W768UgtRag1rxE&#xA;JjZ+FfGQvT9vvmf+UjTg/mpWzPylrk+saQJ7uNYdQt5Htr6KOvATRn7SV34SKVkWu4VgDvmDOHCa&#xA;c6E+IWnOQZOxV2KuxV2KuxVjt/rVjB5ipaS3N/fRQNb3Wk2SGVQzsksTzOSsNu6ry4+o68g3egxV&#xA;DXnmS3jvrC71qK/0G2tjI5W5RDbNI6+mjXFzayXEEaIrNtK4BJB6qMVT241zSoNSttMecHULtS8N&#xA;tGrSP6YB/eOEDenH8JHN6LXatdsVR2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2K&#xA;uxVJ/Nui3OsaHLa2kiw3yPFcWcklfT9WCRZFV+NTwfjwYgVCk03yUJcJtjOPEKeQXJ84635jm09X&#xA;k0Cw0ool/wATFLM87oHMauOaGiurDqoFOQYtxj2UZme42DrpQENjuWQWOhQWUMkcF5qCmZvUndb6&#xA;7jLuVC8iIpEUHioHwgdMkcMTzDEZpDkUfaeY9W8uyxTXl7Jf6A0ix3YuyGmtUduImSfZnjQn94sv&#xA;JuPxBvh4tjZ9MALi5OHUEmi9IzCcx2KpN5t8zQ+XNHfUpLeS7KtxS2hKh3opd+PIgVWNGanelMVT&#xA;kEEVG4PQ4qxzzbaWOm6Xq3mOzs4Iteis5RHqQiQzAiMhC705MidaE0oMVUrPVfLWhLd+WdKfnq+m&#xA;Wb3xsXD+rNUc2maRgBK8kjVdgxPI74qpeTfO+nazpujWd9dwy69qmmjUWtYkYB7Y8V9Yp8YiWTmp&#xA;Cu1eo3ocVRXlC5tLWC40QToRYXdxbafGXHI28YSZEQE1K26TrF7BRXFWR4q7FXYq7FXYq7FXYq7F&#xA;XYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq8Yje+by/WCZrbUr7UvTnlXgzpc3epenMo5q6VWSRlFV&#xA;IGbIHhxWHXEcWWiiroWFtSafWteXSebomrLBpjxycZRCSkKQtdsglZUDrBxNQalSDmL+Zn3uV+Wh&#xA;3JXfaVErP5i0yGR20K/X05NZiuLkqIUjF3LdGaTjaoqXLMqxxg/BzFfhAqlklLmW2MAOQezaPqK6&#xA;npNlqSxtEt7bxXCxP9pRKgcK3uOWQZIvFWEfmrc20enaXbyxvO11eSRpbw8fUf8A0G5O3JkVV6cn&#xA;Zgqj4iQBiqF8g/mV+lLPTLW/0yS0edIoorqFjNb82WQRpIXWGRHkW3ZwvAgIVLMOS4qy+TQLSd74&#xA;3ss95FqETW81rNKxtxA44tGsK8Y9x+0QX/ysVYPrtpaTSWOkeY4Ib/VNHu7BrC/nVT9csLy6jspP&#xA;U2Pxj1eM0f2Gbg2wbiqq7SWtbWa+t/K9hbQ+Y9e1HUDeXohVRDBZ3b2rTzFeJcJwHBOQLM3b4mCr&#xA;MtO8r6PZ6baWDwLeLaS/WUnulSWQ3JcytcElaCQyEvVQKHpTFU2xV2KuxV2KuxV2KuxV2KuxV2Ku&#xA;xV2KuxV2KuxV2KuxV2KuxV2KuxV5H5+0HSNL8xjUtTS6XS7++tLtXtruSK3hNu3O8ee3WWEbqiyl&#xA;xy6E8QwPOwGRFDkwIiDZ5siudAn0/TbTSdRuNNg0C0kS1ttSn+C4+pGVGSw4FUjTmIkiMnq/HQfB&#xA;yIpWzXr5H8tz3Oua7+lJDoeu8bq+tbW4ZLORY4RHM8jK7BhIqfGU4VAoa71VTT8u9TtL/wAl6Qbe&#xA;Qu9taQWt3G4CSxTwxKskcqCnFwe3SlCPhIOEgjmgG2R4EsR/MHRLbVksLK5keGDVBe6NdTR/bSDU&#xA;bKZSyVBHP1I4wpIxVKI/I/lHyr5i8vCyeQXN/qD8FvbmS4fhFYTfBCZ2Zh8aQ1oanivZRRVnt/ep&#xA;ZWzTtHJMQQqQQKXkdmNAqqPxJ2A3JABOKvNvPNgLvzLo7eZIbIpcWl1Da245Sqs6XEMi8ZpFjq7p&#xA;xYBUBqrdQNsrSgEkFxtSSACFn5c6Nptr5+1CTSYUt7e1sDFqCxfZaa6mSSLlv9pfRlP+yr3x1QiD&#xA;QRpjIiy9CvfMOmWd8LCUzvdmIT+lBbXFwRGWKBiYY5AKsp65iuUhp/NllFx4WWpT1rX07C7FKePO&#xA;NPwxVS/xnbf9WrVv+kCf/mnFV0fm+CRwi6XqgLbAtZTKPpLAAYqif8Qf9q2+/wCRH/N2Ku/xB/2r&#xA;b7/kR/zdiqnceaLe2haa4sryGFKcpJIgqipoKksB1OKum80W8HD1rK8i9VxHHziC8nboq1bdj4Yq&#xA;5vNFuk8cD2V4s8oZoojEA7KlOZVeVSF5CvhXFUx06/t9Q0+2v7Yk213Ek8BZSrFJVDrVWoQaHocV&#xA;RGKuxV2KuxV2KuxV2KuxV2KuxV2KoPVdY0rSLNr3VLuKytVIUzTOEUsfsqK9Wbso3PbFWA6nqsnm&#xA;PWY70QSQaNZwyQ2aXCGOS4ecr6kzxN8SIqRhUDgN8T8lA45sNNhI3LgajKDsFum6t5h0hrLQbSK3&#xA;1jT753tLK0vpGheJVt5ZvTa4CT+pFwh4qGi5DuzdqdRgEdw24M5lsVLWb7zFquqS6BrKQafpcVtB&#xA;cHTbMs4nDPIjRSzyLGXiT0lqiRpXkAxKnjjpsYkd+idTkMRt1ROkTfozzfYXUXwxasTYagvRWKxv&#xA;LbSt/lI6GMe0m/QUu1cNradLPenpGa9z2H+Z/Lml67530Jb5Gf8AR9jf3EDRyyRSRTm4shFKpjZT&#xA;UcHxVR1Xyfo9trvlq7P1q6vhqDLHdXU8916YFrcTtxWV2jj5GELyVQe2Ksg15ooptJu5lT0ba+Uv&#xA;I6uzIZ4ZbWNk4K1CZJ1Uk0AUsScVTC8sbK+t2tr23jurZ/twzIsiN81YEHFUs0Oy0+2v79dNtI7S&#xA;xhWG2VIYEhjMkXNnKMtOaqJVTpRWVh1qAqhJ7TU5fOd3PY3MFu0enWiMJ4HnqHnuTtwmgp9j3xVH&#xA;/VvNX/Vxsf8ApBm/7K8Vd9W81f8AVxsf+kGb/srxV31bzV/1cbH/AKQZv+yvFXfVvNX/AFcbH/pB&#xA;m/7K8VUp4POagehe6bIf2hJaToAPaly+KpN5h8tecNe042N7c6Yqc1kjkjhnDpIn2XXlI61Ff2lO&#xA;KqWoeSdY1OysbO/NiYdN4izMH1lGEaqEaNnkeZjzVQpYEP4MDiqrqflbX7rzBZ66IrGW9tFCojyz&#xA;pHVA4jegSQ8kE8o+EqDy+LlReKqeeT+f+EtE50D/AFC15BelfRWtK4qm+KuxV2KuxV2KuxV2KuxV&#xA;2KuxV2KvMdSltdR866zPMwuJtHlis7RiQyW6PawzSKg6I7PKfUP2iOIOwGbDSRFX1cDVSN10X6Va&#xA;a95gUTaSsVrpTV4atdBpPVptytrdChkQ/wC/GdAeqh1NccmqA2iuPSk7lbqXlPzdpmvWV/pTXOpm&#xA;xVpVmla2ZGeVDEY1tQ1gtFDMTzm5bqVdqMjYc8spc3LhijHkyQeT31i8TUPNf1e9kigeC1sYYmii&#xA;iSV0eT1C0splcmJN9gu9BuSYAkMyLddflr5TdEaytTpl3BIs9td2bFGjmjPJHKHlFJxIrxkRl9se&#xA;IrwhH6DrF3NPPpOrKsWs2QDOYwViuYGJCXMIJYhWpR0JJRtjUcWYJWacTc+b9YuAaw2dvaWIr+zP&#xA;+8uZqfOO4gxVvWKT+ZvL9rTeFrvUPohg+q+I/wCW4eOKp2yqylWAZWFGU7gg9jiqVxeW7CFY44Jr&#xA;qG2iMZito7iVI1ERqqqA1QniteJG1KbYqj7Kys7G1itLKCO2tYV4wwQqEjRfBVUADFUos5nPnnV4&#xA;Sf3aaZpjqPd7i/B/4gMVT0kKCSaAbknoBirG/LXm2XVryWG5thaxXKNeaHIGLfWrBW9P1dwOL14u&#xA;V7JJH3JAVW6pcXXmC+n0PTp5LbTrY8Nb1KB2jl5FQfqdtItGWQqwMkimqDZfjNUVQ2med7Sx09bX&#xA;X5mXUdPMllqVxxFGuoOPpAIhLerexOs8MSKSVanXFU/0TWoNVt5ZFgmtJ7eQw3VnchVmhkChwrhG&#xA;kX4kdXHFiKEYqo6Zq9xqOrX8cCL+irBhbfWNy0t2u8wQ/Z4Q7ITvV+S7cDVVQ84eYrjRLC2e1hSa&#xA;7vrlbS39ZikKOyPJzkZQxpxiIAH2motRWonjhxGmGSfCLYBLoA1PU77VPMn1fVby7KLAjQUhtYI0&#xA;UCGBJXmK1cNI7cviY9qDNljwCI73X5M5ke5far5r0XTU/R2sXN6+nKBY6dMIBDJBFX07RmKB6slE&#xA;9Vn5cvirT4crlpY0a5s46qVi+TM/LXnKfVtTm06801tPuFi+s249ZJw0PMIfU4AcJASKqOS+DHem&#xA;HkxGHNy8eUT5MmyptdirsVdirsVdirsVdirsVSPztqd5pvli9urJ/Suz6cEFwQGELXMqQCYhvhIi&#xA;9Tma7bZKAsgMZmgSwS10G0u7yw8sQqfqd0ZbrVSWLPJbRENP6jtVna4mlRJCxqys5rXM/USEIcI6&#xA;uDgjxysvVlVVUKoCqooqjYADsM1zsG8VdiqldpcSWsyW8ohuHRlhmK8wjkEKxU/aod6Yqxe7ml1n&#xA;yxa+YoONjrmlpLMKhnWOeAmO9s5OILNEzxNG9ATUBwOSriqZeTrS9h0RbrUYPq2qanJJf38BIZo5&#xA;Lg8lhZhsxgi4Q1G3w4qtgP1rztdSUrHpdhFBG47S3krSTofcJbQN/ssVVJ/Nujw3t1ZFbuWezkEV&#xA;x9Xsby5RXaKOYKXgikSvpzKevfFVfTvMug6lObazvoZbtV5vZluFwq7fE0L8ZFG/dcVTLFWP2X/K&#xA;f6z/ANsrSv8AqJ1HFUB5/nvrtLfQtP8AVlacPdazb26o0kmmRIyywKZCgV7l2WJKMp+0wPwnFUfr&#xA;1hpmrWmmpaaomnXjSB9FvrZoi5HpN6iwK1UkDW5fajAfap8IxVWWKPSoLTQtDhEbKvJWkErRxwrI&#xA;vrPJLRuUzeoWUO1XapJ+0cVQFx+XeiO5u42k/SywIltqE9Lgx3USkR35hkHpPdCorKV5cRxBA2xV&#xA;DaimvXEy6z5chji1W6T9GaxayyRP9XYEmK5fixR2tTIW4VBdH8QoxVlGlaZa6Xptvp9qG9C2QIhd&#xA;i7tTq7sd2dj8TMdyd8VYt+ZemXd5aadP9VN/pdjcNPqNioDEhYz6U3pttIIX34eNGG6jLsEoiVlq&#xA;zRJjsxR9S82zwo+m+V7u4W9EZ0qaR4o4nV61luDVmgRRRtwXIOy1qMyzq47uINLJEz2f5hRW63Mu&#xA;jRRw2ZDaikUpuJZ0+y/1ONAGPGvqfF8RC8AhZto/mxtsy/KndJbbVbfVfO+hyeXJobi75RGa5tZV&#xA;aY2y3Cm4jlVSeMKQerz9UD42RV+PodTKJCNPGQL2/Ne57sVdirsVdirsVdirsVdiqleWlre2k1pd&#xA;xLPa3CNFPDIAyOjjiysD1BBxVifkbQbaw1nX7iCee4t45otOszct6rJFbxiVwkpAdh61wyEuWaqb&#xA;scnKZlzYxgI8ln5n6lc21npFvbOUL6lbXl4VYqwtNOkF5LuATxZ4o429mpkGTNMVdirsVY35Ynhl&#xA;13zGLFvU00XUdXpRRfKnpXaR77ovpR8jT+89QdQaKp/eXdrZWk15dyrBa26NLPM5oqIg5MzHwAGK&#xA;pR5QtrldNm1G8iaC+1id7+4hfZ4xIFjgicDo8dtHEj/5QOKpbaahJp9x5yuojbCRNWgCfXbg2kBL&#xA;aZYA85hHNx2O3wGp298VRUCQea9OKanYxCJCJbHUrK6juYvUBZRLaXCCOVJYyu7emvWgLb4qr+S9&#xA;al1fQvWnmWe6tLq70+6nQBRJLYXMlq0vFdl9T0ufEdK0xVZZf8p/rP8A2ytK/wConUcVT1beBZ3u&#xA;FjUXEirHJMFHNkjLFFLdSFMjEDtU+OKpMPKkPr3jC8nSCco1naQlYIrRlZZWaIQiMsZJk5vzJrUj&#xA;7JIKqYaXpcVhCwDetdTlXvbxlRZLiVUWP1ZPTVF5FUA2AAGwxVGYqlM1/wCXtL1K4e51G2s7i7WN&#xA;5baWWGKrICgmoeLlmQKhYk/CigdMVUV8+eRnl9FPMWmNNUj0xeW5ao6inOuKtecHNz5Vu4bZwf0o&#xA;sVjFOhqFF/IlsJVK/wAom5VxVZdzXVt5h0/TLG5kIupHu7uArGYoLK3t/R9NCEqgkuGjIBNT8fE0&#xA;FAqmks8tnHf3l9cQrYxAzRMVMXowxxAyetIWcN8Ss3IKtF2oaVKrA/yl0A2cs1w98mqi0sbTTor6&#xA;OFooxNHzN4kZfeQFhFyfxXj1U5OcyaB6MIQAsjq9IyDN2KuxV2KuxV2KuxV2KqcFxb3EfqW8qTR1&#xA;I5xsGFQaEVHhiq6aWKGJ5pWCRRqXkc7AKoqSfkMVSbyXFKnlewlmUpcXqNf3MZ24TXztdSp/sZJi&#xA;MVYj5mn1rVNU1xYtE1HiNCubDSLgRqkck15X1QW5803ghoSvc/Sqy5PN2n8QZbPUoWZ+AU6deufn&#xA;WKKQBfcnFVtp558rXOqw6QL76vq1wnqQafdxTWlw6b/EsNwkTkfCeg7Yqm19bSXVlPbR3Elq8yMi&#xA;3MPH1IywpzTkGXkO1QcVYD5G8ta5pfljRrvQLu3a3vLC0nurC4DemZ5IUaaWGdORUStV2DRtVyWq&#xA;KkYqyKPy9rOpTxy+ZLyKe1hdZYdJs42S39RCGVriRyzz8GAZBRFB3KsQCFWR4qwyK/0a1uvN66rq&#xA;S6ZDPq0SLOZxbOW/RdgaRuSDyP8Ak74qtsf8Q6gs9npF1qEWlTcVOr6oiRyxJvzFjG0cdw7sD/eX&#xA;I4rsV5ioxVGflvp1pYeXJILMBbVb+/WGMVPBYrqSLjU1Jp6fXFUZZxOPPWrykfu20vTFVvErcagS&#xA;P+GGKrJNa1fUr6a00CKEW9pI0N3q93yeETIaPFBDGUaZkPwu3qIqttVmDKFUtm1rT7eU20/ny1i1&#xA;MPx+ryNp6pz2+AwkCbv09SvviqPj8wanpl9bWXmKOER30ogsdXtA4t5JX+xFNE5drd36J8bqx25B&#xA;mVSqyPFUimk89eq/o2+lmLkfTLzXAbjXblSKlaYqmemnVDag6mkCXVTVbZnePj23dUNfoxVD+YtP&#xA;ur/R5oLNgt6jRXFoXJVDPbSrPErkAng0kYDe1cVSG7udL8ywI9rawN5kswA+k6hPLZyxVYc0uFhW&#xA;RpI6rUfC0b0qpp8WKoTzdr9pf2EXlM36NqWpyQWOs3FivOO1inYLKHLCVY2nr6MSyb1cNQqGxVmW&#xA;mabZaZp9vp9jGIbS1QRwxgk0VR3JqWJ6kncnc4lUTirsVdirsVdirsVdirsVYT5P8q+Xb/ytpd5c&#xA;WES3726Br+AG3uvh2H+kQmOboB+1iqM13yZdT6JqNlpur38YubaWJbOadLiKRmQqEeW7juZ1Vq0Y&#xA;q4NOm+KoiHzzox9OOa11K1uCoLwSabfH02puhkSF4iVO1Vcg9iRiqv8A4y0Pwvf+4fff9UcVUG8/&#xA;eXVmERXUA5IFf0XqXGp/y/q/H6a4qwrSfMug3N1r2oa/5Y1C4jOoTLNql1p6SQLbQs0Nr6cbs1z6&#xA;XooHJEVAWZjSpxVC675v8taBf18rQR6RJb8HmaMejp08JuHtHE0MSlPgm9JjKoDiJ/UUuqsjKsg0&#xA;PWPN1r+XdtqEVvp0CaVpv7y2LzSt6ljCyTQNQQrGyyxcDQsF3+13VZLr0+rHU9LsLK8WxivDP684&#xA;RZJaxIGRYxJVBX4q1U4q1/hQTEHUNX1O+4/ZBufqgHzFgtmG/wBlXFVS10jyjoNzFJBa2en3l/IL&#xA;eKfiiT3EvBnEfqn95I3CNjQkmgxVX1vVZLH6hFAgkutQvIbWFGrTiayztUd0t4pGHuBiqV/lz/yj&#xA;Tnx1PVz9+qXOKrdd1k6Nea9qaxiaW302xMMLNwV5WnukjQtQ8QzsATTDEWaQTQtjekwjVtd/Q1zD&#xA;daRaXiTX95pdpcLcadciOSMSKJWSC4gLyTqzxoqpJ8Va1atmXCYc2vHlE+T0aCxsoLNbKC3jis0T&#xA;00tkRViCUpxCAcePtTKm1515qtNM8utFpV1LdXHlm75XFn5dso41cNC8YeEXEssQW3DyIyQR8Wry&#xA;AJjHAKs68va5aa7o1tq1ojxwXKkrHKFDqVYoytxLLUMpGxxVbqXljQNSulu76xjnuUAVZmBDAKaj&#xA;cEdCcVW/4V0H/ll/5KSf81YqiNQ1bR9HtUl1G8hsbeojje4kWMFqbKpcjk3gBvirBvNeseXNf1fS&#xA;LW70uS60rT7hbnVrq/tDFCkF1FPaQALdLHI6tcOjF0UooWrNiqZedNC0rT/KN8LQiyMaA6dFGg/3&#xA;sDBrQRIgqXNxw4gA74qv0z8wbhmW11bR5rbUEk+rzC0lguojMsZkYQqHS5koEcGkPVGFTSuKpxa+&#xA;cPLlxOlsbwWt3IeMVpepJZTuenwQ3SwyN9C4qnOKuxV2KuxV2KuxV2KsG0xrIflhp4u5IYomijAm&#xA;uFkaJGElQzNEyPH02fkOJofbFU28saRS3g1D63K4kUPEsOpXOo2ssbLVZFe5+L4q1FCR03OKsjxV&#xA;K4/M+iSasdJS4Jvw7R+n6cgUuqGRlEhX0ywQE05YqmmKtUX7O2/bFWEwflL5Ytr43YmujbR3VvfW&#xA;1k8oMED2qBFSOq8vR4Ig9MsVHEUpviqot15U1T8vtZsPLSo2nR2NzClrFG8Q4zwNIjKjBWKTLJzR&#xA;xswNQcVTLVLhZr/yndeiedxeOAQa+msmnXMhr9KAYqi/MuuTaTYCSztP0jqU0sUFnpwkELSvK1Pt&#xA;sGChUV3JI6KcVYtfahoXme/Lam8lhpdnEtnELgGCaPVbqRTty/u57X04/TdduUuxO1VUy8v/AKb1&#xA;DzAZNZt2im0G3a09YIVguri5YM9zDXt6EUZAFeJkdK1U4qivIRC6JPD6Zj9HUL8EHv6l3JNy+n1M&#xA;VQvnvyvfalp+p3en3D/W3sRGljxVkmktXa4gG9CGMhpX3wxNG0SFimIjVng1DSPMdndNHpTQSw3U&#xA;8cXrFILv0pEnMdCxVGgUNToGLdFObDUwMoghwNPMRkQWcR3Ukth+kY/M9s+n9fripbmHx/vA3H8c&#xA;1zsHlvnLzLBqWoSXD3xvtOsozBZ3qIIuRkY/WGgC/wB6JTGsaMK/YkZQQASq9J8p+Wtf0zy7Y2j6&#xA;l6Ewj9S4gEKSBJpiZZVDsSWAdyATiqb/AKO17/q8f9O0f9cVSrXz5ntEs7az1YG+1K5W0tma2j4p&#xA;8DyyyNvv6cMTsB+01F2riqa6T5Y0nTZfrSo11qbLwl1S6PrXTjuDK32VJ34JxQdlGKpX5wjuoL+w&#xA;v4NLk1mOeG60u70+NVIeO6VZFaUvRBGrW/Bi2wDnY9MVeb+Utf8AM8OsXTX1jeeYJ9Eja1trHgWG&#xA;n300s8UUcUu5njKxCF7qQsyDcsFaULOUQAKYRkSTb1TQfKWnaWkE0qrdamkaeveOoq04a4kknRTX&#xA;g8j305JHZyOmQZpxd2dpe20lreQR3NrMvGaCZVkjdT2ZWBBHzxVics195U1a003TrSXUNJ1Xkmn2&#xA;hmVfqtxCjSPDG8x/u5IlLpHX4ODcfhoFVTz9I69/1Z/+nmP+mKqVxq/mGJQy6C83iEuYBT3PMpiq&#xA;N0TVE1bRrHVI4ngjv7eK5SGTjzVZkDgNxLCoDdjiqNxV2KuxVj/lK8sLbyJo16ziGz/R9tO0jbAC&#xA;SJXJPzLYqgvMXm+dbexby7PazNLqP1G+eeN5BEBZy3VOCyQMHPGPqfst0yzFj4pU15Z8MbUNK8+3&#xA;02n2U0+nPdlrS2u7+9teEMCLdSyxKUjmkMhp6BYryJAI65CQos4mwtsi9vdaTy+MXvmTUwpr9kLb&#xA;3/X/AJE4Es2xVgur+XG8yec5760v5tPl0CKCCC5iCSA3p5XDIySAkRrFLH6ojZfVD8Wb4BRV2o+d&#xA;tWF/D5ReAWXmm9KxpexFZbRIXDt9bjDH1KlIZeEbps68WPGjsaNWi96ZLZ+XdO0zQX0fSYEtoPSe&#xA;NB/M7LxLyNuzMx3ZjUnAlJraS6l07yHIG5c5Y2uWNKlTpF0e/wDl8emKorWPLban5t03UADappkD&#xA;yLfxCMTNM8iqkXJ1esYi9ZXUj/dm1DuFUw0zTb0XAv8AVnguNRVPRiaGMIkUbcfUEZblJ+9eMOwL&#xA;GlFG/HkVUZa21pp1isENY7W2U8Q7s3FBvTk5Y0A6b7D2xVIPIDxz6fqF9AWexv76S4spm6SRGOND&#xA;InjG0iPwboy0YVBBKrJ8VYTq/kK/guZrzyzcwwLO7zXGk3YY2zyu3J3hlSr25diWb4HUncKCSTkY&#xA;tQY7dGjJgEt+qT3fkLzG/la+UW9uNcu9U+vLDDKGiQG1Wx5LLJHHypGDJuo8Mryz4pWzxw4Y0i/K&#xA;v5Y3MWpRav5kkgmuLaUz2lhbcmhSatVmkkcK0jrtwXiApAPxMAwrbHoeKuxVIdrzzt0Pp6PYbGtV&#xA;aXUJPD+aOO0+6TFU2j1Czkv57BJK3lskcs0JBBEcxYRsKihDGNhUdwcVRBIAqdgOpxV5j+WF0f04&#xA;bhl4v5h099Sde6st21wV+g6oR9GZOeFRj7nHwzuUve9OzGchQ+v2n1/9HmSl2YvXERBFYw3AsDSh&#xA;o1K0O1RXqMVSvzjZ3E+gzT2kZl1DTmTULCNftPNat6oiB7esqmJv8ljirT+dfLawQz/WmeK4RJYm&#xA;ihmlBSRQ6N+7RtirA4qgNe8yWGqeWtUt9Kll+tTxrZRO0M0PCW+cWsLAyoleMkgO2KsphiihiSGJ&#xA;QkUahI0GwCqKAD5DFV2KuxVxIUEnoNzirEfKM+ia55H07RzfQTzpp1tBfw2c4EkUiwoGHwHnGysO&#xA;9CMVVrn8vtNktDBDf39vM95+kJLwSpPO0/1YWlS10lwvEQgLTjkoTMTYYzgJCihz+X8kEEVpp+pG&#xA;GzFpp1jOJ4fVlePTp5JuYeN4EV5vWYP+7I8B2yJLIBW0/wArazDqVq1zd282m2Oo3up2oWORbjne&#xA;/WaI7F2Tii3rD7PYYqyHU5b+LTrmXT4VuL5I2a2gdgivIBVVLGg3PiR8x1xVK/JVnf23l+L9IwmH&#xA;ULiW4uboNx5s887ycnVWkVCVYfAHYJ9gMwWuKpy1tbtcJctEhuI1aOOYqC6o5BZQ3UBii1HsMVVM&#xA;VYHo9zOPJ35dzcyZZBp4dzuT6mnSK1a+IY4qya982eWbKY29xqdst0NvqiyK85PgsKFpGPsFxVDN&#xA;5l1C6+HR9Eu7muy3F6v6OgB/yxcD61T3W3bFVreW7/VSG8y3SXFtWo0a1VksyOwuCxMlzTpRuMZ7&#xA;x1xVkIAAoNgOgxV2KuxVh9pa69ea9q9jc+Zb60mtpVuLW2totP8ATNlcVMLD1bWaT4XjkiNXJJTl&#xA;tyGKp3+htR/6v19/wFj/ANk2Ku/Q2o/9X6+/4Cx/7JsVabRdT4njr98Gp8JMdiQD7j6sMVSzyhDe&#xA;WOr6/p2pXH1rUJLiK+S7KLGZrWW3jgjPFAFBja2dGA8A37WKoTzLq0tt500uazQGPTYwmuzdONtq&#xA;UywW6b7VEyesx/ZRD/Piqded7iW28ma7PC/CaPT7owv0o/otwNaH9qmEc0HkxDRVW0836DDbJxQx&#xA;XVsVUmiwiJXp8ucSdcz9WPSHB0p9Rek5r3PY/wCZ/wDQr/RtbGwtLkWV2e5ttQKw0+QuRA7HsqnF&#xA;WQYqwzy7ozyfW9KXUr2zTQbp7SO2tnRYjbvS6th8UbNRILhItm/YxVH6zZiOXQdNaaW4iudTWSUz&#xA;vyelrBLdJ0AqFmt48VZJirsVdirsVQWpaHouqKq6np9tfKv2RcwxzAfLmGxVADyV5fT/AHnjuLNP&#xA;99WV5d2kfWv93byxp+GKtr5auoqC217UoEqCUL29xUCu3K5hnfeu/wAWKuTQ9diMfDzHdTBa8xcw&#xA;WbFia0r6MMFKe2Kuh0/zdG7M2s2syn7KSWJ2+lLhMVdNp/m6RlK6zawgdVjsW3/4O4fFWzomuSOz&#xA;SeYbqMVUqlvBZoAB1B9WGckN88VWjyqJRS/1fU707b/WTabim/8AoC2g7YqjpdB0WfTIdLubKG60&#xA;63WNYrW4RZ0AhAEe0nKpWmxO+Kq9lYWNjALeyt4rW3X7MMKLGg+SqAMVV8VdirsVdirsVY95qP6N&#xA;nsfMqnjHprNFqfvYXFBKx/4wSKkxP8iuB9rFWQ4qxPzV5wvNH1M20f6Phhis2vS+oXRtmuCjMGig&#xA;ojAcAgZ3Nacl+HuFWTWVyLqzgugjxCeNJRFIOLrzUNxYdmFd8VSDzxLNpVlH5ptYHuJ9DWSS5t46&#xA;c5rGQD61GK7VUIsy+LRgd8VQt3ptvY+R9UXWrlVvdajlbULmPlJyurtBFHHAqhnfgOEUKqvIhV2L&#xA;YqvHmCbUtBWLXPLeoxWWoWvC/Krb3KUmTjInpWs81wQanpH86Yqwfyh5hl0nzLbwana32o38kUuk&#xA;6PJHGkRnEf8ApEtxP9Ze3ET3CRRKEahEiOKUKk3ZcvGB5NOLFwkvSBr2uOiGPy3eozGjrPPYrxHj&#xA;WK4mrlLchNZi816xpN9praRZxW97FNbO0uoSJIEkQqHX07WYA7+O2Kpvor6+bRF1qG1juljjDvaT&#xA;PKjyU/eGjxQ8BX7PXFUmu7y20fzvNd3cq21jqGmo008rBIkaxlfk7MxCj4bpASewGKr4tU0vV/Nm&#xA;lS6ddw39pDY30hltpVlRZTJaqnxIxFeDvirJsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdir&#xA;sVdirsVWTQwzwyQzIskMqlJI2FVZWFCpB6gjFUk8ozTQ2k+iXUjS3miSC1Mshq0tuVD2sxJ+0WiI&#xA;V2/34r+GKp1PbW1wEE8SSiNhIgdQ3F1+ywr0I7HFVTFXEBgQRUHYg9CMVeHfmEdWtXsfK8FvNcW+&#xA;jyNwMVGf9HXQCW7iNioPpRiaDlybkEIYUkOKrvy61vzZaxXd3MP0PpihUWG8s7yeBSnECswRZPsf&#xA;DzaRET9mGlAqrKvN+tebY9a0Cxu9AdtPF1FeXOraa1zerH9XYlo2hjtg451UCp7nsrYqyP8A5WD5&#xA;SjFby+/RpP7OoxyWTdAacbhYz3xVMrHzDoWoJzsdQt7lKV5RSowp9BxVF/W7WlfWSnjyGKsIvdTt&#xA;9Z85RXNgxe10W1ubOa5H2HuLqWB2jRu5hFr8fu1OoIxVPNMmF15uv5q8lj02xVaH7LyTXRlWgPWi&#xA;J1XFWQYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FUn1fyno+rXaXlybuG6SMR&#xA;GayvryxZowxZVk+qTQeoFLMV51pU06nFUP8A4G0X/lp1X/uMar/2U4q7/A2i/wDLTqv/AHGNV/7K&#xA;cVU2/L/QmYsbrWKnw1vWAPuF3iqHP5YeVjeLeGXVzdqhiWc65rHMRsQzID9b+ySoNPbFV9x+Wnlm&#xA;5heC4m1aaCQUkik1vV2Rh4MpuyDiqPg8oaTBy4T6keVK+pqmpSdPDncNT6MVVG8r6aylTNf0Ioaa&#xA;jfg7+BE9cVSLUfye8gak4fULO6u5AeQebUdRdq+PJrgnviqkv5J/lkihF0hhGAV9P63ecOJ6jj63&#xA;H8MVXxfkv+WUTKyaInwiihprhhSlKcWkIxVkWg+WtC0C2kttHso7KGV/UkWOvxPQCpLEk7DFUzxV&#xA;2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2&#xA;KuxV2Kv/2Q=="/>
    </rdf:Alt>
   </xmp:Thumbnails>
   <xmpMM:DerivedFrom
    stRef:instanceID="xmp.iid:4cd8cbcf-0742-2e4b-86bd-d6c0c9aa90e3"
    stRef:documentID="xmp.did:4cd8cbcf-0742-2e4b-86bd-d6c0c9aa90e3"
    stRef:originalDocumentID="uuid:5D20892493BFDB11914A8590D31508C8"
    stRef:renditionClass="proof:pdf"/>
   <xmpMM:History>
    <rdf:Seq>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:6eeade72-cf12-a347-b31a-85118ae3f1e8"
      stEvt:when="2021-10-28T14:45:37+09:00"
      stEvt:softwareAgent="Adobe Illustrator 26.0 (Windows)"
      stEvt:changed="/"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:4cd8cbcf-0742-2e4b-86bd-d6c0c9aa90e3"
      stEvt:when="2021-12-04T12:05:29+09:00"
      stEvt:softwareAgent="Adobe Illustrator 26.0 (Windows)"
      stEvt:changed="/"/>
     <rdf:li
      stEvt:action="converted"
      stEvt:parameters="from application/postscript to application/vnd.adobe.illustrator"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:6493114c-6bf1-a64d-b777-4e981384e288"
      stEvt:when="2021-12-04T12:05:39+09:00"
      stEvt:softwareAgent="Adobe Illustrator 26.0 (Windows)"
      stEvt:changed="/"/>
    </rdf:Seq>
   </xmpMM:History>
   <xmpTPg:MaxPageSize
    stDim:w="740.000000"
    stDim:h="400.000000"
    stDim:unit="Pixels"/>
   <xmpTPg:PlateNames>
    <rdf:Seq>
     <rdf:li>Cyan</rdf:li>
     <rdf:li>Magenta</rdf:li>
     <rdf:li>Yellow</rdf:li>
     <rdf:li>Black</rdf:li>
    </rdf:Seq>
   </xmpTPg:PlateNames>
   <xmpTPg:SwatchGroups>
    <rdf:Seq>
     <rdf:li
      xmpG:groupName="Default Swatch Group"
      xmpG:groupType="0"/>
    </rdf:Seq>
   </xmpTPg:SwatchGroups>
  </rdf:Description>
 </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                 
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1  -1  scale 0 -400 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 400 li
740 400 li
740 0 li
cp
clp
740 400 mo
0 400 li
0 0 li
740 0 li
740 400 li
false sop
/0 
[/DeviceRGB] /CSA add_res
1 1 1 rgb
f
310.564 103.53 mo
310.298 103.53 310.067 103.332 310.033 103.061 cv
309.996 102.768 310.204 102.5 310.498 102.463 cv
311.367 102.353 312.25 102.297 313.121 102.297 cv
313.129 102.297 li
313.712 102.297 314.304 102.322 314.887 102.371 cv
315.181 102.396 315.401 102.656 315.376 102.95 cv
315.351 103.245 315.087 103.463 314.797 103.439 cv
314.24 103.392 313.686 103.361 313.121 103.369 cv
312.294 103.369 311.457 103.422 310.632 103.526 cv
310.564 103.53 li
322.988 105.901 mo
322.731 105.836 li
321.509 105.167 320.216 104.624 318.888 104.223 cv
318.605 104.137 318.445 103.838 318.531 103.555 cv
318.617 103.272 318.916 103.112 319.199 103.197 cv
320.597 103.62 321.958 104.192 323.245 104.896 cv
323.505 105.038 323.6 105.363 323.458 105.623 cv
323.361 105.801 323.177 105.901 322.988 105.901 cv
302.524 106.312 mo
302.343 106.312 302.166 106.22 302.066 106.053 cv
301.913 105.8 301.994 105.471 302.248 105.318 cv
303.5 104.562 304.838 103.937 306.224 103.459 cv
306.504 103.362 306.808 103.51 306.905 103.79 cv
307.002 104.07 306.853 104.375 306.573 104.471 cv
305.259 104.925 303.99 105.519 302.801 106.235 cv
302.714 106.288 302.619 106.312 302.524 106.312 cv
329.467 111.419 mo
329.308 111.419 329.15 111.347 329.044 111.212 cv
328.191 110.115 327.222 109.102 326.164 108.2 cv
325.938 108.008 325.911 107.67 326.103 107.445 cv
326.295 107.22 326.634 107.192 326.858 107.385 cv
327.973 108.333 328.993 109.4 329.89 110.554 cv
330.072 110.788 330.03 111.124 329.796 111.306 cv
329.699 111.382 329.583 111.419 329.467 111.419 cv
296.305 112.117 mo
296.198 112.117 296.091 112.086 295.997 112.02 cv
295.755 111.849 295.697 111.515 295.867 111.273 cv
296.711 110.075 297.68 108.961 298.747 107.963 cv
298.963 107.761 299.302 107.773 299.504 107.989 cv
299.706 108.205 299.695 108.544 299.479 108.746 cv
298.465 109.694 297.545 110.751 296.743 111.89 cv
296.639 112.038 296.473 112.117 296.305 112.117 cv
333.216 119.059 mo
332.977 119.059 332.76 118.899 332.698 118.657 cv
332.349 117.306 331.862 115.991 331.252 114.746 cv
331.122 114.481 331.232 114.16 331.497 114.03 cv
331.763 113.9 332.084 114.01 332.214 114.275 cv
332.857 115.584 333.368 116.968 333.735 118.389 cv
333.809 118.675 333.636 118.968 333.35 119.042 cv
333.216 119.059 li
292.924 119.929 mo
292.815 119.918 li
292.525 119.858 292.339 119.574 292.399 119.285 cv
292.695 117.853 293.14 116.445 293.722 115.101 cv
293.839 114.829 294.154 114.704 294.426 114.822 cv
294.698 114.939 294.823 115.254 294.705 115.526 cv
294.152 116.804 293.729 118.141 293.448 119.501 cv
293.396 119.755 293.173 119.929 292.924 119.929 cv
333.652 127.562 mo
333.57 127.556 li
333.277 127.511 333.077 127.238 333.122 126.945 cv
333.279 125.922 333.359 124.878 333.359 123.842 cv
333.359 123.49 333.35 123.133 333.331 122.78 cv
333.316 122.484 333.543 122.233 333.839 122.217 cv
334.144 122.205 334.386 122.429 334.402 122.725 cv
334.421 123.096 334.431 123.472 334.431 123.842 cv
334.431 124.932 334.347 126.031 334.18 127.108 cv
334.14 127.373 333.912 127.562 333.652 127.562 cv
293.461 130.507 mo
293.233 130.507 293.021 130.36 292.95 130.131 cv
292.733 129.439 292.549 128.726 292.403 128.014 cv
292.107 126.577 291.956 125.108 291.954 123.651 cv
291.954 123.355 292.193 123.115 292.489 123.114 cv
292.49 123.114 li
292.786 123.114 293.025 123.354 293.026 123.649 cv
293.027 125.035 293.171 126.431 293.452 127.798 cv
293.592 128.475 293.767 129.153 293.972 129.811 cv
294.061 130.094 293.904 130.394 293.621 130.482 cv
293.461 130.507 li
330.671 135.536 mo
330.573 135.536 330.474 135.509 330.386 135.454 cv
330.135 135.296 330.06 134.965 330.217 134.715 cv
330.959 133.537 331.582 132.28 332.068 130.979 cv
332.172 130.701 332.482 130.561 332.758 130.664 cv
333.035 130.768 333.176 131.077 333.072 131.354 cv
332.56 132.724 331.904 134.047 331.124 135.286 cv
331.023 135.447 330.848 135.536 330.671 135.536 cv
297.594 137.947 mo
297.443 137.947 297.293 137.885 297.187 137.761 cv
296.232 136.654 295.387 135.444 294.676 134.164 cv
294.532 133.905 294.625 133.579 294.884 133.436 cv
295.142 133.292 295.469 133.384 295.613 133.644 cv
296.288 134.86 297.091 136.009 297.999 137.062 cv
298.192 137.286 298.167 137.624 297.943 137.817 cv
297.842 137.904 297.717 137.947 297.594 137.947 cv
324.76 141.655 mo
324.588 141.655 324.419 141.573 324.316 141.42 cv
324.15 141.174 324.214 140.841 324.459 140.676 cv
325.607 139.898 326.68 138.996 327.647 137.995 cv
327.852 137.782 328.192 137.776 328.405 137.981 cv
328.617 138.187 328.623 138.526 328.418 138.739 cv
327.399 139.794 326.269 140.744 325.06 141.563 cv
324.968 141.625 324.863 141.655 324.76 141.655 cv
304.344 143.127 mo
304.112 143.074 li
302.795 142.439 301.539 141.664 300.377 140.772 cv
300.142 140.592 300.098 140.256 300.278 140.021 cv
300.458 139.787 300.794 139.742 301.029 139.923 cv
302.133 140.77 303.327 141.505 304.578 142.109 cv
304.844 142.237 304.956 142.557 304.827 142.824 cv
304.735 143.015 304.544 143.127 304.344 143.127 cv
316.874 144.85 mo
316.619 144.85 316.394 144.668 316.347 144.409 cv
316.295 144.117 316.489 143.839 316.78 143.787 cv
316.953 143.756 317.126 143.723 317.3 143.687 cv
318.493 143.441 319.666 143.086 320.784 142.634 cv
321.06 142.523 321.371 142.655 321.482 142.929 cv
321.593 143.204 321.461 143.516 321.186 143.627 cv
320.008 144.104 318.773 144.477 317.516 144.736 cv
317.334 144.774 317.151 144.809 316.969 144.842 cv
316.874 144.85 li
312.608 145.162 mo
312.591 145.162 li
311.129 145.115 309.666 144.914 308.241 144.562 cv
307.954 144.492 307.778 144.201 307.849 143.914 cv
307.92 143.627 308.211 143.451 308.497 143.522 cv
309.849 143.855 311.238 144.046 312.625 144.091 cv
312.921 144.1 313.153 144.347 313.143 144.643 cv
313.134 144.933 312.896 145.162 312.608 145.162 cv
0 0 0 rgb
f
314.273 94.3403 mo
314.043 91.684 313.247 89.0638 311.938 86.6446 cv
311.263 85.3971 310.444 84.1945 309.37 83.17 cv
308.263 82.1156 306.911 81.2732 305.69 80.3148 cv
301.835 77.2883 299.333 73.0436 298.786 68.6045 cv
298.356 65.1123 297.742 61.2563 298.715 57.844 cv
299.429 55.3355 304.047 48.3304 306.797 46.1737 cv
311.233 42.6947 317.812 40.5471 323.788 39.85 cv
329.764 39.1527 336.038 40.1849 341.155 42.9042 cv
347.758 46.414 352.149 52.6499 353.095 59.2274 cv
354.041 65.805 351.648 72.6163 346.955 77.9035 cv
345.011 80.0941 342.698 82.0331 340.762 84.2291 cv
338.053 87.3019 336.118 90.8543 335.098 94.4207 cv
332.623 94.8021 330.09 94.7938 327.574 94.7842 cv
325.447 94.776 323.32 94.7679 321.193 94.7597 cv
318.922 94.7512 316.647 94.7423 314.273 94.3403 cv
1 1 1 rgb
f
313.032 94.7888 mo
320.671 95.4192 328.382 95.4113 336.018 94.7651 cv
336.449 100.263 336.865 103.618 335.13 108.926 cv
334.283 111.519 332.756 114.154 329.983 115.445 cv
326.693 116.977 322.642 116.219 319.025 115.378 cv
317.623 115.053 316.175 114.699 315.067 113.898 cv
312.797 112.258 312.669 109.367 312.72 106.833 cv
312.819 101.904 312.918 99.2411 313.032 94.7888 cv
.67451 .831373 .968627 rgb
f
328.604 116.992 mo
328.15 116.82 327.755 116.543 327.497 116.183 cv
328.358 116.049 329.193 115.813 329.983 115.445 cv
330.433 115.235 330.851 114.99 331.238 114.715 cv
331.243 114.726 331.247 114.736 331.252 114.746 cv
331.318 114.88 331.382 115.014 331.445 115.149 cv
330.716 115.628 330.003 116.122 329.278 116.606 cv
329.064 116.75 328.837 116.876 328.604 116.992 cv
332.355 114.567 mo
332.309 114.469 332.262 114.372 332.214 114.275 cv
332.172 114.189 332.111 114.12 332.037 114.07 cv
333.56 112.677 334.521 110.791 335.13 108.926 cv
336.865 103.618 336.449 100.263 336.018 94.7651 cv
333.909 94.9436 331.794 95.0734 329.676 95.1545 cv
329.718 95.0262 329.771 94.9019 329.833 94.7821 cv
331.599 94.764 333.363 94.6881 335.098 94.4207 cv
335.118 94.3521 335.138 94.2833 335.158 94.2147 cv
335.183 94.2121 335.207 94.2095 335.231 94.2069 cv
335.446 94.184 335.66 94.1591 335.875 94.1345 cv
335.88 94.1393 li
336.688 94.9289 336.699 96.0711 336.863 97.062 cv
337.015 98.6313 337.12 100.219 336.849 101.783 cv
336.189 105.391 336.017 106.017 335.357 109.296 cv
334.934 110.816 334.4 112.361 333.594 113.78 cv
333.184 114.045 332.769 114.306 332.355 114.567 cv
.870588 .870588 .870588 rgb
f
331.445 115.149 mo
331.382 115.014 331.318 114.88 331.252 114.746 cv
331.247 114.736 331.243 114.726 331.238 114.715 cv
331.521 114.515 331.787 114.299 332.037 114.07 cv
332.111 114.12 332.172 114.189 332.214 114.275 cv
332.262 114.372 332.309 114.469 332.355 114.567 cv
332.283 114.612 332.211 114.657 332.139 114.703 cv
331.905 114.849 331.674 114.999 331.445 115.149 cv
0 0 0 rgb
f
349.594 74.3934 mo
352.098 70.4168 353.438 65.9058 353.288 61.4134 cv
353.425 61.4695 353.553 61.5471 353.663 61.647 cv
354.595 62.5747 353.875 64.3776 353.509 66.0776 cv
353.495 66.1178 li
353.337 66.9841 353.113 67.8409 352.724 68.655 cv
352.512 69.1243 352.294 69.5915 352.058 70.0526 cv
352.08 70.0126 352.095 69.9844 352.098 69.9844 cv
352.099 69.9844 352.092 70.0023 352.073 70.0465 cv
351.604 71.0996 351.723 70.9599 351.002 72.4142 cv
350.573 73.0938 350.101 73.7538 349.594 74.3934 cv
.870588 .870588 .870588 rgb
f
329.833 94.7821 mo
329.891 94.6695 329.958 94.5608 330.031 94.4563 cv
329.982 94.2177 li
329.92 93.1549 330.685 91.8283 331.156 90.7909 cv
331.156 90.7909 li
331.973 89.2402 331.858 89.2763 333.145 87.1309 cv
333.802 86.072 334.679 85.1296 335.545 84.1911 cv
335.561 84.1737 li
335.773 83.8645 337.269 82.0746 337.948 81.286 cv
340.265 78.5128 344.292 75.3148 345.754 73.6094 cv
346.983 72.3123 347.621 71.0224 347.963 70.4622 cv
349.293 68.5231 349.518 67.8247 350.576 65.4252 cv
350.681 65.2199 350.734 65.1173 350.733 65.1173 cv
350.733 65.1173 350.687 65.2041 350.597 65.3778 cv
350.708 65.0993 351.006 63.863 351.096 63.4901 cv
351.115 63.3691 351.133 63.2479 351.148 63.1266 cv
351.293 62.1948 351.184 62.5091 351.501 61.8635 cv
351.752 61.4972 352.225 61.3014 352.696 61.3014 cv
352.899 61.3014 353.102 61.338 353.288 61.4134 cv
353.438 65.9058 352.098 70.4168 349.594 74.3934 cv
348.549 75.7108 347.351 76.9422 346.055 78.0832 cv
344.027 79.9722 341.893 81.7858 339.978 83.7595 cv
337.055 87.1533 335.751 89.7063 334.115 94.3114 cv
334.463 94.2832 334.811 94.2513 335.158 94.2147 cv
335.138 94.2833 335.118 94.3521 335.098 94.4207 cv
333.363 94.6881 331.599 94.764 329.833 94.7821 cv
f
327.497 116.183 mo
327.231 115.812 327.111 115.354 327.224 114.831 cv
327.236 114.352 327.609 113.967 327.85 113.552 cv
328.858 111.867 328.365 112.909 329.068 111.174 cv
330.292 107.559 330.011 109.094 330.222 105.091 cv
330.405 101.234 330.411 98.7971 329.68 96.6962 cv
329.507 96.1414 329.522 95.6213 329.676 95.1545 cv
331.794 95.0734 333.909 94.9436 336.018 94.7651 cv
336.449 100.263 336.865 103.618 335.13 108.926 cv
334.521 110.791 333.56 112.677 332.037 114.07 cv
331.787 114.299 331.521 114.515 331.238 114.715 cv
330.851 114.99 330.433 115.235 329.983 115.445 cv
329.193 115.813 328.358 116.049 327.497 116.183 cv
.588235 .72549 .843137 rgb
f
330.997 91.091 mo
331.068 90.9528 331.138 90.8146 331.209 90.6764 cv
331.156 90.7909 li
331.156 90.7909 li
331.156 90.7909 li
331.106 90.8854 331.054 90.9841 330.997 91.091 cv
.870588 .870588 .870588 rgb
f
313.192 95.0738 mo
313.205 97.3004 313.217 99.0859 313.229 100.871 cv
313.243 102.812 313.256 104.753 313.27 107.261 cv
313.277 108.608 313.285 110.001 313.838 111.238 cv
314.917 113.647 318.191 115.437 322.595 116.025 cv
327.016 116.615 330.793 115.754 332.698 113.721 cv
334 112.33 334.431 110.473 334.76 108.691 cv
335.765 103.259 336.105 100.987 335.62 95.3689 cv
331.107 95.6526 318.084 95.4814 313.192 95.0738 cv
cp
325.273 117.276 mo
324.136 117.276 323.142 117.179 322.453 117.087 cv
320.16 116.781 314.636 115.64 312.86 111.676 cv
312.214 110.233 312.206 108.657 312.198 107.266 cv
312.185 104.76 312.171 102.819 312.158 100.878 cv
312.145 98.9375 312.131 96.9966 312.118 94.4888 cv
312.117 94.3368 312.181 94.1915 312.294 94.0893 cv
312.406 93.9873 312.559 93.9372 312.708 93.9531 cv
317.18 94.4142 332.021 94.6106 336.061 94.2621 cv
336.357 94.2388 336.613 94.4534 336.64 94.747 cv
337.206 100.893 336.869 103.179 335.814 108.886 cv
335.471 110.74 334.98 112.851 333.48 114.453 cv
331.324 116.756 327.913 117.276 325.273 117.276 cv
cp
0 0 0 rgb
f
334.556 95.214 mo
334.458 95.2048 li
334.167 95.1507 333.975 94.871 334.029 94.5801 cv
335.041 89.1443 339.305 84.8261 343.428 80.6502 cv
347.256 76.7734 351.215 72.7648 352.446 67.9443 cv
353.108 65.3513 353.026 59.0147 350.749 53.6486 cv
349.061 49.6704 346.643 46.681 343.564 44.7636 cv
337.777 41.1598 327.808 38.5804 319.95 40.623 cv
312.475 42.5665 306.366 46.2101 302.75 50.8824 cv
299.439 55.1592 298.004 60.4977 298.708 65.9143 cv
299.367 70.9868 301.848 75.9577 305.884 80.2902 cv
306.44 80.8879 307.036 81.4826 307.611 82.058 cv
308.821 83.2661 310.071 84.5153 311.081 85.9028 cv
312.906 88.4078 313.905 91.2924 313.973 94.2445 cv
313.979 94.5403 313.745 94.7857 313.449 94.7923 cv
313.168 94.8045 312.908 94.5649 312.901 94.2689 cv
312.839 91.536 311.911 88.8612 310.215 86.5337 cv
309.254 85.214 308.034 83.9949 306.854 82.8159 cv
306.271 82.2341 305.669 81.6323 305.1 81.0206 cv
300.911 76.5237 298.333 71.3478 297.645 66.0524 cv
296.904 60.3508 298.416 54.7304 301.902 50.2266 cv
305.663 45.3678 311.977 41.5888 319.681 39.586 cv
327.829 37.4668 338.148 40.1293 344.13 43.854 cv
347.401 45.8903 349.959 49.0449 351.735 53.23 cv
354.109 58.8234 354.182 65.4751 353.484 68.2094 cv
352.181 73.3112 348.119 77.4248 344.191 81.4031 cv
340.181 85.4641 336.034 89.6635 335.082 94.7761 cv
335.035 95.0338 334.809 95.2138 334.556 95.214 cv
cp
f
325.477 55.3724 mo
325.285 55.3724 325.046 55.5811 324.888 55.7749 cv
323.787 57.1303 323.358 58.9675 323.538 61.5563 cv
323.668 63.431 324.043 65.0116 324.675 66.3302 cv
325.51 64.6251 326.115 62.8453 326.483 61.012 cv
326.96 58.6391 326.754 56.9373 325.836 55.6565 cv
325.714 55.4864 325.621 55.4008 325.534 55.3792 cv
325.477 55.3724 li
cp
331.265 70.8382 mo
331.981 70.8767 332.708 70.8021 333.415 70.5823 cv
335.048 70.0739 336.454 68.8474 337.593 66.9364 cv
337.909 66.4057 338.015 65.7027 337.835 65.3361 cv
337.784 65.2311 337.69 65.1064 337.426 65.0749 cv
337.113 65.04 336.762 65.213 336.429 65.4088 cv
334.158 66.7484 332.326 68.6745 331.265 70.8382 cv
cp
309.986 64.7226 mo
309.557 64.7226 309.162 64.856 308.964 65.0941 cv
308.56 65.5791 309.023 66.381 309.241 66.7031 cv
310.679 68.8317 313.407 70.2037 315.689 71.166 cv
314.87 69.2992 313.769 67.502 312.227 65.9418 cv
311.787 65.4962 311.248 65.0137 310.582 64.8105 cv
310.387 64.751 310.183 64.7226 309.986 64.7226 cv
cp
328.292 94.9266 mo
328.285 94.9266 li
327.989 94.9229 327.752 94.6803 327.756 94.3844 cv
327.757 94.297 li
327.809 89.1375 328.076 83.7457 328.549 78.2724 cv
328.746 75.9924 328.993 73.7671 329.745 71.6847 cv
327.95 71.2541 326.325 70.267 325.267 69.114 cv
325.08 68.9098 324.902 68.6974 324.734 68.4768 cv
324.5 68.8723 324.254 69.2633 323.996 69.6496 cv
322.55 71.8115 320.966 72.9294 319.154 73.0674 cv
318.593 73.111 318.044 73.0492 317.512 72.9303 cv
317.998 74.3886 318.356 75.8473 318.655 77.2379 cv
319.853 82.8023 320.379 88.4922 320.221 94.1491 cv
320.213 94.4452 319.969 94.6838 319.67 94.6697 cv
319.375 94.6613 319.142 94.4149 319.15 94.1191 cv
319.306 88.5478 318.787 82.9439 317.608 77.4632 cv
317.266 75.8765 316.847 74.1985 316.241 72.5429 cv
315.984 72.4474 315.735 72.3464 315.495 72.2463 cv
312.88 71.1589 309.987 69.7213 308.353 67.3032 cv
307.606 66.1984 307.528 65.1432 308.14 64.4087 cv
308.808 63.6062 310.036 63.5236 310.895 63.7857 cv
311.789 64.0586 312.455 64.6481 312.989 65.1886 cv
314.906 67.1279 316.174 69.3891 317.069 71.6987 cv
317.726 71.9121 318.398 72.0517 319.073 71.999 cv
320.535 71.8875 321.854 70.9243 323.105 69.054 cv
323.45 68.5385 323.772 68.0139 324.071 67.4816 cv
323.159 65.9068 322.632 63.9742 322.469 61.6306 cv
322.343 59.8207 322.371 57.1743 324.057 55.0991 cv
324.57 54.4684 325.204 54.192 325.794 54.3397 cv
326.248 54.4533 326.532 54.7892 326.707 55.0317 cv
328.156 57.0543 327.873 59.5339 327.534 61.223 cv
327.101 63.379 326.356 65.4624 325.311 67.4438 cv
325.538 67.7798 325.787 68.0948 326.057 68.3896 cv
327.02 69.4393 328.515 70.3338 330.151 70.6868 cv
330.269 70.4358 li
331.416 68.058 333.411 65.945 335.885 64.4859 cv
336.355 64.2086 336.921 63.9352 337.553 64.011 cv
338.118 64.0783 338.56 64.3811 338.796 64.8631 cv
339.194 65.671 338.928 66.7885 338.513 67.4851 cv
337.235 69.6299 335.627 71.0161 333.733 71.6054 cv
332.773 71.9038 331.783 71.9742 330.818 71.8706 cv
330.059 73.8675 329.82 76.0101 329.616 78.3648 cv
329.145 83.8111 328.88 89.1753 328.828 94.3089 cv
328.827 94.3973 li
328.824 94.691 328.585 94.9266 328.292 94.9266 cv
cp
f
357.051 45.8254 mo
356.856 45.8254 356.669 45.7187 356.575 45.5342 cv
356.442 45.2764 356.539 44.9604 356.792 44.8203 cv
363.477 41.1319 li
364.09 40.7934 364.483 40.9257 364.706 41.097 cv
364.874 41.2266 364.961 41.4254 364.939 41.6289 cv
364.887 42.1241 364.884 42.1537 357.281 45.7733 cv
357.051 45.8254 li
cp
f
314.524 33.5539 mo
314.321 33.5539 314.127 33.4383 314.037 33.2421 cv
310.774 26.1556 li
310.65 25.8869 310.768 25.5686 311.037 25.4449 cv
311.304 25.3208 311.623 25.4385 311.747 25.7074 cv
315.01 32.7939 li
315.134 33.0627 315.016 33.3809 314.747 33.5046 cv
314.524 33.5539 li
cp
f
292.573 49.3637 mo
292.468 49.3532 li
285.128 47.8893 li
284.936 47.8509 284.354 47.7346 284.206 47.2173 cv
284.146 47.0051 284.201 46.7883 284.352 46.6362 cv
284.668 46.3174 284.843 46.1425 292.715 48.3112 cv
292.993 48.3879 293.16 48.6708 293.094 48.9514 cv
293.035 49.1969 292.816 49.3637 292.573 49.3637 cv
cp
f
282.798 76.888 mo
282.589 76.888 282.391 76.765 282.304 76.5605 cv
282.189 76.2879 282.317 75.9736 282.589 75.8585 cv
290.203 72.6441 li
290.476 72.5285 290.79 72.6567 290.905 72.9292 cv
291.02 73.2018 290.893 73.5161 290.62 73.6312 cv
283.006 76.8456 li
282.798 76.888 li
cp
f
336.939 33.4153 mo
336.74 33.3767 li
336.465 33.2669 336.332 32.955 336.442 32.6804 cv
339.127 25.9688 li
339.237 25.6942 339.548 25.5611 339.823 25.6704 cv
340.098 25.7803 340.231 26.0921 340.122 26.3668 cv
337.436 33.0783 li
337.353 33.2878 337.151 33.4153 336.939 33.4153 cv
cp
f
366.605 71.7018 mo
366.413 71.6662 li
359.015 68.8313 li
358.739 68.7255 358.601 68.4155 358.707 68.1393 cv
358.813 67.8627 359.123 67.7254 359.399 67.8306 cv
366.797 70.6655 li
367.073 70.7714 367.211 71.0813 367.105 71.3575 cv
367.023 71.5708 366.82 71.7018 366.605 71.7018 cv
cp
f
328.23 199.943 mo
326.233 193.359 321.226 188.168 315.65 185.227 cv
309.277 181.866 292.334 180.328 284.933 179.682 cv
285.208 197.418 285.13 215.159 285.238 233.591 cv
286.665 238.829 288.598 244.038 291.951 248.308 cv
295.304 252.577 300.26 255.829 305.681 256.113 cv
313.679 256.532 320.851 250.391 324.183 243.108 cv
327.514 235.825 327.818 227.573 328.066 219.568 cv
328.268 213.048 330.142 206.249 328.23 199.943 cv
1 1 1 rgb
f
285.774 233.518 mo
287.528 239.94 289.565 244.401 292.372 247.976 cv
295.965 252.552 300.826 255.322 305.709 255.578 cv
313.936 256.016 320.664 249.513 323.696 242.885 cv
327.033 235.588 327.297 227.068 327.53 219.551 cv
327.592 217.539 327.815 215.475 328.031 213.479 cv
328.514 209.003 329.013 204.374 327.717 200.099 cv
325.904 194.121 321.415 188.873 315.4 185.701 cv
309.17 182.415 292.469 180.88 285.478 180.267 cv
285.65 191.708 285.678 202.936 285.707 214.81 cv
285.722 220.907 285.737 227.21 285.774 233.518 cv
306.483 256.67 mo
306.208 256.67 305.932 256.663 305.653 256.648 cv
300.461 256.376 295.313 253.457 291.53 248.639 cv
288.619 244.933 286.52 240.335 284.721 233.732 cv
284.703 233.595 li
284.665 227.261 284.65 220.933 284.635 214.813 cv
284.606 202.736 284.578 191.33 284.397 179.69 cv
284.395 179.539 284.457 179.393 284.568 179.29 cv
284.679 179.187 284.828 179.134 284.979 179.148 cv
291.63 179.728 309.295 181.269 315.9 184.753 cv
322.166 188.058 326.847 193.538 328.742 199.788 cv
330.102 204.272 329.591 209.011 329.096 213.594 cv
328.882 215.57 328.662 217.614 328.601 219.585 cv
328.365 227.203 328.098 235.837 324.67 243.331 cv
321.589 250.066 314.822 256.669 306.483 256.67 cv
0 0 0 rgb
f
231.466 283.021 mo
230.924 269.308 230.188 255.603 229.296 241.908 cv
169.191 249.094 107.566 245.428 48.4588 230.652 cv
49.3854 260.768 48.8709 290.928 46.7632 320.986 cv
55.349 324.324 145.342 340.529 223.38 328.958 cv
226.438 328.505 229.497 328.051 232.556 327.589 cv
232.419 312.729 232.053 297.871 231.466 283.021 cv
1 1 1 rgb
f
47.3256 320.621 mo
52.7653 322.499 77.6807 327.182 109.076 330.029 cv
138.352 332.684 181.935 334.562 223.301 328.429 cv
226.206 327.998 229.111 327.566 232.016 327.128 cv
231.877 312.588 231.512 297.758 230.93 283.043 cv
230.417 270.05 229.699 256.416 228.798 242.507 cv
198.919 246.044 168.532 246.901 138.47 245.05 cv
108.23 243.189 78.1375 238.578 49.016 231.343 cv
49.9204 261.489 49.3519 291.523 47.3256 320.621 cv
162.58 333.596 mo
142.46 333.596 123.872 332.447 108.979 331.097 cv
76.7075 328.17 51.1957 323.284 46.5686 321.486 cv
46.3501 321.401 46.2122 321.183 46.2287 320.949 cv
48.2915 291.532 48.8619 261.157 47.9236 230.668 cv
47.9182 230.5 47.9919 230.34 48.1227 230.235 cv
48.2535 230.129 48.425 230.09 48.5886 230.132 cv
107.558 244.873 168.336 248.657 229.232 241.376 cv
229.378 241.36 229.525 241.402 229.638 241.497 cv
229.751 241.59 229.821 241.727 229.83 241.873 cv
230.75 255.985 231.48 269.824 232.001 283 cv
232.59 297.884 232.956 312.884 233.091 327.584 cv
233.094 327.851 232.899 328.079 232.635 328.118 cv
229.577 328.58 226.517 329.035 223.459 329.488 cv
203.042 332.516 182.091 333.596 162.58 333.596 cv
0 0 0 rgb
f
329.828 281.19 mo
328.915 266.12 328.001 251.028 328.399 235.937 cv
328.715 223.927 329.859 211.846 328.23 199.943 cv
328.852 206.616 324.521 213.384 319.035 218.117 cv
309.165 226.63 295.83 230.381 282.871 233.36 cv
270.426 236.222 257.859 238.594 245.21 240.486 cv
245.222 240.563 li
245.633 248.411 246.113 256.256 246.487 264.106 cv
247.151 278.091 247.69 292.078 248.046 306.074 cv
248.213 312.659 248.344 319.245 248.439 325.832 cv
262.037 323.57 275.555 320.903 288.807 317.14 cv
304.299 312.74 320.09 306.348 330.264 293.864 cv
330.314 289.21 330.071 285.2 329.828 281.19 cv
1 1 1 rgb
f
245.778 240.943 mo
245.932 243.873 246.096 246.802 246.26 249.733 cv
246.523 254.434 246.794 259.296 247.022 264.08 cv
247.734 279.051 248.244 292.783 248.581 306.06 cv
248.742 312.399 248.871 318.835 248.966 325.201 cv
264.731 322.563 277.359 319.834 288.66 316.624 cv
302.159 312.791 319.009 306.719 329.73 293.671 cv
329.771 289.118 329.528 285.112 329.294 281.235 cv
329.828 281.19 li
329.293 281.222 li
328.394 266.386 327.464 251.045 327.863 235.923 cv
327.936 233.16 328.054 230.35 328.169 227.633 cv
328.477 220.315 328.793 212.795 328.254 205.383 cv
327.046 209.932 323.953 214.581 319.385 218.523 cv
309.186 227.32 295.252 231.064 282.991 233.883 cv
270.81 236.683 258.292 239.058 245.778 240.943 cv
248.439 326.368 mo
248.315 326.368 248.193 326.324 248.096 326.243 cv
247.976 326.143 247.906 325.996 247.903 325.839 cv
247.809 319.275 247.676 312.629 247.51 306.088 cv
247.172 292.818 246.663 279.094 245.952 264.131 cv
245.724 259.351 245.453 254.492 245.19 249.792 cv
245.019 246.725 244.847 243.658 244.687 240.591 cv
244.677 240.542 li
244.647 240.257 244.847 239.999 245.131 239.956 cv
257.781 238.063 270.438 235.669 282.751 232.838 cv
294.886 230.048 308.672 226.348 318.685 217.711 cv
324.865 212.38 328.234 205.756 327.696 199.993 cv
327.669 199.703 327.879 199.444 328.169 199.411 cv
328.455 199.378 328.721 199.581 328.76 199.871 cv
330.022 209.088 329.624 218.538 329.239 227.678 cv
329.125 230.391 329.007 233.197 328.934 235.95 cv
328.537 251.027 329.465 266.344 330.363 281.157 cv
329.828 281.19 li
330.364 281.171 li
330.603 285.119 330.849 289.202 330.8 293.87 cv
330.798 293.991 330.756 294.109 330.679 294.203 cv
319.776 307.583 302.652 313.764 288.953 317.655 cv
277.466 320.917 264.62 323.683 248.527 326.36 cv
248.439 326.368 li
0 0 0 rgb
f
129.045 105.571 mo
132.143 114.989 129.281 126.437 121.273 132.281 cv
116.912 135.464 111.491 136.848 106.89 139.671 cv
102.289 142.495 98.338 147.805 99.8747 152.981 cv
100.264 154.293 100.99 155.519 101.119 156.882 cv
101.466 160.545 97.691 163.021 94.907 165.427 cv
88.6487 170.836 86.1948 181.267 91.6293 187.502 cv
95.9138 192.419 103.179 193.151 109.699 193.283 cv
118.537 193.461 127.691 193.1 135.659 189.274 cv
143.528 185.495 149.597 178.552 153.436 170.713 cv
157.274 162.873 159.029 154.16 159.817 145.467 cv
160.724 135.457 160.262 124.844 155.184 116.17 cv
150.106 107.496 139.293 101.55 129.045 105.571 cv
.67451 .831373 .968627 rgb
f
129.709 105.893 mo
132.748 115.819 129.38 127.028 121.588 132.714 cv
119.112 134.521 116.278 135.769 113.538 136.976 cv
111.394 137.92 109.177 138.896 107.17 140.128 cv
102.871 142.766 98.9149 147.866 100.388 152.828 cv
100.523 153.28 100.698 153.72 100.884 154.186 cv
101.218 155.022 101.562 155.886 101.652 156.831 cv
101.977 160.264 99.0477 162.685 96.4631 164.822 cv
96.0511 165.162 95.6449 165.498 95.2573 165.833 cv
91.8418 168.784 89.5212 173.423 89.2016 177.938 cv
88.9464 181.546 89.9254 184.732 92.0332 187.151 cv
96.1187 191.838 102.944 192.611 109.71 192.747 cv
118.421 192.922 127.568 192.565 135.427 188.791 cv
142.644 185.326 148.868 178.822 152.954 170.477 cv
156.305 163.635 158.375 155.438 159.283 145.419 cv
160.418 132.903 158.968 123.695 154.721 116.441 cv
150.093 108.533 139.813 102.242 129.709 105.893 cv
112.952 193.854 mo
111.859 193.854 110.771 193.84 109.689 193.819 cv
103.012 193.684 95.5963 192.87 91.2255 187.854 cv
88.9262 185.216 87.8567 181.761 88.1329 177.862 cv
88.4769 173.001 90.8783 168.201 94.5569 165.022 cv
94.9496 164.682 95.3624 164.341 95.7805 163.996 cv
98.2762 161.933 100.857 159.799 100.585 156.932 cv
100.51 156.14 100.208 155.384 99.8886 154.583 cv
99.702 154.115 99.5092 153.632 99.3614 153.133 cv
97.7267 147.629 101.973 142.06 106.61 139.215 cv
108.679 137.945 110.929 136.954 113.106 135.995 cv
115.794 134.811 118.574 133.587 120.957 131.848 cv
128.512 126.335 131.699 115.354 128.536 105.738 cv
128.447 105.468 128.584 105.176 128.849 105.072 cv
133.799 103.13 139.132 103.32 144.272 105.621 cv
148.954 107.717 152.993 111.367 155.646 115.899 cv
160.011 123.356 161.506 132.767 160.35 145.516 cv
159.43 155.668 157.326 163.987 153.917 170.948 cv
149.725 179.508 143.324 186.188 135.891 189.757 cv
128.816 193.154 120.789 193.854 112.952 193.854 cv
0 0 0 rgb
f
173.77 68.3149 mo
175.101 82.6322 176.837 97.9481 186.185 108.873 cv
189.224 112.424 192.965 115.36 195.721 119.134 cv
198.998 123.62 200.711 129.059 201.84 134.498 cv
203.974 144.78 204.088 155.959 199.231 165.269 cv
194.374 174.579 183.551 181.283 173.333 178.861 cv
164.368 176.736 157.991 168.254 155.795 159.305 cv
153.599 150.356 154.845 140.952 156.417 131.873 cv
160.191 110.06 165.784 88.5629 173.77 68.3149 cv
.67451 .831373 .968627 rgb
f
173.451 70.6119 mo
166.344 89.0942 160.793 109.723 156.944 131.964 cv
155.416 140.799 154.108 150.178 156.316 159.177 cv
158.706 168.916 165.434 176.438 173.457 178.34 cv
182.768 180.546 193.644 174.82 198.756 165.021 cv
202.968 156.948 203.829 146.715 201.315 134.607 cv
199.949 128.025 198.034 123.209 195.289 119.45 cv
193.714 117.295 191.765 115.369 189.88 113.507 cv
188.498 112.141 187.068 110.729 185.778 109.222 cv
177.132 99.1174 174.932 85.7658 173.451 70.6119 cv
177.541 179.88 mo
176.078 179.88 174.628 179.718 173.21 179.382 cv
164.8 177.389 157.76 169.558 155.275 159.432 cv
153.018 150.233 154.34 140.728 155.889 131.781 cv
159.896 108.622 165.745 87.2022 173.272 68.1184 cv
173.363 67.8875 173.601 67.7492 173.846 67.7845 cv
174.092 67.8194 174.281 68.0183 174.304 68.2655 cv
175.781 84.1617 177.726 98.163 186.592 108.525 cv
187.853 109.998 189.266 111.394 190.633 112.744 cv
192.548 114.636 194.528 116.593 196.154 118.818 cv
198.992 122.704 200.966 127.652 202.364 134.389 cv
204.93 146.746 204.035 157.218 199.706 165.516 cv
195.147 174.255 186.159 179.88 177.541 179.88 cv
0 0 0 rgb
f
175.888 146.019 mo
173.457 138.91 171.815 131.559 170.144 123.109 cv
166.804 122.538 163.367 122.479 160.007 122.935 cv
158.498 123.14 156.849 123.543 156.006 124.748 cv
155.477 125.503 155.365 126.445 155.267 127.347 cv
154.594 133.542 153.921 139.738 153.248 145.933 cv
153.196 146.41 153.147 146.906 153.315 147.358 cv
153.557 148.002 154.191 148.431 154.812 148.78 cv
161.301 152.431 170.294 151.474 175.888 146.019 cv
1 1 1 rgb
f
164.511 123.166 mo
163.032 123.166 161.552 123.266 160.08 123.466 cv
158.781 123.642 157.195 123.982 156.445 125.055 cv
155.983 125.715 155.886 126.612 155.8 127.404 cv
153.781 145.991 li
153.736 146.403 153.69 146.828 153.817 147.17 cv
153.999 147.656 154.555 148.021 155.074 148.313 cv
161.374 151.856 169.991 150.794 175.27 145.867 cv
172.963 139.045 171.361 131.996 169.691 123.576 cv
167.974 123.303 166.243 123.166 164.511 123.166 cv
163.393 151.518 mo
160.331 151.518 157.268 150.777 154.549 149.247 cv
153.861 148.86 153.116 148.355 152.813 147.545 cv
152.597 146.965 152.662 146.361 152.715 145.875 cv
154.734 127.289 li
154.83 126.414 154.948 125.326 155.567 124.441 cv
156.556 123.027 158.421 122.61 159.935 122.404 cv
163.362 121.939 166.827 121.998 170.235 122.58 cv
170.454 122.618 170.627 122.787 170.67 123.004 cv
172.384 131.677 174.014 138.88 176.394 145.845 cv
176.461 146.041 176.41 146.258 176.262 146.402 cv
172.822 149.757 168.11 151.518 163.393 151.518 cv
0 0 0 rgb
f
177.878 70.6804 mo
179.018 77.601 179.794 84.9894 183.527 91.0906 cv
185.564 94.4179 191.056 112.81 177.909 122.517 cv
170.998 127.619 161.928 129.756 152.465 127.339 cv
146.047 125.699 136.364 117.486 134.592 106.951 cv
130.485 109.558 125.133 107.88 123.855 103.862 cv
123.119 101.546 124.797 97.854 127.547 97.1635 cv
129.674 96.6295 129.931 96.5744 131.896 97.308 cv
131.541 92.2218 130.731 87.1794 128.98 81.7351 cv
132.371 74.5722 139.671 69.221 147.472 65.5123 cv
150.052 64.2863 152.749 63.1937 155.597 62.7024 cv
163.74 61.2982 176.708 63.5725 177.878 70.6804 cv
1 1 1 rgb
f
134.592 106.415 mo
134.81 106.461 li
134.974 106.534 135.091 106.685 135.121 106.861 cv
136.873 117.285 146.567 125.279 152.598 126.819 cv
161.501 129.094 170.376 127.413 177.591 122.086 cv
190.991 112.191 184.472 93.6595 183.07 91.3704 cv
179.735 85.9192 178.728 79.5054 177.754 73.303 cv
177.621 72.4531 177.488 71.6068 177.349 70.7675 cv
177.071 69.075 176.041 67.5848 174.289 66.3383 cv
169.648 63.0364 161.242 62.2728 155.688 63.2303 cv
152.674 63.7501 149.837 64.9815 147.702 65.9961 cv
141.467 68.9602 133.284 74.0959 129.555 81.7747 cv
131.122 86.703 132.037 91.6336 132.431 97.2706 cv
132.444 97.4525 132.363 97.6283 132.217 97.7371 cv
132.071 97.8466 131.88 97.8738 131.709 97.8101 cv
129.884 97.1295 129.76 97.1606 127.677 97.6834 cv
126.616 97.9499 125.626 98.7865 124.961 99.9792 cv
124.263 101.232 124.035 102.658 124.366 103.7 cv
124.881 105.32 126.179 106.614 127.925 107.249 cv
129.994 108 132.38 107.721 134.305 106.498 cv
134.392 106.443 134.492 106.415 134.592 106.415 cv
160.324 128.88 mo
157.69 128.88 155.012 128.542 152.332 127.857 cv
146.011 126.242 136.368 118.421 134.203 107.79 cv
132.132 108.854 129.701 109.034 127.559 108.256 cv
125.498 107.506 123.962 105.964 123.345 104.024 cv
122.927 102.71 123.187 100.96 124.025 99.4577 cv
124.833 98.0077 126.069 96.9824 127.416 96.6439 cv
129.343 96.1604 129.885 96.0604 131.301 96.5278 cv
130.877 91.2411 129.973 86.5714 128.47 81.8992 cv
128.428 81.7697 128.437 81.6289 128.496 81.5057 cv
132.316 73.4367 140.799 68.0915 147.242 65.0286 cv
149.439 63.9843 152.363 62.7164 155.506 62.1746 cv
161.272 61.1796 170.033 61.9949 174.91 65.4652 cv
176.904 66.8835 178.08 68.6087 178.407 70.5933 cv
178.546 71.4353 178.679 72.2841 178.813 73.137 cv
179.77 79.2357 180.76 85.5418 183.984 90.8109 cv
186.474 94.8779 191.36 113.251 178.227 122.948 cv
172.922 126.865 166.753 128.88 160.324 128.88 cv
0 0 0 rgb
f
244.209 118.561 mo
244.092 117.912 244.471 117.251 244.996 116.852 cv
245.522 116.453 246.174 116.265 246.812 116.096 cv
254.315 114.113 262.192 113.749 269.914 114.509 cv
270.666 114.583 271.625 114.882 271.636 115.636 cv
271.641 115.98 271.424 116.285 271.197 116.543 cv
269.762 118.173 267.624 118.981 265.541 119.597 cv
259.58 121.358 253.14 122.022 247.154 120.349 cv
246.113 120.058 244.439 119.831 244.209 118.561 cv
1 1 1 rgb
f
149.87 85.3373 mo
149.43 85.3373 148.985 85.3735 148.539 85.4485 cv
143.708 86.2611 140.514 91.3017 141.419 96.6851 cv
142.325 102.069 146.992 105.789 151.822 104.976 cv
154.152 104.584 156.176 103.207 157.521 101.097 cv
158.877 98.9705 159.382 96.3572 158.942 93.7391 cv
158.12 88.8525 154.199 85.3373 149.87 85.3373 cv
cp
150.493 106.159 mo
145.649 106.159 141.273 102.272 140.363 96.863 cv
139.359 90.8967 142.948 85.3024 148.361 84.392 cv
153.775 83.4822 158.995 87.5949 159.998 93.5612 cv
160.483 96.4416 159.924 99.3224 158.425 101.673 cv
156.914 104.042 154.633 105.59 152 106.033 cv
151.495 106.118 150.991 106.159 150.493 106.159 cv
cp
0 0 0 rgb
f
176.877 78.4648 mo
176.437 78.4648 175.992 78.5011 175.546 78.576 cv
170.715 79.3886 167.521 84.4293 168.427 89.8126 cv
169.332 95.1968 173.999 98.9147 178.829 98.1033 cv
181.159 97.7116 183.183 96.3342 184.528 94.2246 cv
185.885 92.098 186.389 89.4847 185.949 86.8666 cv
185.127 81.9802 181.206 78.4648 176.877 78.4648 cv
cp
177.5 99.2861 mo
172.656 99.2865 168.279 95.4001 167.37 89.9905 cv
166.367 84.0244 169.955 78.4299 175.368 77.5195 cv
180.781 76.6097 186.002 80.7222 187.006 86.6891 cv
187.49 89.5691 186.931 92.4499 185.432 94.8009 cv
183.922 97.1692 181.64 98.7176 179.007 99.1602 cv
178.502 99.245 177.998 99.2861 177.5 99.2861 cv
cp
f
254.936 81.4468 mo
252.866 74.8767 254.872 67.4509 252.341 61.0442 cv
252.121 60.4877 251.801 59.884 251.225 59.7235 cv
250.279 59.4605 249.533 60.5388 249.219 61.469 cv
247.856 65.5034 248.262 69.8834 248.27 74.1418 cv
248.281 80.3651 247.402 86.5896 245.578 92.8405 cv
244.427 95.974 245.638 99.4156 246.598 102.613 cv
248.238 108.071 249.15 113.747 249.272 119.723 cv
253.701 121.482 258.691 120.504 263.34 119.46 cv
265.094 119.066 266.873 118.656 268.301 117.805 cv
269.799 110.787 270.917 103.688 271.649 96.5494 cv
271.848 94.6061 272.019 92.6519 271.915 90.7012 cv
271.836 89.1989 271.555 87.6183 270.569 86.4821 cv
269.583 85.3458 267.701 84.8805 266.439 85.9219 cv
266.327 84.7625 265.444 83.7723 264.379 83.3019 cv
263.313 82.8318 262.095 82.8181 260.946 83.0107 cv
260.652 83.0602 260.336 83.1365 260.148 83.3681 cv
258.928 82.0646 256.957 81.52 255.24 82.0122 cv
255.202 81.7288 255.165 81.4452 254.936 81.4468 cv
1 1 1 rgb
f
109.925 46.9247 mo
109.925 37.1408 117.856 29.2095 127.64 29.2095 cv
137.424 29.2095 145.355 37.1408 145.355 46.9247 cv
145.355 56.7086 137.424 64.6399 127.64 64.6399 cv
117.856 64.6399 109.925 56.7086 109.925 46.9247 cv
.67451 .831373 .968627 rgb
f
127.64 29.7452 mo
118.167 29.7452 110.461 37.4519 110.461 46.9247 cv
110.461 56.3975 118.167 64.1042 127.64 64.1042 cv
137.113 64.1042 144.819 56.3975 144.819 46.9247 cv
144.819 37.4519 137.113 29.7452 127.64 29.7452 cv
127.64 65.1757 mo
117.576 65.1757 109.389 56.9885 109.389 46.9247 cv
109.389 36.8609 117.576 28.6737 127.64 28.6737 cv
137.704 28.6737 145.891 36.8609 145.891 46.9247 cv
145.891 56.9885 137.704 65.1757 127.64 65.1757 cv
0 0 0 rgb
f
267.675 120.557 mo
267.568 120.547 li
267.278 120.488 267.091 120.205 267.15 119.915 cv
269.025 110.666 270.333 101.204 271.038 91.7931 cv
271.148 90.3226 271.205 89.0101 270.784 87.8376 cv
270.413 86.8074 269.451 85.6976 268.214 85.6948 cv
268.209 85.6948 li
267.257 85.6948 266.307 86.3186 265.222 87.6574 cv
263.543 89.7287 262.238 92.0523 261.344 94.5637 cv
261.066 95.3446 260.832 96.1702 260.999 96.9177 cv
261.138 97.5403 261.696 98.1658 262.314 98.0959 cv
262.648 98.0594 262.988 97.8271 263.304 97.5815 cv
264.908 96.3373 266.238 94.721 267.148 92.9072 cv
267.281 92.6425 267.604 92.5362 267.868 92.6686 cv
268.132 92.8014 268.239 93.1236 268.106 93.3879 cv
267.124 95.3438 265.691 97.0867 263.961 98.4281 cv
263.52 98.7699 263.03 99.0957 262.43 99.1613 cv
261.191 99.2936 260.198 98.2452 259.953 97.1515 cv
259.727 96.1385 260.003 95.1363 260.335 94.2043 cv
261.269 91.5782 262.633 89.1485 264.39 86.9823 cv
265.211 85.9694 266.5 84.6233 268.209 84.6233 cv
268.216 84.6233 li
269.97 84.627 271.298 86.1042 271.792 87.4749 cv
272.325 88.9577 272.204 90.5743 272.107 91.8733 cv
271.399 101.328 270.084 110.835 268.2 120.128 cv
268.148 120.382 267.925 120.557 267.675 120.557 cv
f
258.9 98.3451 mo
258.559 98.3451 258.221 98.2526 257.914 98.0689 cv
257.332 97.721 256.91 97.1117 256.624 96.2062 cv
256.17 94.7649 256.116 93.078 256.46 91.0495 cv
256.883 88.5581 257.742 86.1872 259.013 84.0033 cv
259.288 83.5316 259.627 83.0013 260.18 82.6762 cv
260.592 82.4335 261.08 82.3131 261.729 82.3231 cv
263.781 82.3296 265.798 83.4651 266.868 85.2161 cv
267.022 85.4684 266.943 85.7982 266.69 85.9525 cv
266.438 86.1066 266.108 86.0272 265.953 85.7745 cv
265.073 84.3342 263.414 83.3999 261.726 83.3946 cv
261.714 83.3946 li
261.276 83.3946 260.96 83.4598 260.723 83.5994 cv
260.393 83.7936 260.156 84.1717 259.94 84.542 cv
258.733 86.615 257.918 88.8647 257.516 91.2288 cv
257.201 93.0858 257.243 94.6087 257.646 95.8835 cv
257.85 96.5278 258.117 96.9418 258.464 97.1489 cv
258.805 97.3542 259.121 97.2595 259.279 97.1856 cv
259.598 97.0359 259.822 96.7317 259.878 96.372 cv
259.923 96.0796 260.199 95.8811 260.489 95.9248 cv
260.782 95.9703 260.982 96.2441 260.937 96.5365 cv
260.826 97.2491 260.376 97.8545 259.734 98.1558 cv
259.464 98.2823 259.181 98.3451 258.9 98.3451 cv
f
255.434 97.8845 mo
255.387 97.884 li
254.567 97.8599 253.788 97.3164 253.354 96.4657 cv
253.006 95.7847 252.918 95.0537 252.851 94.3022 cv
252.639 91.8776 252.612 89.4158 252.771 86.9845 cv
252.834 86.0209 252.936 84.9081 253.36 83.8947 cv
253.848 82.7258 254.712 81.8685 255.73 81.5422 cv
257.483 80.9794 259.245 82.0407 260.418 82.8868 cv
260.658 83.0598 260.712 83.3947 260.539 83.6346 cv
260.366 83.8753 260.03 83.9285 259.791 83.7556 cv
258.806 83.0454 257.349 82.1499 256.057 82.5624 cv
255.338 82.7929 254.716 83.429 254.348 84.3078 cv
253.989 85.1691 253.9 86.1368 253.84 87.0544 cv
253.685 89.4313 253.711 91.8381 253.919 94.2082 cv
253.975 94.8499 254.048 95.4689 254.308 95.9781 cv
254.561 96.4729 254.997 96.8006 255.419 96.813 cv
255.71 96.8145 256.243 96.6004 256.505 96.3032 cv
256.595 96.2006 256.608 96.1378 256.606 96.1267 cv
256.561 95.8344 256.761 95.5606 257.054 95.5155 cv
257.343 95.4709 257.62 95.6708 257.665 95.9635 cv
257.703 96.2139 257.673 96.5993 257.308 97.0126 cv
256.864 97.5161 256.066 97.8845 255.434 97.8845 cv
f
245.666 93.1015 mo
245.516 93.0802 li
245.232 92.9974 245.068 92.7005 245.151 92.4165 cv
246.876 86.4768 247.745 80.3287 247.734 74.1429 cv
247.733 73.3651 247.718 72.5831 247.703 71.8002 cv
247.637 68.2999 247.568 64.6807 248.711 61.2974 cv
249.146 60.0099 250.138 58.8649 251.369 59.2072 cv
252.197 59.4379 252.605 60.2537 252.839 60.8473 cv
254.211 64.3194 254.37 68.2593 254.524 72.0694 cv
254.658 75.3895 254.797 78.8227 255.751 81.851 cv
255.84 82.1334 255.684 82.4342 255.401 82.5231 cv
255.117 82.6124 254.818 82.4551 254.729 82.173 cv
253.732 79.0087 253.59 75.503 253.454 72.1128 cv
253.303 68.3916 253.148 64.5439 251.843 61.2413 cv
251.604 60.6361 251.362 60.3176 251.081 60.2398 cv
250.497 60.0757 249.938 61.0123 249.726 61.6403 cv
248.643 64.8468 248.71 68.3712 248.774 71.7799 cv
248.789 72.569 248.804 73.3571 248.805 74.1409 cv
248.817 80.4285 247.934 86.678 246.18 92.7149 cv
246.112 92.9494 245.898 93.1015 245.666 93.1015 cv
f
132.701 97.8169 mo
134.984 89.8285 136.162 84.2184 135.115 75.6611 cv
153.869 80.2245 168.479 74.0221 183.529 68.8025 cv
183.067 66.1158 181.717 63.6192 179.897 61.4942 cv
175.435 56.2845 170.568 52.0802 160.131 50.7759 cv
152.816 49.8619 143.566 50.5903 136.898 53.7182 cv
130.272 56.8264 125.449 62.3839 121.963 68.3573 cv
119.189 73.11 117.706 79.9689 118.316 86.1157 cv
118.838 91.3804 121.164 94.6717 124.924 99.0518 cv
125.969 97.9985 126.938 96.9598 128.471 96.7975 cv
130.005 96.6352 131.161 97.0861 132.701 97.8169 cv
.67451 .831373 .968627 rgb
f
154.003 50.945 mo
148.508 50.945 142.244 51.802 137.125 54.2032 cv
131.385 56.8959 126.44 61.7487 122.426 68.6274 cv
119.67 73.3488 118.266 80.1923 118.849 86.0627 cv
119.318 90.799 121.2 93.8383 124.953 98.2617 cv
125.894 97.3225 126.906 96.4242 128.415 96.2647 cv
129.91 96.105 131.082 96.4913 132.357 97.0667 cv
134.345 90.0519 135.631 84.2917 134.583 75.7261 cv
134.562 75.5514 134.627 75.3774 134.759 75.2607 cv
134.891 75.1437 135.071 75.0988 135.241 75.1403 cv
152.246 79.2783 166.108 74.3804 179.515 69.6443 cv
180.647 69.2441 181.781 68.8438 182.916 68.4485 cv
182.435 66.1799 181.256 63.9054 179.49 61.8426 cv
175.556 57.2486 170.815 52.651 160.064 51.3074 cv
158.245 51.0803 156.184 50.945 154.003 50.945 cv
124.924 99.5877 mo
124.905 99.5876 li
124.755 99.5824 124.615 99.5146 124.517 99.4008 cv
121.043 95.3535 118.341 91.8089 117.782 86.1685 cv
117.17 79.9945 118.595 73.0662 121.5 68.0874 cv
125.626 61.0173 130.73 56.0196 136.67 53.2331 cv
144.029 49.7815 153.65 49.4261 160.197 50.2442 cv
171.327 51.6351 176.233 56.3923 180.304 61.1459 cv
182.312 63.4899 183.609 66.1064 184.057 68.7119 cv
184.102 68.9702 183.953 69.2228 183.705 69.3086 cv
182.425 69.7527 181.148 70.2037 179.872 70.6546 cv
169.921 74.17 159.718 77.7731 148.148 77.7737 cv
144.185 77.7738 140.064 77.3515 135.735 76.358 cv
136.668 84.9457 135.275 90.7611 133.216 97.9642 cv
133.173 98.1156 133.065 98.24 132.922 98.3053 cv
132.779 98.3703 132.614 98.3688 132.472 98.3012 cv
131.071 97.6367 129.969 97.1813 128.528 97.3301 cv
127.248 97.4657 126.407 98.3151 125.433 99.2988 cv
125.304 99.4295 li
125.204 99.5311 125.066 99.5877 124.924 99.5877 cv
0 0 0 rgb
f
252.256 97.4757 mo
252.125 95.5198 252.718 93.5235 253.895 91.9558 cv
254.635 90.971 255.599 90.1431 256.158 89.0456 cv
256.717 87.9484 256.721 86.4075 255.726 85.6809 cv
255.1 85.2232 254.248 85.2119 253.489 85.3727 cv
251.494 85.7952 249.875 87.2191 248.451 88.6779 cv
247.565 89.5855 246.702 90.5464 246.163 91.6942 cv
245.682 92.7177 245.479 93.8501 245.378 94.9763 cv
245.316 95.6739 245.296 96.4036 245.578 97.045 cv
245.968 97.9333 246.857 98.4853 247.723 98.9223 cv
248.626 99.3777 249.628 99.7785 250.624 99.6029 cv
251.62 99.4275 252.324 98.4885 252.256 97.4757 cv
1 1 1 rgb
f
161.595 116.497 mo
161.352 116.497 161.104 116.485 160.853 116.46 cv
158.515 116.224 156.312 115.077 154.649 113.23 cv
154.451 113.009 154.469 112.671 154.688 112.473 cv
154.908 112.275 155.247 112.292 155.445 112.512 cv
156.93 114.162 158.888 115.185 160.96 115.394 cv
162.82 115.581 164.423 114.944 165.246 113.692 cv
165.409 113.445 165.741 113.375 165.988 113.538 cv
166.235 113.701 166.305 114.033 166.142 114.28 cv
165.212 115.696 163.545 116.497 161.595 116.497 cv
cp
0 0 0 rgb
f
150.457 92.8343 mo
150.311 91.9693 150.933 91.1437 151.845 90.9903 cv
152.757 90.8369 153.614 91.4139 153.76 92.2789 cv
153.905 93.144 153.284 93.9696 152.371 94.123 cv
151.459 94.2764 150.602 93.6994 150.457 92.8343 cv
cp
f
249.047 121.52 mo
248.756 121.52 248.517 121.286 248.512 120.994 cv
248.402 114.815 247.549 108.652 245.978 102.677 cv
245.819 102.073 li
244.971 98.8797 244.011 95.2608 245.327 92.0423 cv
246.189 89.9334 247.907 88.3282 249.593 86.8649 cv
250.737 85.8708 251.885 84.9562 253.328 84.6833 cv
254.89 84.3879 256.829 85.175 257.23 86.8186 cv
257.634 88.4817 256.409 89.7924 255.329 90.9489 cv
255.131 91.1607 254.935 91.37 254.754 91.5777 cv
252.6 94.0406 252.199 97.8988 253.801 100.752 cv
253.946 101.01 253.854 101.337 253.596 101.482 cv
253.339 101.627 253.012 101.535 252.867 101.277 cv
251.05 98.0409 251.504 93.6653 253.947 90.8722 cv
254.136 90.656 254.34 90.438 254.546 90.2176 cv
255.485 89.2124 256.456 88.1729 256.188 87.072 cv
255.936 86.0357 254.583 85.5357 253.527 85.7359 cv
252.347 85.9594 251.325 86.7802 250.295 87.674 cv
248.642 89.1097 247.093 90.5553 246.319 92.4474 cv
245.139 95.3338 246.011 98.62 246.854 101.798 cv
247.015 102.405 li
248.607 108.462 249.471 114.71 249.583 120.975 cv
249.589 121.271 249.353 121.515 249.057 121.52 cv
249.047 121.52 li
f
174.292 87.2161 mo
174.146 86.351 174.768 85.5254 175.68 85.3721 cv
176.592 85.2187 177.449 85.7956 177.595 86.6607 cv
177.74 87.5258 177.119 88.3514 176.206 88.5048 cv
175.294 88.6581 174.437 88.0812 174.292 87.2161 cv
cp
f
169.454 103.517 mo
169.294 103.517 169.135 103.445 169.03 103.309 cv
168.849 103.075 168.892 102.738 169.126 102.557 cv
171.041 101.078 li
171.251 100.915 171.308 100.841 171.319 100.808 cv
171.301 100.772 171.183 100.663 170.969 100.505 cv
168.397 98.6067 166.822 95.6076 166.756 92.4827 cv
166.75 92.1869 166.985 91.9421 167.281 91.9358 cv
167.579 91.9347 167.821 92.1646 167.828 92.4604 cv
167.886 95.2554 169.299 97.9404 171.606 99.643 cv
171.895 99.8564 172.432 100.253 172.386 100.893 cv
172.348 101.421 171.924 101.749 171.696 101.925 cv
169.781 103.405 li
169.684 103.48 169.569 103.517 169.454 103.517 cv
cp
f
158.58 90.3937 mo
158.483 90.3937 158.385 90.3676 158.296 90.3121 cv
158.045 90.1551 157.969 89.8248 158.126 89.5739 cv
159.423 87.5006 161.884 86.0872 164.395 85.9731 cv
165.924 85.9046 167.661 86.4889 168.078 87.9531 cv
168.159 88.2376 167.994 88.5341 167.71 88.6153 cv
167.426 88.695 167.129 88.5318 167.048 88.2472 cv
166.803 87.3905 165.55 86.9962 164.444 87.0436 cv
162.274 87.1422 160.151 88.3583 159.034 90.1422 cv
158.933 90.3048 158.758 90.3937 158.58 90.3937 cv
cp
f
133.271 97.6373 mo
133.046 97.6373 132.837 97.4954 132.762 97.2704 cv
132.669 96.9896 132.821 96.6865 133.102 96.593 cv
140.461 94.1472 li
140.742 94.0541 141.044 94.2061 141.138 94.4866 cv
141.231 94.7674 141.08 95.0708 140.799 95.1643 cv
133.44 97.6101 li
133.271 97.6373 li
cp
f
138.019 224.811 mo
136.826 210.631 135.632 200.509 134.439 186.329 cv
132.714 195.947 127.523 214.846 125.375 225.12 cv
145.766 225.774 159.045 226.423 176.656 228.686 cv
173.264 231.367 170.542 234.886 168.991 238.717 cv
167.44 242.548 166.926 246.708 166.514 250.821 cv
144.766 250.09 123.389 249.727 102.046 250.411 cv
99.6598 250.487 97.1191 250.539 95.0769 249.302 cv
93.5389 248.371 92.4746 246.798 91.8241 245.121 cv
90.0406 240.526 91.1294 235.375 92.2381 230.571 cv
95.5246 216.333 101.886 189.315 107.733 175.923 cv
110.254 170.149 113.291 164.5 117.645 159.946 cv
126.752 150.42 140.291 146.879 153.378 143.801 cv
153.945 147.062 157.386 149.003 160.62 149.709 cv
163.498 150.337 166.586 150.343 169.309 149.218 cv
172.032 148.093 174.326 145.717 175.633 141.82 cv
185.662 140.913 192 140.942 196.424 141.585 cv
202.269 142.434 207.934 146.685 211.851 150.956 cv
220 159.843 224.227 167.328 232.802 177.634 cv
240.17 159 244.438 139.144 244.057 118.39 cv
245.893 122.604 269.427 122.193 271.932 115.509 cv
270.281 140.24 268.579 165.254 261.065 188.874 cv
258.647 196.475 255.55 204.034 250.36 210.092 cv
245.171 216.149 237.582 220.56 229.609 220.337 cv
221.636 220.113 216.529 217.924 211.384 208.076 cv
210.5 209.481 209.616 210.886 209.182 212.542 cv
209.123 223.088 210.114 235.386 210.261 245.74 cv
186.754 249.46 162.092 246.311 138.476 244.795 cv
138.417 237.813 138.525 230.818 138.019 224.811 cv
1 1 1 rgb
f
189.964 261.443 mo
188.759 261.443 187.749 260.402 187.105 258.485 cv
186.993 258.152 li
186.268 255.984 185.518 253.744 184.023 252.09 cv
182.563 250.476 180.368 249.265 177.497 248.491 cv
174.292 247.627 170.487 247.497 167.969 247.41 cv
167.127 247.381 166.4 247.356 165.877 247.31 cv
165.582 247.284 165.364 247.024 165.39 246.729 cv
165.416 246.434 165.683 246.217 165.971 246.243 cv
166.465 246.286 167.179 246.311 168.006 246.339 cv
170.573 246.428 174.452 246.561 177.776 247.457 cv
180.848 248.285 183.218 249.602 184.818 251.372 cv
186.463 253.191 187.249 255.54 188.009 257.811 cv
188.12 258.144 li
188.356 258.844 189.021 260.469 190.061 260.367 cv
190.34 260.342 190.567 260.217 190.753 259.985 cv
191.238 259.38 191.342 258.219 191.228 257.337 cv
190.806 254.041 189.698 250.782 188.024 247.912 cv
187.875 247.656 187.961 247.328 188.217 247.179 cv
188.472 247.03 188.8 247.116 188.95 247.372 cv
190.695 250.364 191.851 253.763 192.292 257.201 cv
192.429 258.276 192.317 259.748 191.589 260.656 cv
191.221 261.113 190.726 261.383 190.158 261.435 cv
189.964 261.443 li
0 0 0 rgb
f
162.936 310.381 mo
160.83 310.381 159.116 311.962 159.116 313.904 cv
159.116 315.847 160.83 317.427 162.936 317.427 cv
165.043 317.427 166.756 315.847 166.756 313.904 cv
166.756 311.962 165.043 310.381 162.936 310.381 cv
cp
162.936 318.499 mo
160.239 318.499 158.044 316.438 158.044 313.904 cv
158.044 311.371 160.239 309.31 162.936 309.31 cv
165.633 309.31 167.828 311.371 167.828 313.904 cv
167.828 316.438 165.633 318.499 162.936 318.499 cv
cp
f
175.943 278.335 mo
173.837 278.335 172.123 279.916 172.123 281.859 cv
172.123 283.801 173.837 285.382 175.943 285.382 cv
178.049 285.382 179.763 283.801 179.763 281.859 cv
179.763 279.916 178.049 278.335 175.943 278.335 cv
cp
175.943 286.453 mo
173.246 286.453 171.051 284.392 171.051 281.859 cv
171.051 279.325 173.246 277.264 175.943 277.264 cv
178.64 277.264 180.835 279.325 180.835 281.859 cv
180.835 284.392 178.64 286.453 175.943 286.453 cv
cp
f
193.763 297.63 mo
193.763 295.389 195.713 293.572 198.119 293.572 cv
200.525 293.572 202.475 295.389 202.475 297.63 cv
202.475 299.872 200.525 301.689 198.119 301.689 cv
195.713 301.689 193.763 299.872 193.763 297.63 cv
cp
.67451 .831373 .968627 rgb
f
198.119 294.107 mo
196.013 294.107 194.299 295.688 194.299 297.631 cv
194.299 299.573 196.013 301.154 198.119 301.154 cv
200.225 301.154 201.939 299.573 201.939 297.631 cv
201.939 295.688 200.225 294.107 198.119 294.107 cv
cp
198.119 302.225 mo
195.422 302.225 193.227 300.164 193.227 297.631 cv
193.227 295.097 195.422 293.036 198.119 293.036 cv
200.816 293.036 203.011 295.097 203.011 297.631 cv
203.011 300.164 200.816 302.225 198.119 302.225 cv
cp
0 0 0 rgb
f
212.734 272.484 mo
210.627 272.484 208.914 274.064 208.914 276.007 cv
208.914 277.95 210.627 279.53 212.734 279.53 cv
214.84 279.53 216.554 277.95 216.554 276.007 cv
216.554 274.064 214.84 272.484 212.734 272.484 cv
cp
212.734 280.602 mo
210.037 280.602 207.842 278.54 207.842 276.007 cv
207.842 273.474 210.037 271.412 212.734 271.412 cv
215.431 271.412 217.625 273.474 217.625 276.007 cv
217.625 278.54 215.431 280.602 212.734 280.602 cv
cp
f
194.68 263.33 mo
194.127 263.33 193.581 263.112 193.178 262.804 cv
192.768 262.493 191.762 261.418 191.275 258.176 cv
191.231 257.883 191.433 257.611 191.726 257.567 cv
192.016 257.521 192.291 257.724 192.335 258.017 cv
192.686 260.35 193.358 261.595 193.827 261.952 cv
194.187 262.226 194.746 262.376 195.12 262.136 cv
195.493 261.896 195.639 261.314 195.733 260.777 cv
196.627 255.644 195.84 250.295 193.458 245.309 cv
193.358 245.1 193.404 244.85 193.572 244.69 cv
193.74 244.53 193.992 244.497 194.196 244.606 cv
196.44 245.816 198.313 248.039 199.47 250.865 cv
200.521 253.432 200.914 256.19 201.182 258.788 cv
201.238 259.331 201.29 259.831 201.508 260.229 cv
201.67 260.523 202.015 260.808 202.332 260.753 cv
202.771 260.678 203.041 260.033 203.191 259.504 cv
204.845 253.657 203.514 247.515 199.632 243.075 cv
199.437 242.853 199.459 242.514 199.682 242.319 cv
199.905 242.124 200.244 242.148 200.438 242.37 cv
204.56 247.084 205.975 253.598 204.222 259.796 cv
203.882 260.996 203.307 261.673 202.512 261.809 cv
201.783 261.935 200.982 261.496 200.569 260.745 cv
200.246 260.157 200.178 259.496 200.117 258.912 cv
199.856 256.379 199.478 253.712 198.479 251.271 cv
197.689 249.343 196.548 247.727 195.183 246.575 cv
197.062 251.26 197.618 256.197 196.788 260.96 cv
196.655 261.727 196.421 262.573 195.699 263.038 cv
195.379 263.243 195.028 263.33 194.68 263.33 cv
cp
f
120.806 311.207 mo
130.349 311.398 li
131.115 274.721 li
121.878 274.721 li
120.806 311.207 li
cp
130.874 312.479 mo
130.863 312.479 li
120.244 312.268 li
120.101 312.265 119.965 312.205 119.866 312.102 cv
119.768 311.998 119.715 311.86 119.719 311.717 cv
120.822 274.169 li
120.831 273.88 121.068 273.649 121.358 273.649 cv
131.662 273.649 li
131.806 273.649 131.944 273.707 132.045 273.81 cv
132.145 273.913 132.201 274.052 132.198 274.196 cv
131.41 311.955 li
131.403 312.247 131.165 312.479 130.874 312.479 cv
cp
f
102.537 309.256 mo
111.816 309.75 li
112.318 293.064 li
103.574 292.612 li
102.537 309.256 li
cp
112.335 310.85 mo
112.307 310.849 li
101.941 310.297 li
101.798 310.29 101.664 310.226 101.569 310.119 cv
101.474 310.012 101.426 309.872 101.435 309.729 cv
102.538 292.016 li
102.556 291.723 102.808 291.508 103.1 291.514 cv
112.897 292.022 li
113.188 292.036 113.414 292.281 113.405 292.573 cv
112.871 310.33 li
112.867 310.475 112.804 310.611 112.698 310.708 cv
112.599 310.8 112.469 310.85 112.335 310.85 cv
cp
f
210.871 258.167 mo
210.684 258.155 li
209.914 258.056 209.466 257.368 209.297 257.109 cv
209.259 257.051 li
208.635 256.174 208.088 255.402 207.6 254.711 cv
205.435 251.652 204.447 250.255 202.888 248.501 cv
202.691 248.28 202.711 247.941 202.932 247.745 cv
203.154 247.548 203.492 247.568 203.688 247.789 cv
205.288 249.588 206.352 251.093 208.474 254.092 cv
208.962 254.782 209.508 255.554 210.132 256.43 cv
210.195 256.524 li
210.299 256.683 210.542 257.056 210.821 257.092 cv
211.05 257.118 211.31 256.931 211.491 256.766 cv
211.786 256.497 211.948 255.157 211.831 254.486 cv
210.711 248.084 206.297 243.245 200.014 237.947 cv
197.941 236.199 195.995 235.003 194.067 234.292 cv
191.971 233.519 189.69 233.24 187.483 232.971 cv
184.976 232.664 182.405 232.428 179.919 232.2 cv
177.425 231.97 174.846 231.733 172.323 231.425 cv
172.03 231.39 171.821 231.122 171.856 230.829 cv
171.892 230.535 172.158 230.33 172.453 230.362 cv
174.96 230.668 177.531 230.904 180.017 231.132 cv
182.511 231.362 185.09 231.599 187.613 231.907 cv
189.88 232.184 192.225 232.47 194.438 233.287 cv
196.485 234.042 198.535 235.299 200.705 237.128 cv
207.167 242.576 211.712 247.581 212.886 254.301 cv
213.004 254.972 212.976 256.864 212.211 257.559 cv
211.767 257.963 211.317 258.167 210.871 258.167 cv
f
66.9958 305.462 mo
76.2862 305.705 li
76.3095 298.166 li
67.0729 298.166 li
66.9958 305.462 li
cp
76.8202 306.791 mo
76.8062 306.791 li
66.4405 306.519 li
66.1478 306.511 65.9155 306.271 65.9187 305.978 cv
66.0069 297.625 li
66.0101 297.331 66.249 297.095 66.5427 297.095 cv
76.8471 297.095 li
76.9894 297.095 77.1261 297.151 77.2266 297.253 cv
77.327 297.353 77.3832 297.49 77.3828 297.632 cv
77.356 306.257 li
77.3556 306.401 77.297 306.539 77.1934 306.64 cv
77.0933 306.737 76.9594 306.791 76.8202 306.791 cv
cp
f
205.369 217.068 mo
205.255 217.068 205.141 217.032 205.044 216.958 cv
204.809 216.779 204.763 216.443 204.943 216.207 cv
208.959 210.947 212.959 205.561 216.831 200.2 cv
217.242 199.632 217.753 198.924 217.795 198.201 cv
217.827 197.635 217.575 197.023 217.352 196.484 cv
206.341 169.836 li
206.228 169.563 206.358 169.249 206.632 169.136 cv
206.907 169.024 207.219 169.153 207.332 169.427 cv
218.343 196.075 li
218.596 196.689 218.911 197.452 218.864 198.263 cv
218.805 199.298 218.166 200.182 217.7 200.828 cv
213.822 206.196 209.816 211.589 205.795 216.858 cv
205.689 216.996 205.53 217.068 205.369 217.068 cv
f
84.9344 286.787 mo
84.3388 307.78 li
94.7046 308.474 li
95.4924 287.184 li
84.9344 286.787 li
cp
.67451 .831373 .968627 rgb
f
84.8887 307.28 mo
94.1896 307.902 li
94.9371 287.699 li
85.4545 287.343 li
84.8887 307.28 li
cp
94.7044 309.01 mo
94.6685 309.009 li
84.3027 308.315 li
84.0157 308.295 83.7949 308.052 83.8033 307.764 cv
84.399 286.772 li
84.4029 286.629 84.4639 286.494 84.5682 286.396 cv
84.6725 286.299 84.8078 286.246 84.9547 286.252 cv
95.5126 286.648 li
95.8081 286.66 96.0386 286.908 96.0278 287.204 cv
95.2399 308.494 li
95.2346 308.638 95.1708 308.775 95.063 308.872 cv
94.9643 308.961 94.8366 309.01 94.7044 309.01 cv
cp
0 0 0 rgb
f
265.091 295.483 mo
264.929 295.459 li
264.647 295.369 264.491 295.068 264.58 294.786 cv
273.515 266.533 li
273.573 266.352 273.722 266.214 273.908 266.172 cv
274.094 266.131 274.287 266.189 274.417 266.328 cv
277.987 270.137 281.112 273.032 284.199 275.387 cv
287.753 267.231 290.668 259.459 293.103 251.649 cv
293.163 251.455 293.328 251.312 293.528 251.279 cv
293.729 251.248 293.93 251.33 294.049 251.495 cv
298.589 257.784 303.212 264.634 308.551 272.985 cv
319.716 241.442 li
319.815 241.163 320.121 241.017 320.4 241.116 cv
320.679 241.215 320.825 241.521 320.726 241.8 cv
309.195 274.377 li
309.126 274.57 308.954 274.707 308.75 274.73 cv
308.544 274.756 308.348 274.659 308.238 274.486 cv
302.906 266.119 298.299 259.257 293.804 252.99 cv
291.361 260.693 288.446 268.375 284.908 276.438 cv
284.843 276.588 284.713 276.699 284.555 276.741 cv
284.397 276.783 284.229 276.75 284.098 276.653 cv
280.966 274.323 277.825 271.473 274.263 267.725 cv
265.602 295.109 li
265.529 295.338 265.318 295.483 265.091 295.483 cv
cp
f
297.817 277.323 mo
297.702 277.323 297.586 277.285 297.488 277.209 cv
296.372 276.34 295.229 275.467 294.09 274.615 cv
293.853 274.439 293.804 274.103 293.982 273.866 cv
294.158 273.628 294.495 273.579 294.731 273.757 cv
295.876 274.613 297.025 275.49 298.147 276.364 cv
298.38 276.546 298.422 276.883 298.24 277.116 cv
298.134 277.252 297.976 277.323 297.817 277.323 cv
cp
267.476 280.573 mo
267.368 280.573 267.26 280.541 267.165 280.474 cv
263.673 277.99 li
263.432 277.818 263.376 277.484 263.547 277.243 cv
263.719 277.002 264.053 276.945 264.294 277.116 cv
267.787 279.601 li
268.028 279.772 268.084 280.107 267.913 280.348 cv
267.808 280.495 267.643 280.573 267.476 280.573 cv
cp
289.442 280.939 mo
289.338 280.939 289.233 280.909 289.141 280.846 cv
288.896 280.68 288.833 280.346 288.999 280.102 cv
291.41 276.558 li
291.577 276.313 291.91 276.25 292.155 276.417 cv
292.399 276.583 292.463 276.917 292.296 277.161 cv
289.885 280.704 li
289.782 280.857 289.613 280.939 289.442 280.939 cv
cp
304.47 282.727 mo
304.348 282.727 304.225 282.685 304.125 282.6 cv
303.042 281.684 301.935 280.766 300.834 279.871 cv
300.604 279.685 300.569 279.347 300.756 279.118 cv
300.942 278.888 301.28 278.852 301.509 279.04 cv
302.616 279.938 303.729 280.861 304.817 281.782 cv
305.043 281.973 305.071 282.311 304.88 282.537 cv
304.774 282.662 304.623 282.727 304.47 282.727 cv
cp
274.461 285.542 mo
274.353 285.542 274.245 285.51 274.15 285.443 cv
270.658 282.959 li
270.417 282.787 270.361 282.453 270.532 282.212 cv
270.703 281.971 271.038 281.914 271.279 282.085 cv
274.772 284.57 li
275.013 284.742 275.069 285.076 274.897 285.318 cv
274.793 285.464 274.628 285.542 274.461 285.542 cv
cp
284.62 288.026 mo
284.516 288.026 284.411 287.996 284.319 287.934 cv
284.074 287.767 284.011 287.434 284.177 287.189 cv
286.588 283.646 li
286.754 283.401 287.088 283.338 287.332 283.504 cv
287.577 283.67 287.64 284.004 287.474 284.248 cv
285.063 287.792 li
284.959 287.944 284.791 288.026 284.62 288.026 cv
cp
281.519 290.39 mo
281.342 290.36 li
280.854 290.189 280.407 289.895 280.034 289.629 cv
277.643 287.928 li
277.402 287.757 277.346 287.422 277.517 287.181 cv
277.689 286.94 278.023 286.884 278.264 287.056 cv
280.655 288.756 li
280.967 288.978 281.334 289.222 281.696 289.348 cv
281.975 289.446 282.122 289.751 282.025 290.031 cv
281.947 290.252 281.74 290.39 281.519 290.39 cv
cp
f
86.2794 260.661 mo
86.2773 260.661 li
78.6284 260.629 71.0674 259.397 63.8046 256.999 cv
63.5238 256.906 63.371 256.603 63.4638 256.322 cv
63.5569 256.041 63.859 255.889 64.1408 255.981 cv
71.2962 258.344 78.7456 259.558 86.2815 259.59 cv
86.5776 259.591 86.8166 259.832 86.8152 260.128 cv
86.8138 260.423 86.5742 260.661 86.2794 260.661 cv
cp
f
76.08 267.464 mo
76.0375 267.462 li
72.058 267.149 68.076 266.498 64.2018 265.526 cv
63.9151 265.454 63.7407 265.163 63.8126 264.876 cv
63.8848 264.589 64.1746 264.416 64.4628 264.487 cv
68.279 265.444 72.2013 266.085 76.1212 266.394 cv
76.4163 266.417 76.6367 266.675 76.6134 266.97 cv
76.5914 267.25 76.3566 267.464 76.08 267.464 cv
cp
f
71.8337 276.415 mo
71.7835 276.413 li
68.5699 276.115 65.4 275.409 62.3623 274.314 cv
62.0839 274.214 61.9395 273.907 62.04 273.629 cv
62.1404 273.35 62.4477 273.206 62.7257 273.306 cv
65.678 274.371 68.759 275.057 71.8825 275.346 cv
72.1769 275.373 72.3939 275.634 72.3663 275.929 cv
72.3408 276.207 72.1072 276.415 71.8337 276.415 cv
cp
f
311.714 201.626 mo
311.489 201.576 li
306.498 199.259 300.945 198.071 295.448 198.138 cv
295.141 198.135 294.909 197.904 294.906 197.609 cv
294.902 197.313 295.139 197.07 295.435 197.066 cv
301.096 197.006 306.804 198.22 311.94 200.604 cv
312.209 200.729 312.325 201.047 312.201 201.316 cv
312.11 201.511 311.916 201.626 311.714 201.626 cv
cp
f
207.47 244.447 mo
207.18 244.447 206.941 244.214 206.935 243.922 cv
206.929 243.626 207.164 243.381 207.46 243.375 cv
209.516 243.333 li
208.814 238.777 208.832 233.576 208.851 228.084 cv
208.867 223.184 208.885 218.117 208.434 212.77 cv
208.409 212.475 208.628 212.216 208.923 212.191 cv
209.224 212.171 209.477 212.385 209.502 212.68 cv
209.956 218.074 209.939 223.165 209.922 228.088 cv
209.903 233.78 209.884 239.157 210.672 243.765 cv
210.698 243.919 210.656 244.076 210.557 244.197 cv
210.458 244.317 210.311 244.388 210.155 244.391 cv
207.482 244.447 li
207.47 244.447 li
cp
f
305.291 207.324 mo
305.144 207.303 li
301.99 206.402 298.599 206.106 295.338 206.448 cv
295.052 206.474 294.781 206.265 294.75 205.97 cv
294.719 205.676 294.932 205.413 295.227 205.382 cv
298.623 205.027 302.154 205.334 305.438 206.273 cv
305.723 206.354 305.887 206.651 305.806 206.935 cv
305.739 207.171 305.524 207.324 305.291 207.324 cv
cp
f
311.361 216.888 mo
311.122 216.831 li
306.645 214.597 301.439 213.668 296.466 214.217 cv
296.167 214.247 295.907 214.038 295.875 213.744 cv
295.842 213.449 296.054 213.185 296.348 213.152 cv
301.526 212.58 306.942 213.547 311.601 215.873 cv
311.866 216.004 311.973 216.326 311.841 216.591 cv
311.747 216.779 311.558 216.888 311.361 216.888 cv
cp
f
164.221 310.468 mo
164.017 310.428 li
163.744 310.315 163.613 310.002 163.725 309.728 cv
173.538 285.853 li
173.651 285.58 173.964 285.45 174.238 285.561 cv
174.512 285.674 174.642 285.987 174.53 286.26 cv
164.717 310.136 li
164.632 310.343 164.432 310.468 164.221 310.468 cv
cp
f
194.663 295.359 mo
194.552 295.359 194.441 295.325 194.345 295.254 cv
179.521 284.299 li
179.283 284.123 179.233 283.788 179.409 283.55 cv
179.585 283.312 179.92 283.262 180.158 283.437 cv
194.982 294.392 li
195.22 294.568 195.27 294.904 195.094 295.142 cv
194.989 295.284 194.827 295.359 194.663 295.359 cv
cp
f
200.765 294.573 mo
200.658 294.573 200.549 294.541 200.456 294.475 cv
200.214 294.303 200.157 293.969 200.328 293.728 cv
210.327 279.622 li
210.498 279.38 210.834 279.324 211.074 279.495 cv
211.316 279.666 211.373 280 211.202 280.242 cv
201.202 294.347 li
201.098 294.495 200.933 294.573 200.765 294.573 cv
cp
f
126.032 224.605 mo
130.162 224.738 133.961 224.872 137.524 225.017 cv
137.485 224.856 li
136.889 217.77 136.282 211.595 135.696 205.623 cv
135.215 200.73 134.721 195.701 134.23 190.145 cv
133.137 195.307 131.504 201.901 129.914 208.32 cv
128.404 214.418 126.973 220.194 126.032 224.605 cv
166.514 251.356 mo
166.496 251.356 li
140.411 250.48 120.54 250.354 102.063 250.946 cv
99.8176 251.019 97.0242 251.107 94.7994 249.76 cv
92.9087 248.615 91.8661 246.711 91.3244 245.315 cv
89.4182 240.404 90.6925 234.885 91.7159 230.451 cv
94.2855 219.32 101.111 189.753 107.242 175.709 cv
110.387 168.507 113.475 163.532 117.258 159.576 cv
126.189 150.234 138.844 146.669 153.255 143.279 cv
153.4 143.245 153.551 143.273 153.674 143.354 cv
153.797 143.435 153.881 143.564 153.906 143.709 cv
154.437 146.764 157.781 148.541 160.733 149.185 cv
162.899 149.657 166.109 149.96 169.104 148.722 cv
171.875 147.578 173.956 145.132 175.125 141.649 cv
175.192 141.448 175.373 141.305 175.584 141.286 cv
185.05 140.43 191.697 140.357 196.501 141.055 cv
203.788 142.113 209.94 148.079 212.246 150.594 cv
216.827 155.59 220.18 160.153 223.731 164.985 cv
226.396 168.612 229.148 172.357 232.635 176.592 cv
240.21 157.145 243.873 137.571 243.522 118.4 cv
243.517 118.135 243.707 117.906 243.969 117.862 cv
244.231 117.819 244.484 117.972 244.567 118.225 cv
245.057 119.727 248.931 120.729 254.225 120.729 cv
254.38 120.728 li
261.924 120.701 270.36 118.68 271.421 115.346 cv
271.503 115.088 271.766 114.933 272.031 114.982 cv
272.297 115.033 272.484 115.274 272.466 115.544 cv
270.836 139.968 269.151 165.223 261.576 189.036 cv
259.505 195.545 256.405 203.86 250.767 210.44 cv
244.992 217.182 237.076 221.088 229.594 220.872 cv
221.714 220.651 216.205 218.497 211.365 208.14 cv
211.24 207.872 211.356 207.554 211.624 207.428 cv
211.892 207.303 212.211 207.418 212.337 207.687 cv
216.965 217.593 221.983 219.587 229.624 219.801 cv
236.775 219.992 244.386 216.242 249.954 209.743 cv
255.466 203.309 258.515 195.123 260.555 188.711 cv
267.884 165.673 269.675 141.217 271.262 117.484 cv
268.071 120.582 259.898 121.78 254.384 121.8 cv
252.494 121.817 247.029 121.666 244.613 119.911 cv
244.751 139.013 240.948 158.49 233.3 177.831 cv
233.23 178.007 233.073 178.133 232.886 178.163 cv
232.698 178.194 232.511 178.122 232.39 177.977 cv
228.605 173.427 225.688 169.458 222.867 165.619 cv
219.334 160.812 215.998 156.271 211.456 151.318 cv
209.227 148.888 203.293 143.124 196.347 142.115 cv
191.686 141.438 185.223 141.504 176.025 142.322 cv
174.735 145.932 172.489 148.484 169.513 149.713 cv
166.939 150.777 163.825 150.956 160.505 150.232 cv
157.386 149.552 153.866 147.683 152.974 144.447 cv
138.95 147.76 126.652 151.3 118.032 160.316 cv
114.341 164.177 111.316 169.057 108.224 176.138 cv
102.132 190.091 95.3233 219.588 92.7601 230.692 cv
91.7696 234.983 90.5366 240.323 92.3235 244.927 cv
92.805 246.168 93.7219 247.855 95.3546 248.844 cv
97.3071 250.026 99.815 249.945 102.029 249.875 cv
120.337 249.288 140.009 249.406 165.717 250.258 cv
164.783 247.204 165.862 242.08 167.386 238.314 cv
167.507 238.015 li
168.818 234.771 170.403 230.846 174.359 228.936 cv
158.44 226.97 146.069 226.32 125.358 225.655 cv
125.2 225.65 125.052 225.575 124.954 225.451 cv
124.856 225.327 124.818 225.165 124.851 225.01 cv
125.792 220.508 127.289 214.463 128.874 208.063 cv
130.875 199.984 132.944 191.629 133.911 186.234 cv
133.959 185.969 134.186 185.78 134.464 185.793 cv
134.732 185.806 134.95 186.016 134.972 186.283 cv
135.569 193.37 136.175 199.546 136.762 205.518 cv
137.349 211.494 137.956 217.672 138.553 224.766 cv
138.562 224.87 138.54 224.97 138.496 225.056 cv
152.822 225.652 163.4 226.442 176.724 228.154 cv
176.98 228.187 177.176 228.398 177.191 228.656 cv
177.205 228.914 177.034 229.145 176.783 229.206 cv
171.723 230.439 170.011 234.677 168.501 238.416 cv
168.38 238.716 li
166.749 242.743 165.749 248.111 166.992 250.579 cv
167.078 250.748 167.067 250.95 166.965 251.109 cv
166.867 251.263 166.696 251.356 166.514 251.356 cv
f
177.953 231.818 mo
177.875 231.813 li
177.582 231.77 177.379 231.498 177.422 231.206 cv
177.508 230.611 177.355 229.991 177.002 229.505 cv
176.832 229.271 176.63 229.149 176.536 229.178 cv
176.252 229.256 175.957 229.087 175.878 228.802 cv
175.8 228.516 175.969 228.222 176.254 228.144 cv
176.812 227.992 177.432 228.272 177.87 228.876 cv
178.385 229.586 178.608 230.491 178.482 231.36 cv
178.443 231.627 178.214 231.818 177.953 231.818 cv
f
167.828 251.841 mo
167.049 251.841 166.163 251.494 165.829 250.666 cv
165.718 250.391 165.851 250.079 166.125 249.969 cv
166.399 249.857 166.712 249.99 166.822 250.265 cv
166.98 250.653 167.54 250.81 167.987 250.761 cv
168.9 250.66 169.706 249.967 170.374 249.303 cv
171.113 248.568 171.808 247.776 172.441 246.951 cv
172.621 246.715 172.957 246.671 173.192 246.851 cv
173.427 247.031 173.471 247.367 173.291 247.602 cv
172.63 248.466 171.902 249.294 171.129 250.063 cv
170.33 250.858 169.346 251.689 168.104 251.826 cv
168.015 251.836 167.922 251.841 167.828 251.841 cv
f
243.989 118.781 mo
243.717 118.781 243.485 118.575 243.457 118.299 cv
243.414 117.875 243.557 117.434 243.86 117.057 cv
244.109 116.746 244.425 116.527 244.7 116.353 cv
245.901 115.594 247.284 115.119 248.698 114.979 cv
248.986 114.951 249.255 115.165 249.284 115.46 cv
249.313 115.754 249.098 116.017 248.803 116.046 cv
247.554 116.169 246.333 116.589 245.272 117.259 cv
245.071 117.386 244.846 117.54 244.695 117.727 cv
244.574 117.879 244.509 118.052 244.523 118.191 cv
244.553 118.485 244.338 118.748 244.044 118.778 cv
243.989 118.781 li
f
271.88 116.229 mo
271.868 116.229 li
271.572 116.222 271.338 115.977 271.344 115.681 cv
271.346 115.594 271.278 115.477 271.175 115.39 cv
271.026 115.264 270.813 115.185 270.624 115.124 cv
270.026 114.931 269.403 114.845 268.773 114.865 cv
268.48 114.885 268.23 114.644 268.22 114.348 cv
268.21 114.052 268.441 113.804 268.736 113.794 cv
269.494 113.766 270.237 113.873 270.954 114.104 cv
271.225 114.192 271.573 114.323 271.867 114.571 cv
272.224 114.874 272.424 115.286 272.415 115.704 cv
272.409 115.996 272.17 116.229 271.88 116.229 cv
f
161.807 155.795 mo
157.186 155.795 152.602 153.123 150.404 149.048 cv
150.263 148.787 150.361 148.462 150.621 148.322 cv
150.881 148.182 151.206 148.279 151.347 148.539 cv
153.51 152.549 158.192 155.072 162.73 154.684 cv
163.029 154.658 163.284 154.877 163.31 155.172 cv
163.335 155.466 163.117 155.726 162.822 155.751 cv
162.484 155.781 162.145 155.795 161.807 155.795 cv
cp
f
150.813 156.453 mo
150.619 156.417 li
148.516 155.605 146.887 153.647 146.47 151.431 cv
146.416 151.14 146.607 150.86 146.898 150.805 cv
147.189 150.751 147.469 150.942 147.523 151.233 cv
147.873 153.093 149.24 154.736 151.006 155.418 cv
151.282 155.525 151.419 155.835 151.313 156.111 cv
151.23 156.323 151.028 156.453 150.813 156.453 cv
cp
f
122.682 61.3158 mo
122.473 61.273 li
122.201 61.1574 122.074 60.8426 122.19 60.5703 cv
123.095 58.4401 124.654 56.4724 126.823 54.7216 cv
128.771 53.1493 130.988 51.9293 133.092 50.8452 cv
133.356 50.7099 133.679 50.8131 133.814 51.076 cv
133.949 51.3391 133.846 51.6621 133.583 51.7976 cv
131.529 52.8557 129.37 54.0434 127.496 55.5556 cv
125.465 57.1945 124.012 59.0227 123.176 60.9893 cv
123.089 61.1933 122.891 61.3158 122.682 61.3158 cv
f
229.73 183.16 mo
229.615 183.16 229.499 183.123 229.402 183.048 cv
229.168 182.867 229.125 182.53 229.307 182.296 cv
230.762 180.416 231.931 178.61 232.901 175.905 cv
233.001 175.626 233.306 175.482 233.586 175.581 cv
233.865 175.682 234.01 175.988 233.91 176.267 cv
232.892 179.104 231.672 180.992 230.153 182.952 cv
230.048 183.089 229.89 183.16 229.73 183.16 cv
cp
f
117.607 226.267 mo
117.347 226.267 117.119 226.077 117.078 225.812 cv
117.033 225.52 117.234 225.246 117.527 225.201 cv
120.903 224.683 123.845 224.526 127.684 224.659 cv
127.979 224.669 128.211 224.917 128.201 225.213 cv
128.19 225.509 127.949 225.756 127.647 225.73 cv
123.88 225.599 120.996 225.753 117.689 226.26 cv
117.607 226.267 li
f
133.497 103.524 mo
133.269 103.524 133.058 103.378 132.986 103.149 cv
132.338 101.095 132.116 98.8773 132.344 96.7353 cv
132.375 96.4409 132.637 96.2271 132.933 96.2592 cv
133.227 96.2903 133.44 96.5543 133.409 96.8483 cv
133.197 98.8449 133.404 100.913 134.008 102.827 cv
134.097 103.109 133.94 103.41 133.658 103.499 cv
133.497 103.524 li
cp
f
124.32 63.7822 mo
123.356 63.5926 122.42 63.3221 121.52 62.9779 cv
121.387 62.6698 121.336 62.3108 121.402 61.9125 cv
121.485 61.1361 122.047 60.5121 122.503 59.8921 cv
122.391 60.1162 122.286 60.3424 122.19 60.5703 cv
122.074 60.8426 122.201 61.1574 122.473 61.273 cv
122.682 61.3158 li
122.891 61.3158 123.089 61.1933 123.176 60.9893 cv
124.012 59.0227 125.465 57.1945 127.496 55.5556 cv
129.37 54.0434 131.529 52.8557 133.583 51.7976 cv
133.846 51.6621 133.949 51.3391 133.814 51.076 cv
133.719 50.8915 133.532 50.7857 133.337 50.7857 cv
133.255 50.7857 133.171 50.8048 133.092 50.8452 cv
131.406 51.7137 129.648 52.6696 128.014 53.8238 cv
131.024 51.2092 134.462 49.0887 138.265 47.8463 cv
139.106 47.5379 139.97 47.2915 140.841 47.0836 cv
141.233 47.0089 141.631 46.8927 142.028 46.8927 cv
142.187 46.8927 142.346 46.9113 142.505 46.9584 cv
143.681 47.2685 144.286 48.725 143.647 49.7653 cv
143.297 50.4134 142.585 50.6633 141.904 50.8031 cv
141.118 51.0226 140.343 51.2872 139.582 51.5825 cv
136.894 52.5628 136.185 52.8324 133.449 54.651 cv
131.538 55.8508 129.191 58.0028 127.349 60.132 cv
126.298 61.2526 125.287 62.4698 124.32 63.7822 cv
.588235 .72549 .843137 rgb
f
123.407 64.1589 mo
122.621 64.1589 121.837 63.7133 121.52 62.9779 cv
122.42 63.3221 123.356 63.5926 124.32 63.7822 cv
124.263 63.8598 124.206 63.9384 124.149 64.0166 cv
123.911 64.1131 123.659 64.1589 123.407 64.1589 cv
0 0 0 rgb
f
124.149 64.0166 mo
124.206 63.9384 124.263 63.8598 124.32 63.7822 cv
125.287 62.4698 126.298 61.2526 127.349 60.132 cv
126.429 61.196 125.636 62.254 125.085 63.1851 cv
124.846 63.5965 124.515 63.8673 124.149 64.0166 cv
f
122.682 61.3158 mo
122.473 61.273 li
122.201 61.1574 122.074 60.8426 122.19 60.5703 cv
122.286 60.3424 122.391 60.1162 122.503 59.8921 cv
122.549 59.8288 122.594 59.7657 122.638 59.7024 cv
123.498 58.6157 124.321 57.494 125.259 56.4722 cv
126.132 55.5471 127.051 54.6602 128.014 53.8238 cv
129.648 52.6696 131.406 51.7137 133.092 50.8452 cv
133.171 50.8048 133.255 50.7857 133.337 50.7857 cv
133.532 50.7857 133.719 50.8915 133.814 51.076 cv
133.949 51.3391 133.846 51.6621 133.583 51.7976 cv
131.529 52.8557 129.37 54.0434 127.496 55.5556 cv
125.465 57.1945 124.012 59.0227 123.176 60.9893 cv
123.089 61.1933 122.891 61.3158 122.682 61.3158 cv
f
148.898 80.0831 mo
144.441 80.083 140.109 78.8802 135.858 77.6353 cv
135.823 77.2164 135.782 76.7904 135.735 76.358 cv
140.064 77.3515 144.185 77.7738 148.148 77.7737 cv
158.439 77.7732 167.649 74.9224 176.562 71.8185 cv
176.666 71.8795 176.763 71.9542 176.849 72.0425 cv
177.351 72.5505 177.452 73.4392 176.965 73.9888 cv
176.79 74.2787 176.468 74.4169 176.174 74.5597 cv
175.663 74.7756 175.153 74.996 174.628 75.1766 cv
171.408 76.3713 168.067 77.1549 164.748 78.0163 cv
162.549 78.5397 160.352 79.0908 158.122 79.4639 cv
155.308 79.8313 152.469 80.0528 149.631 80.0721 cv
149.386 80.0795 149.142 80.0831 148.898 80.0831 cv
.870588 .870588 .870588 rgb
f
134.724 77.0055 mo
134.538 76.6968 134.495 76.3015 134.611 75.9601 cv
134.653 76.3129 134.69 76.6618 134.724 77.0055 cv
137.336 75.6082 mo
136.748 75.4886 136.158 75.3586 135.562 75.2174 cv
135.614 75.2116 135.666 75.2089 135.718 75.2089 cv
136.251 75.2089 136.805 75.4861 137.316 75.6023 cv
137.323 75.6042 137.33 75.6063 137.336 75.6082 cv
.588235 .72549 .843137 rgb
f
148.148 77.7737 mo
144.185 77.7738 140.064 77.3515 135.735 76.358 cv
135.782 76.7904 135.823 77.2164 135.858 77.6353 cv
135.702 77.5897 135.547 77.5441 135.391 77.4984 cv
135.091 77.426 134.866 77.2409 134.724 77.0055 cv
134.69 76.6618 134.653 76.3129 134.611 75.9601 cv
134.694 75.7151 134.859 75.4979 135.112 75.3602 cv
135.258 75.2785 135.409 75.2344 135.562 75.2174 cv
136.158 75.3586 136.748 75.4886 137.336 75.6082 cv
141.501 76.8415 144.574 77.4988 148.439 77.4988 cv
148.497 77.4988 148.555 77.4987 148.614 77.4984 cv
153.063 77.3774 156.438 77.0847 160.139 76.2831 cv
163.239 75.7852 166.209 74.7622 169.227 73.9327 cv
170.794 73.4679 172.302 72.821 173.83 72.2461 cv
174.049 72.1474 175.034 71.7797 175.226 71.7234 cv
175.408 71.651 175.602 71.615 175.796 71.615 cv
176.064 71.615 176.331 71.6832 176.562 71.8185 cv
167.649 74.9224 158.439 77.7732 148.148 77.7737 cv
0 0 0 rgb
f
171.792 138.07 mo
171.756 138.066 li
171.508 138.039 li
171.337 138.009 li
171.253 137.994 li
171.212 137.986 li
171.234 137.989 li
170.499 137.841 169.832 137.421 169.153 137.112 cv
167.599 136.287 166.048 135.454 164.51 134.598 cv
161.571 132.981 158.505 131.607 155.506 130.104 cv
155.677 128.533 li
157.187 128.758 158.69 128.873 160.18 128.88 cv
160.278 128.922 160.376 128.964 160.473 129.007 cv
160.496 128.963 160.521 128.92 160.55 128.88 cv
163.941 128.855 167.258 128.268 170.412 127.137 cv
171.185 130.873 171.968 134.349 172.838 137.68 cv
172.67 137.839 172.46 137.96 172.21 138.02 cv
172.083 138.055 171.952 138.067 171.821 138.067 cv
171.807 138.067 171.794 138.067 171.78 138.067 cv
171.792 138.07 li
.870588 .870588 .870588 rgb
f
172.838 137.68 mo
171.968 134.349 171.185 130.873 170.412 127.137 cv
170.572 127.079 170.733 127.02 170.893 126.96 cv
170.898 126.981 170.905 127.003 170.914 127.026 cv
171 127.261 li
170.955 127.349 170.938 127.455 170.972 127.579 cv
171.26 128.629 171.546 129.68 171.833 130.731 cv
172.037 131.864 172.365 132.968 172.754 134.052 cv
172.92 134.633 173.087 135.214 173.247 135.797 cv
173.322 136.071 173.391 136.35 173.462 136.629 cv
173.413 136.759 173.341 136.879 173.25 136.984 cv
173.175 137.247 173.036 137.491 172.838 137.68 cv
155.506 130.104 mo
155.355 130.028 155.204 129.952 155.053 129.875 cv
154.817 129.703 li
154.918 129.36 155.043 129.024 155.151 128.683 cv
155.174 128.61 155.198 128.536 155.217 128.461 cv
155.37 128.486 155.524 128.51 155.677 128.533 cv
155.506 130.104 li
0 0 0 rgb
f
160.18 128.88 mo
158.69 128.873 157.187 128.758 155.677 128.533 cv
155.524 128.51 155.37 128.486 155.217 128.461 cv
155.221 128.445 155.225 128.428 155.228 128.411 cv
155.254 128.284 155.249 128.156 155.249 128.027 cv
155.249 127.93 155.25 127.827 155.246 127.724 cv
156.022 127.79 156.799 127.825 157.581 127.825 cv
157.645 127.825 157.71 127.825 157.774 127.824 cv
158.126 127.984 158.48 128.141 158.835 128.296 cv
159.282 128.492 159.731 128.686 160.18 128.88 cv
160.55 128.88 mo
160.678 128.699 160.871 128.554 161.134 128.479 cv
162.049 128.28 165.198 128.137 166.188 127.87 cv
167.413 127.584 168.061 127.292 168.607 127.042 cv
169.193 126.774 169.873 126.308 170.485 126.308 cv
170.692 126.308 170.892 126.361 171.077 126.494 cv
170.93 126.589 170.84 126.751 170.893 126.96 cv
170.733 127.02 170.572 127.079 170.412 127.137 cv
167.258 128.268 163.941 128.855 160.55 128.88 cv
f
230.147 219.808 mo
229.972 219.808 229.797 219.806 229.624 219.801 cv
228.562 219.771 227.55 219.707 226.584 219.592 cv
226.288 219.553 225.993 219.513 225.698 219.47 cv
220.235 218.609 216.22 215.856 212.473 207.975 cv
213.5 206.587 214.523 205.195 215.539 203.804 cv
215.627 203.72 215.716 203.636 215.806 203.553 cv
215.909 203.459 215.96 203.353 215.977 203.248 cv
216.152 203.056 216.327 202.866 216.504 202.677 cv
216.717 202.782 216.916 202.941 217.083 203.169 cv
217.436 203.581 217.478 204.169 217.704 204.654 cv
217.779 204.835 li
218.735 206.951 219.719 209.081 221.028 211.005 cv
221.048 211.032 li
221.641 211.777 222.364 212.406 223.105 212.999 cv
223.368 213.191 224.341 213.909 224.608 214.054 cv
224.794 214.213 225.785 214.698 225.919 214.772 cv
227.802 215.563 231.092 216.622 233.854 216.622 cv
234 216.622 234.146 216.619 234.289 216.613 cv
236.756 216.611 237.976 216.621 240.269 215.845 cv
240.617 215.751 240.576 215.641 240.892 215.641 cv
240.968 215.641 241.066 215.648 241.195 215.663 cv
241.577 215.755 241.828 216.132 241.837 216.507 cv
238.98 218.137 235.958 219.201 232.947 219.614 cv
232.91 219.615 232.872 219.616 232.835 219.617 cv
232.041 219.655 231.248 219.748 230.454 219.806 cv
230.351 219.807 230.249 219.808 230.147 219.808 cv
.870588 .870588 .870588 rgb
f
238.007 219.462 mo
238.084 219.434 238.162 219.406 238.239 219.377 cv
238.207 219.392 238.173 219.405 238.139 219.417 cv
238.095 219.434 238.051 219.449 238.007 219.462 cv
f
212.473 207.975 mo
212.444 207.916 212.416 207.856 212.388 207.797 cv
213.267 206.537 214.197 205.315 215.189 204.142 cv
215.305 204.029 215.421 203.916 215.539 203.804 cv
214.523 205.195 213.5 206.587 212.473 207.975 cv
0 0 0 rgb
f
229.272 219.854 mo
228.985 219.854 228.698 219.844 228.411 219.818 cv
227.802 219.746 227.193 219.672 226.584 219.592 cv
227.55 219.707 228.562 219.771 229.624 219.801 cv
229.797 219.806 229.972 219.808 230.147 219.808 cv
230.249 219.808 230.351 219.807 230.454 219.806 cv
230.06 219.834 229.666 219.854 229.272 219.854 cv
232.947 219.614 mo
235.958 219.201 238.98 218.137 241.837 216.507 cv
241.841 216.697 241.784 216.885 241.65 217.037 cv
241.392 217.379 240.911 217.441 240.542 217.624 cv
240.027 217.827 239.496 217.987 238.958 218.119 cv
238.977 218.633 238.722 219.159 238.239 219.377 cv
238.162 219.406 238.084 219.434 238.007 219.462 cv
237.709 219.552 237.394 219.569 237.075 219.569 cv
236.973 219.569 236.871 219.568 236.768 219.566 cv
236.667 219.564 236.566 219.562 236.466 219.562 cv
236.355 219.562 236.244 219.564 236.135 219.571 cv
235.865 219.562 235.596 219.558 235.326 219.558 cv
234.533 219.558 233.74 219.591 232.947 219.614 cv
225.698 219.47 mo
224.164 219.248 222.637 218.967 221.15 218.539 cv
217.617 217.527 215.524 214.469 214.046 211.234 cv
213.402 210.426 212.798 209.587 212.256 208.701 cv
212.162 208.544 212.112 208.385 212.09 208.228 cv
212.189 208.083 212.288 207.94 212.388 207.797 cv
212.416 207.856 212.444 207.916 212.473 207.975 cv
216.22 215.856 220.235 218.609 225.698 219.47 cv
f
263.337 120.283 mo
263.352 120.28 li
263.352 120.28 li
263.365 120.278 li
263.337 120.283 li
f
254.225 120.729 mo
252.501 120.729 250.927 120.623 249.572 120.427 cv
249.567 120.228 249.561 120.03 249.554 119.831 cv
251.236 120.452 252.996 120.691 254.783 120.691 cv
257.628 120.691 260.546 120.087 263.34 119.46 cv
264.773 119.138 266.223 118.806 267.485 118.23 cv
267.463 118.341 267.441 118.451 267.42 118.561 cv
264.028 119.936 259.034 120.712 254.38 120.728 cv
254.225 120.729 li
248.495 120.244 mo
246.293 119.808 244.853 119.102 244.567 118.225 cv
244.555 118.189 244.54 118.155 244.522 118.123 cv
244.531 117.999 244.593 117.855 244.695 117.727 cv
244.846 117.54 245.071 117.386 245.272 117.259 cv
246.182 116.684 247.209 116.294 248.271 116.117 cv
248.382 117.49 248.457 118.867 248.495 120.244 cv
268.617 118.016 mo
268.819 116.969 269.014 115.919 269.201 114.868 cv
269.685 114.889 270.162 114.975 270.624 115.124 cv
270.813 115.185 271.026 115.264 271.175 115.39 cv
271.247 115.45 271.301 115.525 271.327 115.595 cv
270.927 116.511 269.963 117.324 268.617 118.016 cv
.870588 .870588 .870588 rgb
f
254.783 120.691 mo
252.996 120.691 251.236 120.452 249.554 119.831 cv
249.541 119.41 249.524 118.989 249.503 118.568 cv
250.963 118.808 251.097 118.944 252.671 118.948 cv
254.975 118.9 255.73 118.761 257.317 118.545 cv
259.152 118.36 259.29 118.363 260.776 118.139 cv
262.092 117.945 263.346 117.462 264.596 117.026 cv
265.72 116.73 266.636 116.424 267.372 116.147 cv
267.508 116.019 267.644 115.893 267.774 115.765 cv
267.847 115.695 267.918 115.624 267.989 115.553 cv
267.826 116.447 267.658 117.339 267.485 118.23 cv
266.223 118.806 264.773 119.138 263.34 119.46 cv
260.546 120.087 257.628 120.691 254.783 120.691 cv
f
267.42 118.561 mo
267.441 118.451 267.463 118.341 267.485 118.23 cv
267.658 117.339 267.826 116.447 267.989 115.553 cv
268.212 115.328 268.425 115.094 268.631 114.854 cv
268.666 114.862 268.703 114.866 268.74 114.866 cv
268.751 114.866 268.762 114.866 268.773 114.865 cv
268.834 114.863 268.894 114.862 268.954 114.862 cv
269.037 114.862 269.119 114.864 269.201 114.868 cv
269.014 115.919 268.819 116.969 268.617 118.016 cv
268.246 118.207 267.846 118.389 267.42 118.561 cv
0 0 0 rgb
f
249.572 120.427 mo
249.195 120.373 248.836 120.312 248.495 120.244 cv
248.457 118.867 248.382 117.49 248.271 116.117 cv
248.447 116.087 248.625 116.063 248.803 116.046 cv
248.916 116.035 249.017 115.989 249.097 115.921 cv
249.293 116.352 249.259 116.886 248.821 117.347 cv
248.795 117.368 li
249.075 117.681 249.177 118.104 249.121 118.505 cv
249.167 118.515 li
249.287 118.534 249.398 118.551 249.503 118.568 cv
249.524 118.989 249.541 119.41 249.554 119.831 cv
249.561 120.03 249.567 120.228 249.572 120.427 cv
f
252.15 121.43 mo
249.395 121.366 246.662 120.631 244.222 119.354 cv
243.95 119.205 243.785 118.967 243.716 118.705 cv
243.796 118.753 243.89 118.781 243.989 118.781 cv
244.044 118.778 li
244.338 118.748 244.553 118.485 244.523 118.191 cv
244.521 118.169 244.52 118.147 244.522 118.123 cv
244.54 118.155 244.555 118.189 244.567 118.225 cv
244.853 119.102 246.293 119.808 248.495 120.244 cv
248.836 120.312 249.195 120.373 249.572 120.427 cv
250.927 120.623 252.501 120.729 254.225 120.729 cv
254.38 120.728 li
259.034 120.712 264.028 119.936 267.42 118.561 cv
267.846 118.389 268.246 118.207 268.617 118.016 cv
269.963 117.324 270.927 116.511 271.327 115.595 cv
271.339 115.625 271.344 115.655 271.344 115.681 cv
271.338 115.957 271.542 116.189 271.81 116.224 cv
271.79 116.269 271.768 116.313 271.743 116.356 cv
271.744 116.343 li
271.659 116.518 271.552 116.681 271.436 116.837 cv
270.799 117.957 268.309 118.921 265.915 119.76 cv
265.093 120.045 264.226 120.165 263.365 120.278 cv
263.406 120.272 263.433 120.268 263.432 120.268 cv
263.431 120.268 263.408 120.272 263.352 120.28 cv
263.352 120.28 li
263.122 120.311 li
263.337 120.283 li
263.253 120.295 li
261.405 120.662 259.554 121.022 257.68 121.229 cv
257.2 121.285 256.717 121.295 256.234 121.295 cv
256.078 121.295 255.921 121.294 255.765 121.293 cv
255.609 121.292 255.453 121.291 255.297 121.291 cv
255.189 121.291 255.081 121.291 254.973 121.293 cv
254.941 121.293 254.909 121.292 254.877 121.292 cv
253.967 121.292 253.062 121.428 252.15 121.43 cv
f
247.437 115.194 mo
247.561 115.146 247.686 115.119 247.809 115.112 cv
247.685 115.137 247.561 115.164 247.437 115.194 cv
.870588 .870588 .870588 rgb
f
243.989 118.781 mo
243.89 118.781 243.796 118.753 243.716 118.705 cv
243.553 118.089 243.916 117.338 244.641 117.278 cv
244.791 117.273 li
244.852 117.128 li
245.063 116.772 245.431 116.558 245.773 116.342 cv
246.705 115.755 246.475 115.895 246.971 115.497 cv
247.12 115.356 247.278 115.257 247.437 115.194 cv
247.561 115.164 247.685 115.137 247.809 115.112 cv
247.833 115.11 247.856 115.11 247.879 115.11 cv
248.404 115.11 248.885 115.455 249.097 115.921 cv
249.017 115.989 248.916 116.035 248.803 116.046 cv
248.625 116.063 248.447 116.087 248.271 116.117 cv
247.209 116.294 246.182 116.684 245.272 117.259 cv
245.071 117.386 244.846 117.54 244.695 117.727 cv
244.593 117.855 244.531 117.999 244.522 118.123 cv
244.52 118.147 244.521 118.169 244.523 118.191 cv
244.553 118.485 244.338 118.748 244.044 118.778 cv
243.989 118.781 li
0 0 0 rgb
f
271.81 116.224 mo
271.542 116.189 271.338 115.957 271.344 115.681 cv
271.344 115.655 271.339 115.625 271.327 115.595 cv
271.301 115.525 271.247 115.45 271.175 115.39 cv
271.026 115.264 270.813 115.185 270.624 115.124 cv
270.162 114.975 269.685 114.889 269.201 114.868 cv
269.119 114.864 269.037 114.862 268.954 114.862 cv
268.894 114.862 268.834 114.863 268.773 114.865 cv
268.762 114.866 268.751 114.866 268.74 114.866 cv
268.703 114.866 268.666 114.862 268.631 114.854 cv
268.817 114.637 268.998 114.414 269.174 114.188 cv
269.358 113.995 269.602 113.907 269.845 113.907 cv
270.259 113.907 270.673 114.161 270.802 114.588 cv
271.039 114.624 li
271.431 114.746 271.757 115.044 271.862 115.448 cv
271.932 115.703 271.913 115.981 271.81 116.224 cv
f
261.554 100.966 mo
260.13 100.819 260.553 100.81 259.607 100.68 cv
258.235 100.423 258.566 100.485 256.846 100.464 cv
256.683 100.461 256.521 100.445 256.359 100.425 cv
256.358 100.424 li
255.149 100.257 253.975 99.6703 253.054 98.8401 cv
252.795 97.7773 252.756 96.6581 252.927 95.5734 cv
252.96 95.5646 252.994 95.5571 253.028 95.5509 cv
253.1 95.8637 253.202 96.1694 253.354 96.4657 cv
253.788 97.3164 254.567 97.8599 255.387 97.884 cv
255.434 97.8845 li
255.817 97.8845 256.261 97.7492 256.65 97.5303 cv
256.855 97.5258 257.06 97.5086 257.264 97.49 cv
257.454 97.7307 257.67 97.9228 257.914 98.0689 cv
258.221 98.2526 258.559 98.3451 258.9 98.3451 cv
259.181 98.3451 259.464 98.2823 259.734 98.1558 cv
259.909 98.0736 260.07 97.969 260.213 97.8456 cv
260.609 98.5859 261.341 99.1727 262.219 99.1726 cv
262.288 99.1726 262.359 99.1689 262.43 99.1613 cv
263.03 99.0957 263.52 98.7699 263.961 98.4281 cv
265.586 97.1677 266.95 95.5529 267.923 93.74 cv
268.313 93.8401 268.648 94.1684 268.676 94.581 cv
268.754 95.0634 268.413 95.5065 268.239 95.9377 cv
268.016 96.3823 267.743 96.7975 267.451 97.1999 cv
267.327 97.6385 266.924 97.9616 266.62 98.2932 cv
266.583 98.3295 li
266.504 98.4297 266.426 98.53 266.349 98.6307 cv
266.264 98.7145 266.173 98.7743 266.08 98.8217 cv
265.393 99.4638 264.635 100.036 263.773 100.415 cv
263.075 100.743 262.329 100.958 261.554 100.966 cv
262.219 98.1013 mo
261.981 98.1013 261.755 98.0015 261.563 97.843 cv
261.574 97.8429 261.585 97.8427 261.596 97.8425 cv
261.89 97.8049 262.035 97.8017 262.146 97.8017 cv
262.157 97.8017 262.168 97.8017 262.178 97.8017 cv
262.188 97.8018 262.198 97.8018 262.208 97.8018 cv
262.39 97.8018 262.533 97.7924 263.285 97.5966 cv
262.974 97.8366 262.642 98.0602 262.314 98.0959 cv
262.282 98.0995 262.251 98.1013 262.219 98.1013 cv
254.885 96.6359 mo
254.66 96.4917 254.458 96.2669 254.313 95.9882 cv
254.515 96.1863 254.687 96.4273 254.885 96.6359 cv
.870588 .870588 .870588 rgb
f
262.219 99.1726 mo
261.341 99.1727 260.609 98.5859 260.213 97.8456 cv
260.255 97.8098 260.295 97.7723 260.334 97.7334 cv
260.679 97.7959 261.023 97.8436 261.474 97.8436 cv
261.503 97.8436 261.533 97.8434 261.563 97.843 cv
261.755 98.0015 261.981 98.1013 262.219 98.1013 cv
262.251 98.1013 262.282 98.0995 262.314 98.0959 cv
262.642 98.0602 262.974 97.8366 263.285 97.5966 cv
263.327 97.5855 263.372 97.5738 263.419 97.5615 cv
263.597 97.4755 263.9 97.3258 264.022 97.2323 cv
264.936 96.625 264.658 96.7892 265.251 96.3307 cv
265.315 96.2801 li
265.315 96.2801 li
265.653 96.0593 265.613 95.9715 265.839 95.8892 cv
266.005 95.6417 266.165 95.3916 266.316 95.1347 cv
266.643 94.6415 266.782 93.9241 267.422 93.7458 cv
267.506 93.7205 267.592 93.7085 267.679 93.7085 cv
267.761 93.7085 267.843 93.7194 267.923 93.74 cv
266.95 95.5529 265.586 97.1677 263.961 98.4281 cv
263.52 98.7699 263.03 99.0957 262.43 99.1613 cv
262.359 99.1689 262.288 99.1726 262.219 99.1726 cv
0 0 0 rgb
f
258.9 98.3451 mo
258.559 98.3451 258.221 98.2526 257.914 98.0689 cv
257.67 97.9228 257.454 97.7307 257.264 97.49 cv
257.466 97.4716 257.668 97.4519 257.869 97.4416 cv
259.098 97.4609 259.716 97.6211 260.334 97.7334 cv
260.295 97.7723 260.255 97.8098 260.213 97.8456 cv
260.07 97.969 259.909 98.0736 259.734 98.1558 cv
259.464 98.2823 259.181 98.3451 258.9 98.3451 cv
f
255.434 97.8845 mo
255.387 97.884 li
254.567 97.8599 253.788 97.3164 253.354 96.4657 cv
253.202 96.1694 253.1 95.8637 253.028 95.5509 cv
253.1 95.5378 253.175 95.5308 253.252 95.5308 cv
253.437 95.5308 253.632 95.5718 253.829 95.663 cv
254.018 95.7339 254.173 95.8507 254.313 95.9882 cv
254.458 96.2669 254.66 96.4917 254.885 96.6359 cv
254.953 96.7071 255.024 96.7746 255.1 96.8353 cv
255.126 96.8545 li
256.134 97.4448 255.979 97.3749 256.522 97.5315 cv
256.53 97.5315 256.539 97.5315 256.547 97.5315 cv
256.581 97.5315 256.616 97.5311 256.65 97.5303 cv
256.261 97.7492 255.817 97.8845 255.434 97.8845 cv
f
253.054 98.8401 mo
252.763 98.5779 252.497 98.2915 252.264 97.9862 cv
251.41 97.1518 251.976 95.8266 252.927 95.5734 cv
252.756 96.6581 252.795 97.7773 253.054 98.8401 cv
f
265.308 96.2853 mo
265.438 96.1838 265.491 96.1427 265.491 96.1427 cv
265.491 96.1427 265.419 96.1987 265.315 96.2801 cv
265.315 96.2801 li
265.308 96.2853 li
f
256.228 100.407 mo
256.019 100.378 li
256.228 100.407 li
.870588 .870588 .870588 rgb
f
256.368 100.428 mo
256.358 100.428 256.298 100.418 256.228 100.407 cv
256.359 100.425 li
256.369 100.427 256.371 100.428 256.368 100.428 cv
f
247.074 89.2996 mo
247.218 88.6839 247.353 88.0668 247.479 87.4476 cv
248.98 85.6714 251.536 83.3411 252.143 82.6662 cv
252.677 82.0895 252.837 81.1174 253.465 80.6817 cv
253.637 80.5788 253.828 80.5312 254.018 80.5312 cv
254.112 80.5312 254.207 80.5429 254.298 80.5655 cv
254.414 81.0805 254.548 81.589 254.703 82.089 cv
254.14 82.5244 253.673 83.1456 253.36 83.8947 cv
253.245 84.1698 253.154 84.4523 253.08 84.737 cv
251.752 85.0623 250.671 85.9283 249.593 86.8649 cv
248.721 87.6218 247.84 88.4167 247.074 89.2996 cv
f
253.08 84.737 mo
253.154 84.4523 253.245 84.1698 253.36 83.8947 cv
253.673 83.1456 254.14 82.5244 254.703 82.089 cv
254.712 82.1171 254.72 82.145 254.729 82.173 cv
254.763 82.2817 254.829 82.3718 254.913 82.4365 cv
254.909 82.4424 254.906 82.4482 254.903 82.454 cv
254.516 83.2745 254.015 84.0404 253.365 84.6766 cv
253.352 84.6788 253.34 84.681 253.328 84.6833 cv
253.244 84.6991 253.162 84.7171 253.08 84.737 cv
0 0 0 rgb
f
246.99 89.3973 mo
246.737 89.1092 246.629 88.7017 246.828 88.2811 cv
247.006 88.0257 247.228 87.7443 247.479 87.4476 cv
247.353 88.0668 247.218 88.6839 247.074 89.2996 cv
247.046 89.332 247.018 89.3647 246.99 89.3973 cv
254.913 82.4365 mo
254.829 82.3718 254.763 82.2817 254.729 82.173 cv
254.72 82.145 254.712 82.1171 254.703 82.089 cv
254.548 81.589 254.414 81.0805 254.298 80.5655 cv
254.684 80.6607 255.022 80.9482 255.125 81.3568 cv
255.244 81.7351 255.091 82.1055 254.913 82.4365 cv
f
248.066 89.7904 mo
248.698 89.0925 249.417 88.4393 250.161 87.7905 cv
249.636 88.3464 249.121 88.9124 248.616 89.4858 cv
248.452 89.6565 248.262 89.7534 248.066 89.7904 cv
.870588 .870588 .870588 rgb
f
247.876 89.8081 mo
247.541 89.8081 247.21 89.6478 246.99 89.3973 cv
247.018 89.3647 247.046 89.332 247.074 89.2996 cv
247.84 88.4167 248.721 87.6218 249.593 86.8649 cv
250.671 85.9283 251.752 85.0623 253.08 84.737 cv
253.162 84.7171 253.244 84.6991 253.328 84.6833 cv
253.34 84.681 253.352 84.6788 253.365 84.6766 cv
253.347 84.6942 253.329 84.7118 253.31 84.7293 cv
252.213 85.699 251.167 86.7261 250.161 87.7905 cv
249.417 88.4393 248.698 89.0925 248.066 89.7904 cv
248.003 89.8023 247.94 89.8081 247.876 89.8081 cv
0 0 0 rgb
f
167.825 250.77 mo
167.483 250.77 167.114 250.658 166.919 250.424 cv
166.805 250.17 166.714 249.889 166.642 249.584 cv
166.721 248.846 166.806 248.108 166.903 247.371 cv
167.23 247.385 167.588 247.397 167.969 247.41 cv
168.129 247.416 168.293 247.421 168.462 247.427 cv
168.462 247.433 168.463 247.439 168.463 247.445 cv
168.472 247.518 li
168.497 247.635 li
168.528 247.567 168.565 247.5 168.609 247.432 cv
169.592 247.468 170.724 247.517 171.915 247.612 cv
171.43 248.2 170.913 248.767 170.374 249.303 cv
169.706 249.967 168.9 250.66 167.987 250.761 cv
167.934 250.767 167.88 250.77 167.825 250.77 cv
.870588 .870588 .870588 rgb
f
166.642 249.584 mo
166.487 248.932 166.424 248.174 166.436 247.349 cv
166.583 247.357 166.739 247.364 166.903 247.371 cv
166.806 248.108 166.721 248.846 166.642 249.584 cv
168.439 246.354 mo
168.291 246.349 168.146 246.344 168.006 246.339 cv
167.436 246.32 166.919 246.302 166.491 246.278 cv
166.694 243.861 167.43 241.061 168.38 238.716 cv
168.501 238.416 li
169.483 235.986 170.549 233.344 172.566 231.455 cv
173.905 231.615 175.259 231.757 176.607 231.889 cv
176.312 231.981 176.001 232.043 175.721 232.16 cv
174.794 232.544 175.219 232.309 174.329 233.049 cv
172.821 234.656 172.433 235.172 171.277 237.227 cv
170.201 239.2 169.451 240.907 168.888 243.743 cv
168.642 245.104 168.468 245.509 168.439 246.354 cv
178.612 231.003 mo
178.58 231 178.547 230.997 178.515 230.994 cv
178.53 230.549 178.456 230.103 178.302 229.687 cv
178.399 229.766 178.484 229.862 178.552 229.979 cv
178.753 230.3 178.751 230.68 178.612 231.003 cv
177.445 230.893 mo
176.216 230.776 174.979 230.652 173.751 230.514 cv
174.555 229.978 175.484 229.548 176.572 229.26 cv
176.645 229.266 176.717 229.272 176.789 229.278 cv
176.859 229.334 176.933 229.41 177.002 229.505 cv
177.294 229.906 177.449 230.399 177.445 230.893 cv
173.178 229.609 mo
173.301 229.488 173.443 229.404 173.597 229.345 cv
173.454 229.43 173.314 229.518 173.178 229.609 cv
f
171.915 247.612 mo
170.724 247.517 169.592 247.468 168.609 247.432 cv
168.65 247.369 168.699 247.305 168.754 247.243 cv
169.151 246.806 169.76 246.881 170.294 246.85 cv
170.405 246.832 170.517 246.823 170.629 246.823 cv
171.117 246.823 171.587 247.003 171.849 247.45 cv
171.877 247.501 171.901 247.553 171.922 247.604 cv
171.92 247.606 171.917 247.609 171.915 247.612 cv
168.462 247.427 mo
168.293 247.421 168.129 247.416 167.969 247.41 cv
167.588 247.397 167.23 247.385 166.903 247.371 cv
166.739 247.364 166.583 247.357 166.436 247.349 cv
166.441 247.003 166.46 246.645 166.491 246.278 cv
166.919 246.302 167.436 246.32 168.006 246.339 cv
168.146 246.344 168.291 246.349 168.439 246.354 cv
168.429 246.642 168.435 246.982 168.462 247.427 cv
0 0 0 rgb
f
176.607 231.889 mo
175.259 231.757 173.905 231.615 172.566 231.455 cv
172.928 231.115 173.322 230.799 173.751 230.514 cv
174.979 230.652 176.216 230.776 177.445 230.893 cv
177.444 230.997 177.437 231.102 177.422 231.206 cv
177.392 231.41 177.482 231.604 177.639 231.718 cv
177.622 231.718 177.605 231.719 177.588 231.719 cv
177.581 231.719 177.574 231.719 177.567 231.719 cv
177.511 231.731 li
177.307 231.748 177.103 231.764 176.899 231.78 cv
176.805 231.822 176.707 231.857 176.607 231.889 cv
178.5 231.208 mo
178.507 231.137 178.512 231.065 178.515 230.994 cv
178.547 230.997 178.58 231 178.612 231.003 cv
178.581 231.075 178.544 231.144 178.5 231.208 cv
f
166.919 250.424 mo
166.879 250.376 166.846 250.323 166.822 250.265 cv
166.739 250.056 166.538 249.929 166.326 249.929 cv
166.311 249.929 166.295 249.93 166.28 249.931 cv
165.645 248.273 165.803 246.051 166.284 243.569 cv
166.664 241.724 166.616 241.487 167.235 239.555 cv
168.255 236.866 169.648 234.273 171.592 232.137 cv
171.966 231.73 172.37 231.35 172.8 231.001 cv
172.665 230.538 172.748 230.014 173.141 229.646 cv
173.153 229.633 173.165 229.621 173.178 229.609 cv
173.314 229.518 173.454 229.43 173.597 229.345 cv
173.844 229.251 174.119 229.222 174.387 229.217 cv
174.636 229.191 174.886 229.181 175.136 229.181 cv
175.615 229.181 176.094 229.219 176.572 229.26 cv
175.484 229.548 174.555 229.978 173.751 230.514 cv
173.322 230.799 172.928 231.115 172.566 231.455 cv
170.549 233.344 169.483 235.986 168.501 238.416 cv
168.38 238.716 li
167.43 241.061 166.694 243.861 166.491 246.278 cv
166.46 246.645 166.441 247.003 166.436 247.349 cv
166.424 248.174 166.487 248.932 166.642 249.584 cv
166.714 249.889 166.805 250.17 166.919 250.424 cv
f
177.639 231.718 mo
177.482 231.604 177.392 231.41 177.422 231.206 cv
177.437 231.102 177.444 230.997 177.445 230.893 cv
177.449 230.399 177.294 229.906 177.002 229.505 cv
176.933 229.41 176.859 229.334 176.789 229.278 cv
176.894 229.288 176.999 229.297 177.103 229.305 cv
177.521 229.344 177.978 229.421 178.302 229.687 cv
178.456 230.103 178.53 230.549 178.515 230.994 cv
178.512 231.065 178.507 231.137 178.5 231.208 cv
178.309 231.494 178.001 231.7 177.639 231.718 cv
f
167.975 251.1 mo
167.363 251.1 166.787 250.826 166.351 250.105 cv
166.326 250.048 166.303 249.99 166.28 249.931 cv
166.295 249.93 166.311 249.929 166.326 249.929 cv
166.538 249.929 166.739 250.056 166.822 250.265 cv
166.846 250.323 166.879 250.376 166.919 250.424 cv
167.114 250.658 167.483 250.77 167.825 250.77 cv
167.88 250.77 167.934 250.767 167.987 250.761 cv
168.9 250.66 169.706 249.967 170.374 249.303 cv
170.913 248.767 171.43 248.2 171.915 247.612 cv
171.917 247.609 171.92 247.606 171.922 247.604 cv
172.237 248.381 171.74 249.034 171.093 249.493 cv
170.906 249.639 170.718 249.784 170.526 249.924 cv
169.8 250.54 168.85 251.1 167.975 251.1 cv
f
119.39 224.948 mo
119.293 224.668 119.261 224.351 119.318 224.004 cv
119.326 223.496 119.676 223.092 119.918 222.669 cv
120.301 222.03 120.647 221.37 120.999 220.713 cv
122.188 218.548 124.46 214.044 124.802 213.079 cv
125.736 210.872 127.377 207.243 128.468 203.121 cv
128.904 201.662 129.249 200.178 129.667 198.713 cv
129.892 198.003 129.984 196.909 130.948 196.909 cv
130.949 196.909 130.949 196.909 130.949 196.909 cv
131.164 196.911 131.378 196.986 131.551 197.112 cv
130.719 200.613 129.789 204.367 128.874 208.063 cv
127.411 213.97 126.023 219.575 125.078 223.943 cv
124.885 224.181 124.675 224.408 124.446 224.619 cv
122.689 224.644 121.064 224.75 119.39 224.948 cv
.870588 .870588 .870588 rgb
f
125.078 223.943 mo
126.023 219.575 127.411 213.97 128.874 208.063 cv
129.789 204.367 130.719 200.613 131.551 197.112 cv
131.766 197.269 131.919 197.506 131.936 197.78 cv
131.95 198.486 131.687 199.194 131.587 199.896 cv
131.159 202.127 130.801 204.378 130.131 206.554 cv
129.162 209.537 128.195 212.523 127.171 215.489 cv
127.332 215.577 127.473 215.703 127.567 215.873 cv
127.774 216.2 127.719 216.59 127.624 216.945 cv
127.499 217.542 127.387 218.142 127.239 218.734 cv
126.803 220.551 126.263 222.477 125.078 223.943 cv
0 0 0 rgb
f
119.598 225.362 mo
119.512 225.235 119.442 225.097 119.39 224.948 cv
121.064 224.75 122.689 224.644 124.446 224.619 cv
124.373 224.687 124.297 224.753 124.22 224.817 cv
123.971 225.018 li
122.517 225.032 121.027 225.063 119.598 225.362 cv
f
187.038 258.286 mo
186.845 258.236 186.659 258.142 186.495 257.996 cv
186.173 257.81 186.052 257.45 185.896 257.134 cv
185.41 256.303 185.748 256.752 184.902 255.833 cv
182.573 253.675 180.538 252.556 177.169 251.627 cv
175.561 251.155 175.92 251.337 174.901 251.115 cv
174.785 251.109 li
173.688 252.242 172.692 253.589 171.138 254.113 cv
169.796 254.654 168.37 254.829 166.935 254.829 cv
165.877 254.829 164.814 254.734 163.774 254.621 cv
161.956 254.406 160.124 254.384 158.296 254.305 cv
154.512 254.113 150.745 253.685 146.964 253.451 cv
144.221 253.36 141.475 253.44 138.733 253.297 cv
137.715 253.243 136.697 253.236 135.678 253.236 cv
135.473 253.236 135.269 253.236 135.064 253.236 cv
134.857 253.237 134.65 253.237 134.443 253.237 cv
133.928 253.237 133.412 253.235 132.897 253.226 cv
130.883 253.147 128.869 253.054 126.854 253.054 cv
125.624 253.054 124.394 253.088 123.165 253.183 cv
120.146 253.35 117.119 253.31 114.102 253.531 cv
112.899 253.615 111.54 253.654 110.205 253.654 cv
107.957 253.654 105.777 253.544 104.526 253.357 cv
101.941 253.156 99.4319 252.531 96.9946 251.66 cv
96.3997 251.518 96.1087 250.937 96.1657 250.398 cv
97.5343 250.876 99.0162 250.981 100.405 250.981 cv
100.978 250.981 101.536 250.963 102.063 250.946 cv
109.612 250.704 117.394 250.582 125.737 250.582 cv
136.838 250.582 148.929 250.798 162.791 251.235 cv
162.937 251.249 163.083 251.263 163.229 251.279 cv
164.406 251.381 165.589 251.545 166.773 251.618 cv
167.106 251.771 167.478 251.841 167.828 251.841 cv
167.922 251.841 168.015 251.836 168.104 251.826 cv
168.46 251.787 168.794 251.691 169.11 251.555 cv
169.356 251.496 169.599 251.424 169.838 251.338 cv
170.012 251.255 170.183 251.165 170.346 251.062 cv
170.373 251.04 li
170.727 250.984 172.046 249.338 173.224 248.421 cv
173.648 248.122 174.149 247.977 174.66 247.916 cv
175.625 248.059 176.585 248.246 177.497 248.491 cv
180.368 249.265 182.563 250.476 184.023 252.09 cv
185.518 253.744 186.268 255.984 186.993 258.152 cv
187.038 258.286 li
188.121 258.145 mo
188.121 258.144 188.121 258.144 188.12 258.144 cv
188.009 257.811 li
187.386 255.951 186.746 254.038 185.631 252.407 cv
187.277 253.676 188.729 255.22 188.968 256.786 cv
188.989 257.388 188.616 257.888 188.121 258.145 cv
.870588 .870588 .870588 rgb
f
98.9806 249.863 mo
98.2443 249.809 97.5162 249.697 96.8244 249.488 cv
96.9866 249.421 97.1503 249.394 97.3151 249.394 cv
97.8671 249.394 98.4298 249.703 98.9806 249.863 cv
f
187.384 258.329 mo
187.268 258.329 187.152 258.315 187.038 258.286 cv
186.993 258.152 li
186.268 255.984 185.518 253.744 184.023 252.09 cv
182.563 250.476 180.368 249.265 177.497 248.491 cv
176.585 248.246 175.625 248.059 174.66 247.916 cv
174.833 247.896 175.008 247.885 175.18 247.881 cv
175.228 247.875 175.287 247.872 175.353 247.872 cv
175.56 247.872 175.831 247.897 175.99 247.915 cv
175.936 247.908 175.868 247.899 175.775 247.886 cv
178.424 248.118 180.338 249.448 181.898 250.055 cv
182.937 250.591 184.343 251.415 185.631 252.407 cv
186.746 254.038 187.386 255.951 188.009 257.811 cv
188.12 258.144 li
188.121 258.144 188.121 258.144 188.121 258.145 cv
187.892 258.263 187.638 258.329 187.384 258.329 cv
0 0 0 rgb
f
162.791 251.235 mo
148.929 250.798 136.838 250.582 125.737 250.582 cv
117.394 250.582 109.612 250.704 102.063 250.946 cv
101.536 250.963 100.978 250.981 100.405 250.981 cv
99.0162 250.981 97.5343 250.876 96.1657 250.398 cv
96.2023 250.052 96.3823 249.723 96.7175 249.538 cv
96.753 249.52 96.7887 249.503 96.8244 249.488 cv
97.5162 249.697 98.2443 249.809 98.9806 249.863 cv
99.0712 249.89 99.1616 249.912 99.2515 249.929 cv
100.839 250.434 103.657 250.6 106.507 250.6 cv
109.203 250.6 111.927 250.452 113.663 250.304 cv
118.734 249.994 123.979 249.752 129.07 249.752 cv
129.331 249.752 129.593 249.752 129.854 249.754 cv
130.301 249.761 130.749 249.764 131.197 249.764 cv
131.887 249.764 132.576 249.757 133.265 249.751 cv
133.953 249.744 134.639 249.737 135.326 249.737 cv
136.606 249.737 137.886 249.761 139.166 249.852 cv
143.079 250.046 147.002 249.91 150.901 250.364 cv
153.076 250.551 155.247 250.789 157.426 250.933 cv
159.213 251.056 161.007 251.069 162.791 251.235 cv
f
167.828 251.841 mo
167.478 251.841 167.106 251.771 166.773 251.618 cv
167.148 251.642 167.524 251.656 167.9 251.656 cv
168.183 251.656 168.467 251.648 168.75 251.63 cv
168.87 251.608 168.99 251.583 169.11 251.555 cv
168.794 251.691 168.46 251.787 168.104 251.826 cv
168.015 251.836 167.922 251.841 167.828 251.841 cv
f
321.724 301.431 mo
321.741 301.394 321.757 301.358 321.773 301.322 cv
322.153 300.3 322.219 300.135 322.382 299.654 cv
323.312 297.118 324.194 292.123 324.516 288.478 cv
324.498 284.673 324.56 280.87 324.551 277.066 cv
324.388 272.138 324.166 267.214 323.998 262.286 cv
323.834 254.203 324.256 246.123 324.507 238.049 cv
324.608 235.751 324.62 233.448 324.697 231.149 cv
324.823 228.907 324.994 226.669 325.052 224.421 cv
325.159 220.52 325.595 216.641 326.225 212.823 cv
326.457 211.571 326.642 210.291 326.889 209.037 cv
327.46 207.85 327.91 206.655 328.232 205.466 cv
328.241 205.461 328.25 205.457 328.259 205.452 cv
328.791 212.842 328.476 220.337 328.169 227.633 cv
328.054 230.35 327.936 233.16 327.863 235.923 cv
327.464 251.045 328.394 266.386 329.293 281.222 cv
329.665 281.2 li
329.665 281.201 329.665 281.202 329.666 281.204 cv
329.294 281.235 li
329.528 285.112 329.771 289.118 329.73 293.671 cv
327.332 296.589 324.629 299.157 321.724 301.431 cv
.870588 .870588 .870588 rgb
f
321.468 302.315 mo
321.479 302.014 321.603 301.704 321.724 301.431 cv
324.629 299.157 327.332 296.589 329.73 293.671 cv
329.771 289.118 329.528 285.112 329.294 281.235 cv
329.666 281.204 li
329.962 283.426 330.215 286.442 330.286 287.286 cv
330.412 289.181 330.568 289.443 330.636 291.717 cv
330.628 291.923 330.639 292.128 330.656 292.333 cv
330.666 292.404 330.684 292.514 330.706 292.645 cv
330.728 292.751 330.744 292.856 330.755 292.963 cv
330.328 293.414 329.906 293.869 329.475 294.315 cv
328.525 295.298 327.568 296.275 326.605 297.249 cv
325.64 298.225 324.68 299.208 323.707 300.181 cv
322.941 300.876 322.197 301.589 321.468 302.315 cv
329.293 281.222 mo
328.394 266.386 327.464 251.045 327.863 235.923 cv
327.936 233.16 328.054 230.35 328.169 227.633 cv
328.476 220.337 328.791 212.842 328.259 205.452 cv
328.416 205.374 328.585 205.335 328.754 205.335 cv
328.88 205.335 329.005 205.356 329.126 205.397 cv
329.234 207.17 329.244 208.945 329.191 210.72 cv
329.128 212.828 328.919 214.931 328.849 217.038 cv
328.737 220.372 328.732 223.709 328.728 227.045 cv
328.688 227.878 328.645 228.71 328.606 229.543 cv
328.464 232.931 328.623 236.316 328.708 239.703 cv
328.723 240.104 328.738 240.489 328.754 240.867 cv
328.751 241.545 328.751 242.223 328.74 242.901 cv
328.674 247.203 328.701 251.514 328.788 255.816 cv
328.827 257.795 328.881 259.781 328.99 261.764 cv
328.913 264.656 328.984 267.549 329.206 270.435 cv
329.192 270.981 329.181 271.527 329.178 272.074 cv
329.163 274.678 329.275 277.273 329.43 279.866 cv
329.511 280.045 329.561 280.247 329.56 280.457 cv
329.595 280.69 329.63 280.94 329.665 281.2 cv
329.293 281.222 li
326.889 209.037 mo
327.083 208.048 327.316 207.075 327.641 206.143 cv
327.784 205.816 327.993 205.594 328.232 205.466 cv
327.91 206.655 327.46 207.85 326.889 209.037 cv
0 0 0 rgb
f
556.232 109.942 mo
556.803 160.402 556.232 211.617 556.232 263.086 cv
405.342 263.086 403.199 263.487 357.99 262.874 cv
357.183 211.724 356.92 153.36 358.241 110.453 cv
405.731 110.453 493.513 109.21 556.232 109.942 cv
1 1 1 rgb
f
358.517 262.345 mo
386.679 262.725 398.209 262.707 440.405 262.642 cv
465.734 262.603 500.396 262.55 555.696 262.55 cv
555.697 245.519 555.761 228.267 555.823 211.578 cv
555.947 178.301 556.075 143.897 555.702 110.472 cv
514.897 110.004 464.325 110.359 419.685 110.673 cv
396.825 110.834 375.22 110.986 358.761 110.989 cv
357.261 160.303 357.959 226.718 358.517 262.345 cv
408.044 263.75 mo
389.064 263.75 377.55 263.675 357.982 263.41 cv
357.692 263.406 357.458 263.173 357.454 262.883 cv
356.892 227.251 356.177 160.064 357.706 110.437 cv
357.715 110.147 357.952 109.917 358.241 109.917 cv
374.761 109.917 396.578 109.764 419.677 109.602 cv
464.514 109.286 515.333 108.929 556.238 109.407 cv
556.529 109.41 556.764 109.645 556.768 109.936 cv
557.147 143.534 557.019 178.127 556.895 211.582 cv
556.833 228.446 556.768 245.883 556.768 263.085 cv
556.768 263.381 556.528 263.621 556.232 263.621 cv
500.619 263.621 465.818 263.675 440.407 263.714 cv
427.047 263.734 416.757 263.75 408.044 263.75 cv
0 0 0 rgb
f
556.388 128.167 mo
556.374 128.167 li
509.828 126.981 418.877 126.982 364.544 126.987 cv
357.99 126.987 li
357.694 126.987 357.454 126.747 357.454 126.451 cv
357.454 126.156 357.694 125.916 357.99 125.916 cv
364.544 125.916 li
418.888 125.904 509.841 125.91 556.401 127.096 cv
556.697 127.103 556.931 127.349 556.923 127.645 cv
556.916 127.936 556.678 128.167 556.388 128.167 cv
cp
f
545.333 114.843 mo
543.211 114.843 541.485 116.569 541.485 118.691 cv
541.485 120.814 543.211 122.54 545.333 122.54 cv
547.456 122.54 549.182 120.814 549.182 118.691 cv
549.182 116.569 547.456 114.843 545.333 114.843 cv
cp
545.333 123.612 mo
542.62 123.612 540.413 121.405 540.413 118.691 cv
540.413 115.979 542.62 113.771 545.333 113.771 cv
548.047 113.771 550.254 115.979 550.254 118.691 cv
550.254 121.405 548.047 123.612 545.333 123.612 cv
cp
f
526.219 114.843 mo
524.097 114.843 522.37 116.569 522.37 118.691 cv
522.37 120.814 524.097 122.54 526.219 122.54 cv
528.341 122.54 530.067 120.814 530.067 118.691 cv
530.067 116.569 528.341 114.843 526.219 114.843 cv
cp
526.219 123.612 mo
523.506 123.612 521.299 121.405 521.299 118.691 cv
521.299 115.979 523.506 113.771 526.219 113.771 cv
528.932 113.771 531.139 115.979 531.139 118.691 cv
531.139 121.405 528.932 123.612 526.219 123.612 cv
cp
f
506.059 114.843 mo
503.936 114.843 502.21 116.569 502.21 118.691 cv
502.21 120.814 503.936 122.54 506.059 122.54 cv
508.181 122.54 509.907 120.814 509.907 118.691 cv
509.907 116.569 508.181 114.843 506.059 114.843 cv
cp
506.059 123.612 mo
503.345 123.612 501.138 121.405 501.138 118.691 cv
501.138 115.979 503.345 113.771 506.059 113.771 cv
508.772 113.771 510.979 115.979 510.979 118.691 cv
510.979 121.405 508.772 123.612 506.059 123.612 cv
cp
f
379.249 187.649 mo
379.158 187.649 379.066 187.626 378.982 187.578 cv
378.725 187.43 378.637 187.103 378.785 186.846 cv
385.988 174.335 392.739 162.064 399.423 149.331 cv
399.514 149.158 399.691 149.049 399.886 149.044 cv
400.095 149.034 400.263 149.142 400.361 149.311 cv
400.435 149.438 li
404.426 156.293 408.549 163.374 412.702 170.6 cv
420.288 161.784 427.845 153.14 435.836 144 cv
437.883 141.66 li
438.003 141.522 438.186 141.454 438.367 141.483 cv
438.548 141.51 438.703 141.629 438.776 141.797 cv
442.388 150.014 446.119 158.504 450.115 167.33 cv
464.122 154.399 li
464.407 154.136 464.798 153.775 465.341 153.692 cv
466.525 153.514 467.285 154.749 467.535 155.155 cv
470.466 159.916 473.232 164.77 475.908 169.463 cv
477.458 172.182 478.931 174.765 480.401 177.273 cv
485.777 167.463 491.484 157.68 497.373 148.182 cv
497.529 147.931 497.859 147.853 498.11 148.009 cv
498.362 148.165 498.439 148.495 498.283 148.747 cv
492.239 158.496 486.386 168.545 480.888 178.616 cv
480.795 178.785 480.619 178.892 480.426 178.895 cv
480.221 178.885 480.054 178.797 479.956 178.631 cv
478.322 175.861 476.697 173.011 474.977 169.994 cv
472.306 165.308 469.543 160.463 466.623 155.717 cv
466.198 155.028 465.827 154.704 465.502 154.751 cv
465.3 154.782 465.087 154.967 464.849 155.187 cv
450.296 168.621 li
450.17 168.737 449.995 168.787 449.827 168.752 cv
449.658 168.718 449.516 168.605 449.445 168.449 cv
445.456 159.65 441.734 151.189 438.134 142.999 cv
436.643 144.706 li
428.48 154.042 420.771 162.861 413.021 171.872 cv
412.907 172.004 412.738 172.073 412.564 172.056 cv
412.391 172.04 412.237 171.94 412.15 171.79 cv
408.014 164.589 403.904 157.527 399.922 150.686 cv
393.378 163.125 386.762 175.139 379.713 187.381 cv
379.614 187.553 379.434 187.649 379.249 187.649 cv
cp
f
453.584 157.164 mo
453.395 157.164 453.211 157.064 453.114 156.886 cv
452.498 155.768 li
452.151 156.141 451.804 156.514 451.457 156.888 cv
451.256 157.105 450.917 157.117 450.7 156.917 cv
450.483 156.715 450.471 156.376 450.672 156.159 cv
451.188 155.604 451.703 155.05 452.218 154.497 cv
452.336 154.371 452.506 154.309 452.676 154.33 cv
452.847 154.351 452.997 154.453 453.08 154.603 cv
454.052 156.369 li
454.195 156.628 454.101 156.954 453.842 157.097 cv
453.584 157.164 li
cp
445.251 163.363 mo
445.122 163.363 444.992 163.316 444.889 163.222 cv
444.671 163.021 444.656 162.683 444.856 162.465 cv
445.824 161.409 446.792 160.357 447.76 159.308 cv
447.961 159.09 448.3 159.077 448.517 159.277 cv
448.734 159.478 448.748 159.817 448.547 160.034 cv
447.58 161.082 446.613 162.134 445.646 163.189 cv
445.54 163.304 445.396 163.363 445.251 163.363 cv
cp
457.72 164.672 mo
457.531 164.672 457.348 164.572 457.251 164.395 cv
455.183 160.641 li
455.04 160.381 455.134 160.055 455.393 159.913 cv
455.652 159.77 455.979 159.864 456.121 160.124 cv
458.189 163.878 li
458.332 164.137 458.237 164.463 457.978 164.605 cv
457.72 164.672 li
cp
439.465 169.691 mo
439.336 169.691 439.207 169.644 439.104 169.551 cv
438.885 169.351 438.87 169.012 439.069 168.794 cv
440.034 167.736 440.998 166.68 441.961 165.627 cv
442.16 165.409 442.5 165.394 442.718 165.594 cv
442.936 165.793 442.951 166.132 442.751 166.351 cv
441.789 167.403 440.825 168.459 439.861 169.516 cv
439.755 169.632 439.61 169.691 439.465 169.691 cv
cp
461.857 172.18 mo
461.668 172.18 461.485 172.08 461.387 171.903 cv
459.319 168.149 li
459.176 167.89 459.271 167.564 459.53 167.421 cv
459.788 167.278 460.115 167.372 460.257 167.632 cv
462.325 171.386 li
462.468 171.645 462.374 171.971 462.115 172.114 cv
461.857 172.18 li
cp
387.813 173.25 mo
387.637 173.25 387.464 173.164 387.362 173.004 cv
385.047 169.397 li
384.888 169.148 384.96 168.816 385.209 168.656 cv
385.457 168.498 385.789 168.568 385.949 168.818 cv
388.264 172.426 li
388.424 172.675 388.351 173.006 388.102 173.166 cv
388.013 173.223 387.912 173.25 387.813 173.25 cv
cp
433.687 176.025 mo
433.558 176.025 433.429 175.979 433.326 175.886 cv
433.108 175.686 433.092 175.347 433.292 175.129 cv
436.18 171.962 li
436.38 171.743 436.72 171.728 436.937 171.927 cv
437.156 172.126 437.172 172.465 436.972 172.684 cv
434.083 175.851 li
433.978 175.967 433.833 176.025 433.687 176.025 cv
cp
465.993 179.688 mo
465.804 179.688 465.621 179.588 465.523 179.411 cv
463.455 175.657 li
463.312 175.398 463.407 175.072 463.666 174.929 cv
463.924 174.786 464.251 174.88 464.393 175.14 cv
466.461 178.894 li
466.604 179.153 466.51 179.479 466.251 179.622 cv
465.993 179.688 li
cp
392.435 180.469 mo
392.258 180.469 392.085 180.382 391.983 180.222 cv
391.213 179.015 390.443 177.812 389.674 176.611 cv
389.515 176.363 389.587 176.031 389.837 175.871 cv
390.085 175.712 390.417 175.785 390.577 176.034 cv
391.346 177.234 392.115 178.438 392.886 179.645 cv
393.045 179.895 392.972 180.226 392.722 180.385 cv
392.633 180.442 392.533 180.469 392.435 180.469 cv
cp
427.901 182.352 mo
427.771 182.352 427.641 182.305 427.538 182.21 cv
427.32 182.01 427.306 181.671 427.506 181.453 cv
428.473 180.4 429.438 179.346 430.402 178.294 cv
430.602 178.076 430.941 178.061 431.159 178.26 cv
431.377 178.46 431.392 178.799 431.192 179.017 cv
430.228 180.071 429.263 181.124 428.295 182.178 cv
428.19 182.293 428.046 182.352 427.901 182.352 cv
cp
407.153 185.466 mo
406.91 185.407 li
406.646 185.273 406.542 184.95 406.676 184.687 cv
407.06 183.935 407.449 183.187 407.844 182.442 cv
407.934 182.272 408.108 182.164 408.299 182.157 cv
408.504 182.148 408.671 182.247 408.772 182.41 cv
409.081 182.906 409.394 183.4 409.711 183.894 cv
409.871 184.143 409.798 184.474 409.549 184.634 cv
409.301 184.794 408.969 184.722 408.809 184.472 cv
408.658 184.237 408.508 184.001 408.358 183.765 cv
408.113 184.234 407.871 184.703 407.631 185.174 cv
407.536 185.359 407.348 185.466 407.153 185.466 cv
cp
470.129 187.197 mo
469.94 187.197 469.757 187.097 469.66 186.919 cv
467.592 183.165 li
467.449 182.906 467.543 182.58 467.802 182.438 cv
468.061 182.295 468.388 182.389 468.53 182.648 cv
470.598 186.402 li
470.741 186.662 470.647 186.987 470.387 187.13 cv
470.129 187.197 li
cp
397.032 187.702 mo
396.855 187.702 396.681 187.614 396.579 187.453 cv
395.813 186.241 395.048 185.036 394.285 183.835 cv
394.126 183.585 394.2 183.254 394.449 183.096 cv
394.7 182.936 395.031 183.011 395.189 183.26 cv
395.953 184.462 396.718 185.668 397.485 186.88 cv
397.643 187.13 397.568 187.461 397.318 187.619 cv
397.229 187.675 397.13 187.702 397.032 187.702 cv
cp
422.086 188.651 mo
421.956 188.651 421.825 188.604 421.722 188.508 cv
421.505 188.307 421.492 187.967 421.694 187.751 cv
422.666 186.704 423.636 185.655 424.604 184.606 cv
424.806 184.389 425.144 184.376 425.362 184.576 cv
425.579 184.777 425.592 185.115 425.392 185.333 cv
424.423 186.383 423.452 187.432 422.479 188.48 cv
422.373 188.594 422.23 188.651 422.086 188.651 cv
cp
413.926 191.908 mo
413.749 191.908 413.575 191.819 413.473 191.658 cv
412.673 190.39 411.885 189.182 411.154 188.066 cv
410.991 187.818 411.06 187.486 411.308 187.324 cv
411.554 187.161 411.888 187.23 412.049 187.478 cv
412.784 188.598 413.575 189.811 414.379 191.087 cv
414.537 191.337 414.462 191.668 414.212 191.825 cv
414.123 191.882 414.024 191.908 413.926 191.908 cv
cp
473.287 192.928 mo
473.098 192.928 472.915 192.828 472.817 192.651 cv
471.728 190.674 li
471.585 190.414 471.68 190.089 471.939 189.946 cv
472.198 189.803 472.524 189.897 472.666 190.157 cv
473.756 192.134 li
473.899 192.393 473.804 192.719 473.545 192.862 cv
473.287 192.928 li
cp
403.46 193.201 mo
403.243 193.154 li
402.972 193.034 402.851 192.717 402.971 192.447 cv
403.55 191.147 404.156 189.834 404.772 188.542 cv
404.9 188.275 405.219 188.162 405.487 188.29 cv
405.753 188.417 405.867 188.737 405.739 189.004 cv
405.127 190.287 404.525 191.592 403.95 192.883 cv
403.862 193.082 403.666 193.201 403.46 193.201 cv
cp
416.227 194.909 mo
416.095 194.909 415.963 194.861 415.859 194.763 cv
415.645 194.56 415.635 194.221 415.838 194.005 cv
416.819 192.967 417.797 191.926 418.773 190.885 cv
418.975 190.668 419.315 190.657 419.53 190.86 cv
419.746 191.062 419.757 191.401 419.555 191.617 cv
418.578 192.66 417.599 193.702 416.617 194.741 cv
416.512 194.853 416.369 194.909 416.227 194.909 cv
cp
401.593 194.959 mo
401.415 194.959 401.24 194.869 401.138 194.706 cv
400.378 193.489 399.62 192.279 398.864 191.077 cv
398.707 190.826 398.782 190.495 399.032 190.338 cv
399.282 190.181 399.614 190.255 399.771 190.506 cv
400.528 191.71 401.287 192.921 402.047 194.139 cv
402.204 194.39 402.128 194.721 401.877 194.877 cv
401.788 194.932 401.69 194.959 401.593 194.959 cv
cp
f
509.814 207.89 mo
509.802 207.89 li
471.199 207.033 li
470.903 207.026 470.669 206.781 470.675 206.485 cv
470.682 206.193 470.92 205.961 471.211 205.961 cv
471.223 205.961 li
509.825 206.819 li
510.121 206.825 510.355 207.07 510.349 207.366 cv
510.342 207.658 510.104 207.89 509.814 207.89 cv
cp
f
465.108 220.511 mo
464.812 220.511 464.572 220.272 464.572 219.976 cv
464.571 219.68 464.81 219.44 465.106 219.439 cv
492.265 219.365 li
492.266 219.365 li
492.561 219.365 492.801 219.605 492.802 219.9 cv
492.802 220.196 492.563 220.436 492.267 220.437 cv
465.109 220.511 li
465.108 220.511 li
cp
f
501.279 234.733 mo
491.23 234.733 481.12 234.517 471.126 234.088 cv
470.831 234.075 470.601 233.826 470.614 233.53 cv
470.627 233.234 470.87 233 471.172 233.017 cv
483.705 233.556 496.423 233.757 508.97 233.619 cv
508.975 233.619 li
509.269 233.619 509.508 233.855 509.511 234.148 cv
509.514 234.444 509.277 234.687 508.982 234.69 cv
506.421 234.719 503.851 234.733 501.279 234.733 cv
cp
f
434.725 236.467 mo
435.759 235.801 436.804 235.152 437.855 234.514 cv
430.298 220.729 415.888 216.552 406.973 215.914 cv
398.502 216.187 392.678 216.187 382.617 222.024 cv
380.08 223.495 376.114 227.147 372.774 232.677 cv
373.99 233.456 375.205 234.237 376.418 235.022 cv
379.372 236.935 382.331 238.844 385.277 240.772 cv
389.36 233.25 397.442 229.423 407.01 229.423 cv
416.618 229.423 422.825 235.724 426.194 242.48 cv
428.97 240.379 431.802 238.351 434.725 236.467 cv
1 1 1 rgb
f
434.725 236.467 mo
434.729 236.467 li
434.725 236.467 li
407.011 228.888 mo
417.901 228.888 423.74 236.64 426.381 241.668 cv
429.276 239.492 431.916 237.64 434.435 236.016 cv
435.266 235.481 436.154 234.925 437.136 234.325 cv
428.528 219.163 411.931 216.81 406.963 216.451 cv
406.179 216.475 li
398.241 216.725 392.505 216.906 382.886 222.487 cv
380.584 223.822 376.785 227.234 373.506 232.51 cv
374.575 233.195 375.643 233.882 376.709 234.573 cv
378.289 235.595 li
380.558 237.063 382.828 238.531 385.091 240.01 cv
389.192 232.933 397.144 228.888 407.011 228.888 cv
426.194 243.016 mo
426.072 243.002 li
425.917 242.965 425.786 242.862 425.715 242.719 cv
423.338 237.954 417.747 229.959 407.011 229.959 cv
397.316 229.959 389.566 233.993 385.748 241.028 cv
385.677 241.16 385.554 241.255 385.409 241.292 cv
385.264 241.329 385.109 241.303 384.984 241.221 cv
382.564 239.637 380.135 238.065 377.707 236.495 cv
376.126 235.472 li
374.915 234.688 373.701 233.907 372.485 233.129 cv
372.241 232.972 372.166 232.649 372.316 232.401 cv
375.756 226.704 379.754 223.066 382.348 221.56 cv
392.201 215.844 398.05 215.66 406.145 215.404 cv
406.956 215.379 li
407.012 215.38 li
412.131 215.746 429.517 218.19 438.325 234.257 cv
438.463 234.508 438.378 234.824 438.133 234.972 cv
436.981 235.671 435.961 236.308 435.016 236.917 cv
432.372 238.62 429.593 240.58 426.518 242.907 cv
426.424 242.979 426.31 243.016 426.194 243.016 cv
0 0 0 rgb
f
399.488 287.515 mo
400.037 284.298 400.657 281.094 401.328 277.904 cv
398.915 277.659 396.439 277.235 394.195 276.316 cv
392.127 275.467 390.252 274.03 388.686 272.415 cv
385.38 269.005 383.129 264.495 382.469 259.715 cv
382.093 256.992 382.329 254.287 382.455 251.541 cv
382.53 249.918 382.738 248.393 383.048 246.95 cv
378.104 245.767 373.247 244.206 368.284 243.097 cv
366.223 250.466 365.846 259.518 369.154 269.986 cv
373.782 284.627 387.381 290.026 398.465 291.789 cv
398.776 290.357 399.12 288.933 399.488 287.515 cv
.67451 .831373 .968627 rgb
f
399.488 287.515 mo
399.492 287.515 li
399.488 287.515 li
368.666 243.732 mo
366.464 251.983 366.8 260.759 369.665 269.824 cv
374.226 284.253 387.507 289.41 398.051 291.179 cv
398.32 289.967 398.621 288.726 398.964 287.402 cv
399.459 284.501 400.022 281.541 400.682 278.374 cv
397.959 278.061 395.821 277.561 393.992 276.811 cv
392.023 276.004 390.108 274.65 388.302 272.787 cv
384.867 269.246 382.607 264.629 381.938 259.789 cv
381.613 257.434 381.737 255.067 381.857 252.779 cv
381.879 252.359 381.901 251.938 381.92 251.517 cv
381.985 250.112 382.153 248.712 382.42 247.349 cv
380.325 246.836 378.224 246.256 376.187 245.693 cv
373.728 245.014 371.191 244.313 368.666 243.732 cv
398.466 292.325 mo
398.381 292.318 li
387.463 290.582 373.441 285.326 368.643 270.147 cv
365.657 260.699 365.363 251.55 367.768 242.952 cv
367.845 242.678 368.123 242.512 368.401 242.574 cv
371.116 243.181 373.839 243.933 376.472 244.66 cv
378.664 245.266 380.931 245.892 383.173 246.429 cv
383.456 246.496 383.634 246.778 383.573 247.062 cv
383.257 248.529 383.061 250.044 382.99 251.566 cv
382.971 251.99 382.949 252.413 382.927 252.835 cv
382.804 255.177 382.688 257.388 383 259.642 cv
383.638 264.258 385.794 268.662 389.071 272.042 cv
390.75 273.773 392.592 275.079 394.398 275.82 cv
396.26 276.583 398.479 277.076 401.382 277.371 cv
401.533 277.387 401.671 277.465 401.76 277.588 cv
401.85 277.711 401.883 277.866 401.852 278.015 cv
401.141 281.396 400.54 284.533 400.017 287.605 cv
400.007 287.65 li
399.618 289.149 399.284 290.54 398.989 291.903 cv
398.935 292.152 398.713 292.325 398.466 292.325 cv
0 0 0 rgb
f
441.95 246.184 mo
437.464 246.95 432.985 247.744 428.552 248.819 cv
428.942 250.356 429.183 251.815 429.277 253.115 cv
429.354 254.181 429.261 255.962 429.014 257.381 cv
428.567 259.943 427.77 262.503 426.798 264.903 cv
425.043 269.238 422.306 273.478 418.106 275.599 cv
415.695 276.817 413.136 277.445 410.484 277.779 cv
410.121 277.825 409.757 277.863 409.393 277.899 cv
409.569 279.559 409.743 281.218 409.923 282.878 cv
410.268 286.076 410.629 289.272 410.99 292.469 cv
411.27 292.452 411.538 292.432 411.786 292.411 cv
432.957 290.588 442.853 268.092 442.853 256.287 cv
442.853 252.603 442.531 249.247 441.95 246.184 cv
1 1 1 rgb
f
409.983 278.377 mo
410.018 278.711 li
410.163 280.081 410.307 281.451 410.455 282.82 cv
410.782 285.848 411.124 288.873 411.465 291.899 cv
411.559 291.892 411.651 291.885 411.741 291.877 cv
423.377 290.875 430.713 283.661 434.82 277.785 cv
440.354 269.866 442.318 261.255 442.318 256.287 cv
442.318 252.971 442.049 249.783 441.519 246.801 cv
437.518 247.487 433.302 248.241 429.2 249.214 cv
429.518 250.569 429.724 251.866 429.811 253.076 cv
429.895 254.243 429.782 256.092 429.542 257.473 cv
429.119 259.899 428.363 262.467 427.295 265.104 cv
425.115 270.489 422.104 274.181 418.347 276.077 cv
416.096 277.214 413.619 277.924 410.551 278.311 cv
410.362 278.334 410.172 278.356 409.983 278.377 cv
410.99 293.005 mo
410.719 293.005 410.488 292.801 410.458 292.529 cv
410.434 292.319 li
410.081 289.192 409.728 286.065 409.39 282.935 cv
409.242 281.565 409.097 280.194 408.952 278.823 cv
408.861 277.956 li
408.845 277.814 408.888 277.672 408.978 277.561 cv
409.068 277.45 409.199 277.38 409.341 277.366 cv
409.7 277.331 410.059 277.292 410.417 277.247 cv
413.36 276.876 415.726 276.201 417.864 275.121 cv
421.383 273.344 424.222 269.839 426.301 264.702 cv
427.341 262.134 428.076 259.641 428.486 257.289 cv
428.713 255.984 428.821 254.244 428.742 253.154 cv
428.648 251.85 428.409 250.436 428.032 248.951 cv
427.997 248.812 428.019 248.665 428.092 248.543 cv
428.166 248.42 428.286 248.332 428.425 248.298 cv
432.903 247.212 437.517 246.398 441.86 245.656 cv
442.149 245.607 442.422 245.797 442.477 246.084 cv
443.082 249.279 443.389 252.712 443.389 256.287 cv
443.389 263.034 440.37 271.713 435.698 278.399 cv
431.461 284.462 423.881 291.907 411.832 292.945 cv
411.58 292.966 411.308 292.986 411.023 293.004 cv
410.99 293.005 li
0 0 0 rgb
f
415.704 289.566 mo
415.58 289.515 li
412.879 286.878 li
412.876 286.626 li
413.128 286.623 li
415.829 289.26 li
415.832 289.513 li
415.704 289.566 li
f
419.292 288.849 mo
419.176 288.807 li
416.737 286.74 414.336 284.557 412.04 282.32 cv
412.036 282.067 li
412.289 282.064 li
414.579 284.296 416.974 286.473 419.407 288.534 cv
419.428 288.786 li
419.292 288.849 li
f
422.538 287.482 mo
422.419 287.436 li
413.483 279.395 li
413.47 279.143 li
413.722 279.129 li
422.658 287.171 li
422.671 287.423 li
422.538 287.482 li
f
426.062 285.197 mo
425.952 285.159 li
423.126 282.966 420.361 280.626 417.733 278.203 cv
417.723 277.95 li
417.975 277.94 li
420.596 280.356 423.353 282.69 426.171 284.878 cv
426.203 285.128 li
426.062 285.197 li
f
428.946 282.526 mo
428.846 282.495 li
425.956 280.545 423.129 278.429 420.442 276.206 cv
420.418 275.955 li
420.669 275.932 li
423.347 278.147 426.165 280.255 429.045 282.199 cv
429.094 282.447 li
428.946 282.526 li
f
431.538 279.893 mo
431.436 279.861 li
428.735 277.98 426.046 276.007 423.446 273.998 cv
423.414 273.747 li
423.664 273.715 li
426.26 275.721 428.944 277.69 431.64 279.568 cv
431.685 279.816 li
431.538 279.893 li
f
433.72 276.876 mo
433.625 276.849 li
430.899 275.132 428.153 273.359 425.463 271.579 cv
425.413 271.331 li
425.66 271.281 li
428.347 273.059 431.091 274.831 433.815 276.546 cv
433.871 276.793 li
433.72 276.876 li
f
435.556 273.544 mo
435.464 273.519 li
427.733 268.949 li
427.671 268.704 li
427.916 268.641 li
435.646 273.211 li
435.709 273.456 li
435.556 273.544 li
f
436.965 270.486 mo
436.879 270.463 li
428.958 266.057 li
428.889 265.815 li
429.132 265.746 li
437.052 270.151 li
437.121 270.394 li
436.965 270.486 li
f
438.442 267.096 mo
438.357 267.074 li
430.389 262.703 li
430.318 262.461 li
430.561 262.39 li
438.528 266.761 li
438.599 267.004 li
438.442 267.096 li
f
439.621 263.812 mo
439.531 263.787 li
436.721 262.151 433.839 260.539 430.966 258.999 cv
430.893 258.757 li
431.135 258.684 li
434.011 260.227 436.897 261.84 439.711 263.479 cv
439.775 263.723 li
439.621 263.812 li
f
440.32 259.89 mo
440.242 259.872 li
431.273 255.546 li
431.19 255.308 li
431.428 255.224 li
440.397 259.551 li
440.481 259.789 li
440.32 259.89 li
f
440.391 256.229 mo
440.315 256.212 li
437.275 254.783 434.208 253.299 431.2 251.802 cv
431.12 251.563 li
431.359 251.482 li
434.365 252.978 437.429 254.461 440.467 255.889 cv
440.553 256.126 li
440.391 256.229 li
f
440.383 252.618 mo
440.31 252.602 li
438.339 251.718 436.39 250.719 434.516 249.633 cv
434.451 249.389 li
434.695 249.324 li
436.558 250.403 438.497 251.397 440.456 252.276 cv
440.546 252.317 440.586 252.422 440.546 252.512 cv
440.383 252.618 li
f
440.191 249.502 mo
440.119 249.487 li
438.5 248.77 li
438.41 248.73 438.369 248.625 438.41 248.535 cv
438.449 248.444 438.556 248.404 438.645 248.444 cv
440.263 249.16 li
440.354 249.2 440.395 249.306 440.354 249.396 cv
440.191 249.502 li
f
442.641 262.639 mo
443.128 260.421 443.389 258.271 443.389 256.287 cv
443.389 252.712 443.082 249.279 442.477 246.084 cv
442.476 246.083 442.476 246.082 442.476 246.08 cv
442.492 246.08 442.508 246.079 442.524 246.079 cv
442.731 246.079 442.94 246.134 443.135 246.256 cv
443.754 246.606 443.804 247.386 444.046 247.988 cv
444.766 250.138 445.088 252.386 445.292 254.638 cv
445.434 256.603 445.491 258.587 445.307 260.55 cv
445.287 260.698 445.267 260.845 445.247 260.992 cv
445.247 261.163 445.251 261.334 445.237 261.505 cv
445.237 261.523 li
445.301 261.936 445.2 262.322 444.997 262.635 cv
444.203 262.637 443.417 262.638 442.641 262.639 cv
.870588 .870588 .870588 rgb
f
443.653 263.396 mo
443.282 263.396 442.902 263.248 442.582 262.905 cv
442.602 262.816 442.622 262.727 442.641 262.639 cv
443.417 262.638 444.203 262.637 444.997 262.635 cv
444.7 263.094 444.185 263.396 443.653 263.396 cv
0 0 0 rgb
f
411.465 291.899 mo
411.348 290.862 411.231 289.825 411.115 288.788 cv
411.311 288.697 411.533 288.652 411.755 288.652 cv
411.889 288.652 412.023 288.668 412.15 288.702 cv
412.813 288.672 413.384 288.655 414.472 288.434 cv
415.58 289.515 li
415.704 289.566 li
415.832 289.513 li
415.829 289.26 li
414.892 288.345 li
415.232 288.269 415.617 288.175 416.062 288.059 cv
416.634 287.886 417.166 287.707 417.675 287.516 cv
418.173 287.951 418.674 288.382 419.176 288.807 cv
419.292 288.849 li
419.428 288.786 li
419.407 288.534 li
418.954 288.15 418.502 287.763 418.052 287.371 cv
419.009 286.994 419.903 286.568 420.876 286.048 cv
422.419 287.436 li
422.538 287.482 li
422.671 287.423 li
422.658 287.171 li
421.21 285.868 li
421.786 285.553 422.394 285.205 423.061 284.815 cv
423.553 284.519 424.006 284.237 424.431 283.96 cv
424.936 284.364 425.443 284.764 425.952 285.159 cv
426.062 285.197 li
426.203 285.128 li
426.171 284.878 li
425.693 284.507 425.217 284.132 424.743 283.753 cv
425.756 283.073 426.621 282.402 427.523 281.588 cv
427.962 281.894 428.403 282.196 428.846 282.495 cv
428.946 282.526 li
429.094 282.447 li
429.045 282.199 li
428.627 281.916 428.209 281.63 427.793 281.341 cv
428.26 280.908 428.741 280.434 429.262 279.899 cv
429.545 279.577 429.825 279.251 430.1 278.922 cv
430.545 279.237 430.99 279.55 431.436 279.861 cv
431.538 279.893 li
431.685 279.816 li
431.64 279.568 li
431.202 279.263 430.765 278.956 430.329 278.647 cv
430.39 278.572 430.452 278.497 430.513 278.422 cv
430.94 277.975 431.551 277.049 432.196 275.944 cv
432.672 276.247 433.149 276.549 433.625 276.849 cv
433.72 276.876 li
433.871 276.793 li
433.815 276.546 li
433.336 276.244 432.855 275.94 432.375 275.635 cv
432.921 274.681 433.481 273.621 433.967 272.634 cv
435.464 273.519 li
435.556 273.544 li
435.709 273.456 li
435.646 273.211 li
434.124 272.311 li
434.243 272.066 434.356 271.826 434.462 271.595 cv
434.897 270.728 435.186 270.155 435.422 269.653 cv
436.879 270.463 li
436.965 270.486 li
437.121 270.394 li
437.052 270.151 li
435.572 269.328 li
435.866 268.677 436.103 268.065 436.514 266.941 cv
436.609 266.698 436.701 266.456 436.791 266.216 cv
438.357 267.074 li
438.442 267.096 li
438.599 267.004 li
438.528 266.761 li
436.916 265.877 li
437.293 264.843 437.623 263.83 437.907 262.849 cv
438.451 263.161 438.992 263.474 439.531 263.787 cv
439.621 263.812 li
439.775 263.723 li
439.711 263.479 li
439.146 263.15 438.578 262.822 438.008 262.495 cv
438.334 261.333 438.595 260.22 438.793 259.173 cv
440.242 259.872 li
440.32 259.89 li
440.481 259.789 li
440.397 259.551 li
438.86 258.809 li
439.061 257.681 439.187 256.637 439.239 255.704 cv
439.598 255.874 439.957 256.043 440.315 256.212 cv
440.391 256.229 li
440.553 256.126 li
440.467 255.889 li
440.064 255.699 439.66 255.509 439.257 255.318 cv
439.262 255.16 439.266 255.005 439.267 254.854 cv
439.284 253.751 439.301 252.896 439.28 252.129 cv
439.623 252.29 439.966 252.448 440.31 252.602 cv
440.383 252.618 li
440.546 252.512 li
440.586 252.422 440.546 252.317 440.456 252.276 cv
440.058 252.098 439.661 251.914 439.266 251.727 cv
439.223 250.806 439.113 249.978 438.868 248.933 cv
440.119 249.487 li
440.191 249.502 li
440.354 249.396 li
440.395 249.306 440.354 249.2 440.263 249.16 cv
438.759 248.494 li
438.638 248.044 438.777 247.575 439.062 247.228 cv
439.888 247.082 440.708 246.94 441.519 246.801 cv
442.049 249.783 442.318 252.971 442.318 256.287 cv
442.318 257.609 442.179 259.188 441.871 260.944 cv
441.475 262.8 440.876 264.608 440.219 266.389 cv
439.471 268.463 438.699 270.538 437.655 272.484 cv
436.849 274.048 436.114 275.654 435.236 277.179 cv
435.099 277.381 434.961 277.583 434.82 277.785 cv
431.396 282.685 425.725 288.515 417.189 290.898 cv
417.17 290.9 417.15 290.901 417.131 290.903 cv
417.014 290.923 416.897 290.942 416.782 290.969 cv
416.484 291.037 416.194 291.128 415.905 291.225 cv
414.583 291.53 413.195 291.752 411.741 291.877 cv
411.651 291.885 411.559 291.892 411.465 291.899 cv
.870588 .870588 .870588 rgb
f
411.834 292.454 mo
410.817 292.454 410.024 291.254 410.54 290.312 cv
410.416 290.019 410.4 289.676 410.542 289.395 cv
410.641 289.111 410.854 288.909 411.115 288.788 cv
411.231 289.825 411.348 290.862 411.465 291.899 cv
411.559 291.892 411.651 291.885 411.741 291.877 cv
413.195 291.752 414.583 291.53 415.905 291.225 cv
415.54 291.348 415.178 291.479 414.808 291.585 cv
414.243 291.735 413.654 291.801 413.101 291.998 cv
412.685 292.177 412.864 292.175 412.232 292.392 cv
412.097 292.434 411.964 292.454 411.834 292.454 cv
417.189 290.898 mo
425.725 288.515 431.396 282.685 434.82 277.785 cv
434.961 277.583 435.099 277.381 435.236 277.179 cv
434.967 277.645 434.686 278.103 434.385 278.55 cv
432.982 280.622 431.268 282.469 429.494 284.225 cv
426.751 287.071 422.78 289.639 420.077 290.486 cv
419.141 290.775 418.159 290.814 417.189 290.898 cv
442.582 262.905 mo
442.547 262.867 442.513 262.827 442.479 262.785 cv
442.071 262.327 442.066 261.643 442.348 261.117 cv
442.394 261.014 442.447 260.915 442.511 260.823 cv
442.742 259.92 442.769 257.299 442.706 255.431 cv
442.654 254.37 442.59 253.494 442.487 252.671 cv
442.402 252.916 li
442.571 255.211 442.489 257.524 442.089 259.787 cv
442.025 260.175 441.952 260.56 441.871 260.944 cv
442.179 259.188 442.318 257.609 442.318 256.287 cv
442.318 252.971 442.049 249.783 441.519 246.801 cv
440.708 246.94 439.888 247.082 439.062 247.228 cv
439.325 246.907 439.713 246.691 440.134 246.691 cv
440.157 246.691 440.18 246.692 440.204 246.693 cv
440.242 246.153 440.744 245.787 441.242 245.787 cv
441.488 245.787 441.732 245.876 441.92 246.077 cv
442.01 246.191 li
442.157 246.126 442.315 246.087 442.476 246.08 cv
442.476 246.082 442.476 246.083 442.477 246.084 cv
443.082 249.279 443.389 252.712 443.389 256.287 cv
443.389 258.271 443.128 260.421 442.641 262.639 cv
442.622 262.727 442.602 262.816 442.582 262.905 cv
0 0 0 rgb
f
415.704 289.566 mo
415.58 289.515 li
414.472 288.434 li
414.604 288.408 414.744 288.378 414.892 288.345 cv
415.829 289.26 li
415.832 289.513 li
415.704 289.566 li
f
419.292 288.849 mo
419.176 288.807 li
418.674 288.382 418.173 287.951 417.675 287.516 cv
417.802 287.469 417.928 287.42 418.052 287.371 cv
418.502 287.763 418.954 288.15 419.407 288.534 cv
419.428 288.786 li
419.292 288.849 li
f
422.538 287.482 mo
422.419 287.436 li
420.876 286.048 li
420.986 285.989 421.098 285.929 421.21 285.868 cv
422.658 287.171 li
422.671 287.423 li
422.538 287.482 li
f
426.062 285.197 mo
425.952 285.159 li
425.443 284.764 424.936 284.364 424.431 283.96 cv
424.536 283.89 424.641 283.821 424.743 283.753 cv
425.217 284.132 425.693 284.507 426.171 284.878 cv
426.203 285.128 li
426.062 285.197 li
f
428.946 282.526 mo
428.846 282.495 li
428.403 282.196 427.962 281.894 427.523 281.588 cv
427.613 281.507 427.702 281.425 427.793 281.341 cv
428.209 281.63 428.627 281.916 429.045 282.199 cv
429.094 282.447 li
428.946 282.526 li
f
431.538 279.893 mo
431.436 279.861 li
430.99 279.55 430.545 279.237 430.1 278.922 cv
430.177 278.831 430.253 278.739 430.329 278.647 cv
430.765 278.956 431.202 279.263 431.64 279.568 cv
431.685 279.816 li
431.538 279.893 li
f
433.72 276.876 mo
433.625 276.849 li
433.149 276.549 432.672 276.247 432.196 275.944 cv
432.255 275.843 432.315 275.739 432.375 275.635 cv
432.855 275.94 433.336 276.244 433.815 276.546 cv
433.871 276.793 li
433.72 276.876 li
f
435.556 273.544 mo
435.464 273.519 li
433.967 272.634 li
434.02 272.525 434.073 272.418 434.124 272.311 cv
435.646 273.211 li
435.709 273.456 li
435.556 273.544 li
f
436.965 270.486 mo
436.879 270.463 li
435.422 269.653 li
435.475 269.542 435.524 269.435 435.572 269.328 cv
437.052 270.151 li
437.121 270.394 li
436.965 270.486 li
f
438.442 267.096 mo
438.357 267.074 li
436.791 266.216 li
436.833 266.102 436.875 265.99 436.916 265.877 cv
438.528 266.761 li
438.599 267.004 li
438.442 267.096 li
f
439.621 263.812 mo
439.531 263.787 li
438.992 263.474 438.451 263.161 437.907 262.849 cv
437.941 262.731 437.975 262.613 438.008 262.495 cv
438.578 262.822 439.146 263.15 439.711 263.479 cv
439.775 263.723 li
439.621 263.812 li
f
440.32 259.89 mo
440.242 259.872 li
438.793 259.173 li
438.816 259.051 438.839 258.93 438.86 258.809 cv
440.397 259.551 li
440.481 259.789 li
440.32 259.89 li
f
440.391 256.229 mo
440.315 256.212 li
439.957 256.043 439.598 255.874 439.239 255.704 cv
439.246 255.573 439.252 255.444 439.257 255.318 cv
439.66 255.509 440.064 255.699 440.467 255.889 cv
440.553 256.126 li
440.391 256.229 li
f
440.383 252.618 mo
440.31 252.602 li
439.966 252.448 439.623 252.29 439.28 252.129 cv
439.277 251.992 439.272 251.858 439.266 251.727 cv
439.661 251.914 440.058 252.098 440.456 252.276 cv
440.546 252.317 440.586 252.422 440.546 252.512 cv
440.383 252.618 li
f
440.191 249.502 mo
440.119 249.487 li
438.868 248.933 li
438.838 248.805 438.806 248.674 438.772 248.539 cv
438.768 248.524 438.763 248.509 438.759 248.494 cv
440.263 249.16 li
440.354 249.2 440.395 249.306 440.354 249.396 cv
440.191 249.502 li
f
435.472 236.749 mo
435.412 236.749 435.353 236.745 435.294 236.738 cv
435.812 236.406 436.354 236.066 436.927 235.711 cv
436.701 236.371 436.09 236.749 435.472 236.749 cv
.870588 .870588 .870588 rgb
f
434.266 236.126 mo
434.145 235.96 434.044 235.759 433.973 235.522 cv
433.661 234.427 433.234 233.368 432.821 232.308 cv
432.41 231.315 431.148 228.419 429.663 227.33 cv
429.045 226.687 429.306 225.878 429.855 225.494 cv
432.227 227.519 434.454 229.994 436.355 233.018 cv
436.488 233.343 436.615 233.67 436.735 233.997 cv
436.81 234.157 436.87 234.312 436.914 234.46 cv
436.019 235.009 435.203 235.521 434.435 236.016 cv
434.379 236.053 434.322 236.089 434.266 236.126 cv
f
435.294 236.738 mo
434.909 236.692 434.536 236.496 434.266 236.126 cv
434.322 236.089 434.379 236.053 434.435 236.016 cv
435.203 235.521 436.019 235.009 436.914 234.46 cv
437.059 234.945 437.045 235.366 436.927 235.711 cv
436.354 236.066 435.812 236.406 435.294 236.738 cv
434.725 236.467 mo
434.729 236.467 li
434.725 236.467 li
436.355 233.018 mo
434.454 229.994 432.227 227.519 429.855 225.494 cv
430.053 225.355 430.289 225.272 430.534 225.272 cv
430.811 225.272 431.1 225.378 431.361 225.631 cv
433.604 227.596 435.224 230.257 436.355 233.018 cv
0 0 0 rgb
f
399.232 290.81 mo
399.341 290.336 399.455 289.856 399.574 289.367 cv
399.723 289.861 399.637 290.423 399.232 290.81 cv
.870588 .870588 .870588 rgb
f
398.051 291.179 mo
393.097 290.348 387.539 288.769 382.565 285.832 cv
382.65 285.356 383.023 284.929 383.558 284.929 cv
383.62 284.929 383.685 284.935 383.751 284.947 cv
384.418 285.102 386.721 286.041 388.266 286.418 cv
390.076 286.941 391.918 287.347 393.74 287.824 cv
395.35 288.149 395.812 288.366 396.865 288.366 cv
397.212 288.366 397.624 288.342 398.162 288.291 cv
398.175 288.291 398.189 288.29 398.202 288.29 cv
398.386 288.29 398.557 288.325 398.713 288.388 cv
398.471 289.349 398.252 290.272 398.051 291.179 cv
.588235 .72549 .843137 rgb
f
396.799 291.381 mo
396.564 291.381 396.329 291.371 396.094 291.352 cv
393.794 291.161 391.563 290.549 389.422 289.703 cv
388.432 289.347 387.395 289.116 386.43 288.694 cv
385.267 288.195 384.186 287.528 383.073 286.93 cv
382.634 286.691 382.491 286.243 382.565 285.832 cv
387.539 288.769 393.097 290.348 398.051 291.179 cv
398.252 290.272 398.471 289.349 398.713 288.388 cv
399.139 288.559 399.445 288.938 399.574 289.367 cv
399.455 289.856 399.341 290.336 399.232 290.81 cv
399.181 290.859 399.125 290.905 399.064 290.948 cv
398.823 291.189 398.479 291.236 398.154 291.273 cv
397.706 291.345 397.253 291.381 396.799 291.381 cv
0 0 0 rgb
f
385.444 262.622 mo
384.838 262.618 384.232 262.614 383.626 262.61 cv
383.348 261.637 383.138 260.644 383 259.642 cv
382.688 257.388 382.804 255.177 382.927 252.835 cv
382.949 252.413 382.971 251.99 382.99 251.566 cv
383.061 250.044 383.257 248.529 383.573 247.062 cv
383.603 246.919 383.574 246.777 383.501 246.662 cv
383.505 246.662 383.509 246.662 383.513 246.662 cv
384.073 246.662 384.633 247.038 384.65 247.786 cv
384.527 251.038 384.577 254.3 384.851 257.543 cv
384.838 257.634 385.122 259.324 385.34 260.472 cv
385.446 261.177 385.884 261.897 385.468 262.58 cv
385.461 262.594 385.452 262.608 385.444 262.622 cv
.870588 .870588 .870588 rgb
f
384.306 263.243 mo
384.129 263.243 383.952 263.211 383.787 263.148 cv
383.731 262.97 383.677 262.79 383.626 262.61 cv
384.232 262.614 384.838 262.618 385.444 262.622 cv
385.188 263.044 384.748 263.243 384.306 263.243 cv
0 0 0 rgb
f
383.787 263.148 mo
383.408 263.005 383.091 262.701 382.979 262.255 cv
382.645 260.347 382.246 258.437 382.154 256.498 cv
382.119 253.595 382.288 250.688 382.373 247.786 cv
382.394 247.041 382.946 246.668 383.501 246.662 cv
383.574 246.777 383.603 246.919 383.573 247.062 cv
383.257 248.529 383.061 250.044 382.99 251.566 cv
382.971 251.99 382.949 252.413 382.927 252.835 cv
382.804 255.177 382.688 257.388 383 259.642 cv
383.138 260.644 383.348 261.637 383.626 262.61 cv
383.677 262.79 383.731 262.97 383.787 263.148 cv
f
617.922 373.427 mo
634.968 373.427 657.736 372.351 679.204 372.351 cv
683.689 335.978 686.115 308.12 696.184 269.383 cv
674.818 268.434 629.046 268.731 622.54 270.432 cv
621.237 305.259 619.938 339.528 617.922 373.427 cv
1 1 1 rgb
f
623.06 270.861 mo
621.872 302.621 620.524 338.547 618.49 372.891 cv
626.385 372.88 635.473 372.647 645.081 372.4 cv
656.117 372.117 667.523 371.824 678.73 371.816 cv
679.341 366.846 679.918 362.012 680.476 357.333 cv
683.959 328.126 686.97 302.878 695.499 269.89 cv
674.901 269.021 630.813 269.234 623.06 270.861 cv
617.922 373.963 mo
617.774 373.963 617.633 373.902 617.532 373.794 cv
617.43 373.687 617.378 373.543 617.387 373.395 cv
619.448 338.745 620.806 302.442 622.005 270.413 cv
622.013 270.177 622.176 269.974 622.404 269.914 cv
629.083 268.168 675.489 267.929 696.208 268.848 cv
696.369 268.855 696.519 268.935 696.615 269.065 cv
696.711 269.195 696.743 269.362 696.703 269.518 cv
688.065 302.749 685.041 328.103 681.54 357.46 cv
680.964 362.287 680.369 367.279 679.735 372.417 cv
679.702 372.686 679.474 372.887 679.204 372.887 cv
667.858 372.887 656.293 373.184 645.109 373.472 cv
635.262 373.724 625.961 373.963 617.922 373.963 cv
0 0 0 rgb
f
533.899 374.63 mo
535.03 352.695 532.869 329.415 524.097 309.278 cv
519.059 320.522 513.103 331.222 506.418 341.446 cv
504.263 337.768 502.355 333.89 500.448 330.013 cv
499.959 329.018 499.469 328.023 498.979 327.028 cv
496.297 321.574 493.613 316.118 491.172 310.553 cv
494.448 297.307 498.065 284.146 502.267 271.174 cv
502.846 269.388 503.445 267.585 504.443 265.994 cv
506.51 262.701 510.05 260.661 513.527 258.923 cv
523.095 254.139 533.294 250.621 543.575 248.626 cv
544.534 247.111 545.931 245.879 547.553 245.116 cv
548.971 250.532 552.337 255.259 556.248 259.265 cv
558.043 261.104 560.416 262.95 562.851 262.689 cv
569.495 260.409 573.287 253.54 578.856 249.259 cv
580.801 247.764 583.164 246.54 585.81 246.784 cv
591.545 247.889 597.28 248.995 603.015 250.101 cv
612.485 251.926 622.274 253.884 630.149 259.45 cv
631.866 260.663 633.493 262.062 635.128 263.986 cv
644.196 284.564 651.126 306.041 656.681 327.832 cv
659.381 338.428 661.766 349.535 659.403 360.465 cv
657.972 363.688 655.59 366.416 652.897 368.693 cv
651.253 370.083 649.453 371.339 647.419 372.044 cv
645.108 372.846 642.616 372.902 640.171 372.949 cv
634.984 373.05 629.798 373.151 624.611 373.252 cv
533.899 374.63 li
1 1 1 rgb
f
533.844 340.237 mo
527.717 344.089 522.97 350.063 520.514 356.871 cv
520.181 357.793 519.887 358.795 520.15 359.74 cv
520.413 360.684 521.456 361.471 522.57 361.084 cv
522.351 362.13 523.042 363.286 524.066 363.589 cv
525.091 363.893 526.299 363.3 526.686 362.303 cv
526.97 362.923 527.772 363.159 528.437 363.013 cv
529.103 362.867 529.663 362.432 530.197 362.01 cv
531.591 360.909 532.985 359.808 534.379 358.706 cv
536.179 357.284 537.996 355.852 540.054 354.839 cv
541.176 354.287 542.372 353.859 543.382 353.122 cv
545.463 351.607 546.492 348.743 545.749 346.279 cv
545.085 344.076 543.239 342.453 541.377 341.102 cv
540.409 340.399 539.362 339.716 538.175 339.574 cv
536.434 339.367 534.739 340.361 533.844 340.237 cv
cp
f
517.397 374.63 mo
529.105 374.458 540.814 374.285 552.522 374.112 cv
552.372 366.295 li
514.677 367.181 li
517.397 374.63 li
cp
f
515.437 367.699 mo
517.77 374.089 li
551.976 373.584 li
551.847 366.844 li
515.437 367.699 li
cp
517.397 375.166 mo
517.172 375.166 516.971 375.026 516.894 374.814 cv
514.174 367.365 li
514.114 367.203 514.137 367.022 514.234 366.88 cv
514.331 366.737 514.492 366.65 514.664 366.646 cv
552.359 365.759 li
552.508 365.766 552.64 365.81 552.743 365.908 cv
552.846 366.007 552.905 366.142 552.908 366.285 cv
553.058 374.102 li
553.061 374.244 553.006 374.382 552.907 374.484 cv
552.808 374.587 552.672 374.646 552.53 374.648 cv
517.405 375.166 li
517.397 375.166 li
cp
0 0 0 rgb
f
545.737 223.184 mo
547.276 233.481 547.925 243.912 547.671 254.32 cv
547.65 255.188 547.631 256.098 548.023 256.874 cv
548.424 257.669 549.197 258.202 549.959 258.664 cv
555.216 261.854 561.7 263.31 567.648 261.747 cv
573.595 260.185 578.775 255.304 579.327 248.703 cv
576.816 240.243 572.619 228.449 569.375 214.88 cv
562.09 218.106 554.464 220.559 545.737 223.184 cv
1 1 1 rgb
f
546.334 223.564 mo
547.827 233.721 548.456 244.07 548.207 254.333 cv
548.187 255.138 548.167 255.97 548.501 256.632 cv
548.85 257.325 549.58 257.807 550.237 258.206 cv
555.764 261.56 562.06 262.662 567.511 261.229 cv
572.692 259.868 578.172 255.487 578.784 248.757 cv
578.06 246.322 577.184 243.572 576.258 240.662 cv
574.035 233.678 571.28 225.023 569.004 215.628 cv
562.273 218.565 555.283 220.866 546.334 223.564 cv
562.647 262.914 mo
558.314 262.914 553.789 261.615 549.681 259.122 cv
548.84 258.612 547.998 258.015 547.544 257.115 cv
547.089 256.212 547.113 255.2 547.135 254.307 cv
547.388 243.951 546.739 233.506 545.207 223.263 cv
545.167 223 545.327 222.748 545.583 222.671 cv
554.968 219.848 562.185 217.478 569.158 214.39 cv
569.304 214.326 569.471 214.329 569.613 214.4 cv
569.755 214.47 569.859 214.6 569.896 214.755 cv
572.191 224.352 575.012 233.215 577.279 240.337 cv
578.22 243.291 579.108 246.081 579.84 248.55 cv
579.861 248.747 li
579.331 255.074 574.478 260.507 567.784 262.266 cv
566.13 262.7 564.404 262.914 562.647 262.914 cv
0 0 0 rgb
f
593.823 174.571 mo
591.768 182.392 589.696 189.371 585.891 199.456 cv
584.081 204.252 581.27 209.482 578.183 213.699 cv
576.73 215.683 575.664 216.608 573.069 217.5 cv
573.16 215.344 571.045 214.045 570.926 211.879 cv
570.78 209.215 572.708 207.088 571.379 204.601 cv
568.847 199.864 567.318 194.8 566.889 189.726 cv
566.536 185.559 566.965 181.26 569.291 177.695 cv
571.616 174.13 576.13 171.438 581.139 171.63 cv
584.956 171.776 591.103 171.859 593.823 174.571 cv
.67451 .831373 .968627 rgb
f
580.642 172.157 mo
576.312 172.157 572.073 174.409 569.739 177.988 cv
567.77 181.007 567.012 184.831 567.423 189.68 cv
567.848 194.712 569.339 199.647 571.851 204.348 cv
572.752 206.034 572.328 207.561 571.918 209.037 cv
571.667 209.942 571.407 210.876 571.461 211.85 cv
571.51 212.755 571.977 213.511 572.47 214.312 cv
572.932 215.06 573.406 215.829 573.558 216.751 cv
575.62 215.945 576.533 215.044 577.751 213.383 cv
580.783 209.241 583.567 204.096 585.39 199.267 cv
589.155 189.288 591.193 182.451 593.223 174.743 cv
590.687 172.514 585.312 172.318 581.72 172.188 cv
581.119 172.166 li
580.96 172.159 580.801 172.157 580.642 172.157 cv
573.069 218.036 mo
572.955 218.036 572.842 218 572.749 217.93 cv
572.607 217.823 572.526 217.654 572.534 217.477 cv
572.574 216.522 572.081 215.722 571.558 214.874 cv
571.016 213.995 570.456 213.085 570.391 211.908 cv
570.328 210.759 570.611 209.738 570.886 208.751 cv
571.272 207.361 571.605 206.161 570.906 204.853 cv
568.325 200.023 566.793 194.948 566.355 189.771 cv
565.924 184.675 566.737 180.629 568.842 177.403 cv
571.463 173.384 576.291 170.907 581.159 171.095 cv
581.759 171.117 li
585.627 171.257 591.471 171.47 594.201 174.191 cv
594.336 174.326 594.389 174.522 594.341 174.707 cv
592.274 182.575 590.224 189.491 586.392 199.645 cv
584.536 204.562 581.702 209.799 578.615 214.015 cv
577.163 215.998 576.043 217.045 573.243 218.007 cv
573.069 218.036 li
0 0 0 rgb
f
532.492 180.604 mo
531.72 187.649 529.18 194.391 528.002 201.377 cv
526.824 208.364 527.159 215.988 531.651 222.2 cv
535.605 227.668 542.687 231.499 550.058 232.158 cv
557.429 232.817 564.895 230.287 569.465 225.58 cv
573.761 221.154 576.174 210.366 577.596 205.003 cv
580.755 206.03 584.518 205.611 586.841 203.699 cv
589.163 201.787 589.705 198.38 587.795 195.982 cv
585.886 193.584 583.082 192.802 579.33 195.302 cv
580.285 190.848 580.228 186.338 580.213 184.266 cv
580.171 178.642 581.39 170.505 577.96 167.554 cv
576.018 165.882 571.656 163.988 569.216 162.909 cv
566.735 161.813 563.437 161.983 560.203 162.152 cv
557.941 162.27 555.712 162.389 553.816 162.074 cv
549.21 161.31 544.138 162.74 540.048 164.432 cv
535.156 166.457 533.07 175.332 532.492 180.604 cv
1 1 1 rgb
f
533.025 180.662 mo
532.585 184.676 531.564 188.64 530.577 192.474 cv
529.822 195.41 529.04 198.445 528.531 201.466 cv
527.123 209.809 528.32 216.679 532.085 221.886 cv
535.961 227.246 542.866 230.978 550.106 231.625 cv
557.335 232.272 564.609 229.812 569.08 225.207 cv
572.836 221.338 575.196 212.165 576.606 206.683 cv
576.774 206.028 576.931 205.418 577.078 204.866 cv
577.115 204.723 577.21 204.603 577.339 204.532 cv
577.469 204.462 577.621 204.448 577.761 204.493 cv
580.88 205.507 584.392 205.022 586.5 203.285 cv
588.677 201.494 589.061 198.432 587.376 196.316 cv
585.398 193.831 582.79 193.64 579.627 195.748 cv
579.445 195.868 579.208 195.867 579.028 195.745 cv
578.848 195.622 578.76 195.403 578.806 195.189 cv
579.728 190.892 579.694 186.514 579.678 184.411 cv
579.677 184.269 li
579.668 183.09 579.714 181.824 579.762 180.484 cv
579.936 175.631 580.132 170.13 577.611 167.959 cv
575.801 166.401 571.716 164.598 569.275 163.521 cv
569 163.4 li
566.629 162.352 563.363 162.523 560.204 162.688 cv
557.976 162.805 555.674 162.926 553.729 162.603 cv
550.007 161.986 545.473 162.767 540.253 164.927 cv
535.999 166.688 533.7 174.504 533.025 180.662 cv
552.392 232.798 mo
551.6 232.798 550.805 232.763 550.01 232.692 cv
542.47 232.018 535.269 228.118 531.217 222.513 cv
527.277 217.066 526.017 209.924 527.474 201.288 cv
527.991 198.222 528.778 195.164 529.539 192.207 cv
530.517 188.41 531.528 184.483 531.96 180.545 cv
532.216 178.211 533.799 166.438 539.843 163.937 cv
545.251 161.699 549.982 160.895 553.904 161.546 cv
555.734 161.849 557.878 161.737 560.148 161.619 cv
563.432 161.446 566.828 161.268 569.433 162.419 cv
569.708 162.541 li
572.203 163.642 576.379 165.485 578.31 167.147 cv
581.222 169.654 581.015 175.428 580.832 180.523 cv
580.785 181.851 580.74 183.105 580.749 184.262 cv
580.75 184.402 li
580.765 186.352 580.794 190.219 580.086 194.225 cv
583.267 192.537 586.124 193.023 588.214 195.649 cv
590.268 198.227 589.814 201.945 587.181 204.113 cv
584.925 205.97 581.285 206.572 577.973 205.674 cv
577.869 206.076 577.759 206.502 577.644 206.95 cv
576.114 212.896 573.803 221.881 569.849 225.953 cv
565.652 230.276 559.125 232.798 552.392 232.798 cv
0 0 0 rgb
f
555.596 172.589 mo
554.574 175.631 549.27 179.515 546.198 179.501 cv
543.126 179.488 542.135 177.963 541.223 174.913 cv
538.269 177.02 535.988 179.246 533.123 180.001 cv
528.745 181.154 523.821 177.963 522.9 173.377 cv
521.98 168.79 525.24 163.691 529.668 162.79 cv
526.719 163.173 524.158 159.952 524.429 156.863 cv
524.701 153.774 527.157 151.212 529.956 150.141 cv
532.754 149.069 535.829 149.238 538.853 149.125 cv
538.049 146.016 539.853 142.569 542.536 140.917 cv
545.218 139.265 548.545 139.157 551.556 139.856 cv
553.534 140.315 555.489 141.134 556.932 142.608 cv
558.375 144.082 559.226 146.298 558.901 148.541 cv
561.927 145.457 566.473 143.651 570.43 145.056 cv
574.386 146.461 576.919 151.754 576.862 155.206 cv
579.096 152.987 581.892 151.265 584.917 151.753 cv
590.92 152.72 591.735 158.004 588.313 164.328 cv
591.696 163.085 596.339 164.978 597.369 169.818 cv
598.135 173.421 596.27 178.827 593.558 181.294 cv
590.846 183.762 582.056 185.178 576.536 180.264 cv
573.468 177.534 572.241 174.123 571.599 170.975 cv
569.508 173.829 567.989 175.784 563.405 176.769 cv
560.06 177.487 556.355 175.791 555.596 172.589 cv
.67451 .831373 .968627 rgb
f
571.599 170.439 mo
571.714 170.452 li
571.92 170.497 572.082 170.66 572.124 170.868 cv
572.632 173.36 573.679 177.003 576.892 179.864 cv
582.073 184.476 590.567 183.291 593.197 180.898 cv
595.82 178.512 597.558 173.284 596.845 169.929 cv
596.409 167.881 595.231 166.236 593.527 165.295 cv
591.953 164.426 590.073 164.253 588.498 164.831 cv
588.289 164.908 588.054 164.848 587.908 164.679 cv
587.762 164.511 587.736 164.269 587.842 164.073 cv
589.81 160.435 590.311 157.245 589.251 155.093 cv
588.506 153.58 587.019 152.634 584.832 152.281 cv
582.397 151.892 579.843 153.001 577.239 155.586 cv
577.085 155.739 576.852 155.784 576.652 155.699 cv
576.451 155.613 576.322 155.415 576.326 155.197 cv
576.377 152.092 574.091 146.925 570.25 145.561 cv
566.794 144.334 562.489 145.65 559.284 148.916 cv
559.121 149.082 558.87 149.124 558.664 149.021 cv
558.456 148.919 558.338 148.694 558.371 148.464 cv
558.653 146.519 557.955 144.419 556.549 142.983 cv
555.357 141.766 553.637 140.889 551.435 140.378 cv
548.155 139.617 545.095 139.97 542.817 141.374 cv
540.154 143.013 538.673 146.288 539.372 148.991 cv
539.413 149.148 539.38 149.315 539.283 149.445 cv
539.186 149.575 539.035 149.654 538.873 149.66 cv
538.311 149.681 537.747 149.692 537.183 149.704 cv
534.693 149.754 532.34 149.801 530.147 150.641 cv
527.76 151.555 525.232 153.848 524.963 156.91 cv
524.83 158.431 525.456 160.056 526.597 161.151 cv
527.485 162.001 528.553 162.395 529.599 162.258 cv
529.886 162.221 530.149 162.417 530.197 162.702 cv
530.244 162.986 530.058 163.257 529.775 163.314 cv
525.652 164.154 522.567 168.992 523.425 173.271 cv
523.846 175.37 525.198 177.265 527.132 178.471 cv
528.961 179.612 531.094 179.981 532.986 179.483 cv
535.035 178.943 536.779 177.605 538.799 176.057 cv
539.473 175.54 540.17 175.006 540.912 174.477 cv
541.053 174.376 541.233 174.35 541.397 174.406 cv
541.56 174.462 541.687 174.594 541.736 174.759 cv
542.603 177.658 543.453 178.953 546.2 178.966 cv
546.215 178.966 li
549.089 178.966 554.14 175.241 555.088 172.418 cv
555.164 172.191 555.386 172.042 555.62 172.054 cv
555.859 172.065 556.062 172.232 556.117 172.465 cv
556.835 175.494 560.409 176.865 563.293 176.245 cv
567.779 175.282 569.2 173.343 571.167 170.658 cv
571.269 170.519 571.43 170.439 571.599 170.439 cv
585.811 184.086 mo
582.552 184.086 578.986 183.162 576.18 180.664 cv
573.202 178.013 571.963 174.772 571.333 172.235 cv
569.585 174.553 567.833 176.366 563.518 177.293 cv
560.161 178.012 556.861 176.554 555.533 173.958 cv
553.731 176.934 549.159 180.037 546.214 180.037 cv
546.196 180.037 li
543.088 180.023 541.862 178.537 540.936 175.783 cv
540.426 176.16 539.933 176.538 539.451 176.907 cv
537.428 178.459 535.516 179.924 533.259 180.518 cv
531.083 181.091 528.643 180.676 526.565 179.38 cv
524.381 178.019 522.854 175.869 522.375 173.482 cv
521.542 169.333 523.865 164.867 527.473 163.005 cv
526.899 162.764 526.353 162.401 525.856 161.924 cv
524.485 160.61 523.735 158.653 523.896 156.816 cv
524.205 153.294 527.066 150.674 529.764 149.64 cv
532.132 148.733 534.689 148.682 537.161 148.632 cv
537.509 148.626 537.856 148.619 538.203 148.609 cv
537.759 145.613 539.415 142.21 542.255 140.461 cv
544.775 138.909 548.122 138.508 551.677 139.334 cv
554.081 139.892 555.978 140.868 557.315 142.234 cv
558.646 143.594 559.419 145.399 559.5 147.25 cv
562.868 144.368 567.108 143.307 570.609 144.551 cv
574.287 145.857 576.902 150.319 577.335 154.029 cv
579.912 151.762 582.486 150.818 585.002 151.224 cv
587.516 151.628 589.318 152.803 590.212 154.619 cv
591.319 156.866 591.001 159.994 589.329 163.513 cv
590.895 163.259 592.586 163.551 594.045 164.357 cv
596.025 165.45 597.392 167.35 597.893 169.706 cv
598.687 173.441 596.83 179.041 593.919 181.691 cv
592.459 183.018 589.313 184.086 585.811 184.086 cv
0 0 0 rgb
f
537.933 191.501 mo
537.927 190.624 538.672 189.908 539.597 189.902 cv
540.522 189.895 541.277 190.601 541.283 191.478 cv
541.289 192.355 540.544 193.072 539.619 193.078 cv
538.694 193.084 537.94 192.378 537.933 191.501 cv
cp
f
561.006 195.217 mo
561 194.34 561.744 193.624 562.669 193.618 cv
563.594 193.611 564.349 194.317 564.355 195.194 cv
564.361 196.072 563.616 196.788 562.691 196.794 cv
561.766 196.801 561.012 196.095 561.006 195.217 cv
cp
f
552.129 221.752 mo
551.102 221.752 550.076 221.574 549.109 221.204 cv
548.832 221.099 548.694 220.789 548.799 220.513 cv
548.905 220.236 549.213 220.097 549.491 220.203 cv
552.155 221.22 555.337 220.587 557.409 218.627 cv
557.624 218.423 557.963 218.433 558.167 218.648 cv
558.37 218.863 558.361 219.202 558.146 219.405 cv
556.533 220.931 554.331 221.752 552.129 221.752 cv
cp
f
549.014 212.596 mo
547.667 212.596 546.239 212.235 544.764 211.522 cv
544.144 211.222 543.449 210.827 542.987 210.164 cv
542.395 209.315 542.279 208.141 542.668 206.943 cv
542.943 206.094 543.413 205.353 543.868 204.637 cv
544.074 204.31 li
546.513 200.415 548.047 195.939 548.511 191.367 cv
548.541 191.073 548.804 190.856 549.098 190.888 cv
549.393 190.917 549.607 191.18 549.577 191.475 cv
549.097 196.21 547.508 200.845 544.983 204.879 cv
544.773 205.211 li
544.335 205.902 543.921 206.554 543.687 207.273 cv
543.407 208.137 543.473 208.988 543.865 209.551 cv
544.187 210.011 544.735 210.318 545.23 210.557 cv
546.671 211.253 548.044 211.576 549.311 211.517 cv
550.752 211.45 552.092 210.836 552.897 209.875 cv
553.087 209.648 553.424 209.618 553.651 209.808 cv
553.878 209.998 553.908 210.336 553.719 210.563 cv
552.71 211.768 551.122 212.506 549.36 212.588 cv
549.246 212.593 549.13 212.596 549.014 212.596 cv
cp
f
638.171 372.971 mo
626.653 372.971 609.683 370.647 593.087 368.375 cv
583.741 367.096 574.913 365.887 567.442 365.151 cv
567.148 365.122 566.933 364.86 566.962 364.565 cv
566.991 364.27 567.25 364.054 567.548 364.085 cv
575.038 364.823 583.876 366.032 593.232 367.314 cv
616.814 370.543 643.541 374.201 650.079 370.012 cv
655.552 366.505 659.299 361.252 659.628 356.628 cv
660.006 351.298 658.962 339.036 657.935 334.113 cv
653.77 314.15 638.397 268.871 632.968 262.758 cv
627.659 256.781 619.502 254.345 612.274 252.531 cv
601.565 249.844 590.58 247.826 579.617 246.531 cv
577.961 251.734 574.34 258.873 566.45 264.209 cv
564.858 265.288 562.977 264.374 561.319 263.57 cv
561.01 263.42 560.707 263.272 560.414 263.143 cv
560.276 263.082 559.742 262.988 559.225 262.898 cv
556.452 262.414 550.683 261.407 547.874 257.142 cv
546.388 254.884 545.969 252.033 546.625 248.658 cv
536.65 250.314 527.203 253.143 517.774 257.299 cv
513.739 259.077 509.217 261.399 506.272 265.138 cv
503.624 268.5 502.368 272.811 501.26 276.614 cv
494.926 298.352 489.061 320.54 483.827 342.562 cv
483.759 342.85 483.469 343.029 483.182 342.959 cv
482.894 342.891 482.717 342.602 482.785 342.314 cv
488.023 320.275 493.893 298.069 500.231 276.314 cv
501.367 272.418 502.653 268.001 505.43 264.475 cv
508.521 260.551 513.186 258.15 517.342 256.318 cv
527.1 252.018 536.877 249.125 547.231 247.474 cv
547.409 247.445 547.586 247.508 547.708 247.639 cv
547.83 247.77 547.878 247.953 547.836 248.127 cv
547.025 251.545 547.339 254.38 548.77 256.553 cv
551.323 260.431 556.785 261.385 559.409 261.843 cv
560.206 261.982 560.6 262.054 560.847 262.163 cv
561.152 262.297 561.467 262.45 561.787 262.606 cv
563.254 263.317 564.77 264.052 565.85 263.322 cv
573.699 258.014 577.184 250.859 578.724 245.792 cv
578.8 245.544 579.041 245.386 579.299 245.415 cv
590.455 246.713 601.637 248.757 612.535 251.492 cv
619.918 253.345 628.258 255.841 633.769 262.047 cv
639.783 268.818 655.067 315.12 658.984 333.894 cv
660.023 338.878 661.08 351.3 660.697 356.704 cv
660.345 361.654 656.404 367.231 650.657 370.914 cv
648.361 372.385 643.952 372.971 638.171 372.971 cv
f
561.321 270.251 mo
558.437 284.565 555.735 298.937 553.214 313.36 cv
552.787 315.803 552.363 318.301 552.581 320.787 cv
552.888 324.291 554.428 327.403 555.93 330.378 cv
557.763 334.012 559.596 337.646 562.064 341.251 cv
565.002 334.571 567.628 327.674 569.866 320.667 cv
570.625 304.693 565.415 289.16 564.994 273.166 cv
564.968 272.177 564.95 271.137 564.552 270.283 cv
564.154 269.43 563.229 268.876 561.321 270.251 cv
.67451 .831373 .968627 rgb
f
561.803 270.567 mo
558.95 284.746 556.238 299.174 553.742 313.452 cv
553.347 315.714 552.899 318.278 553.115 320.741 cv
553.419 324.212 555.007 327.36 556.408 330.137 cv
558.068 333.427 559.78 336.821 561.964 340.141 cv
564.762 333.701 567.24 327.122 569.334 320.572 cv
569.741 311.802 568.313 302.985 566.932 294.458 cv
565.809 287.522 564.647 280.35 564.459 273.18 cv
564.457 273.114 li
564.433 272.195 564.408 271.243 564.067 270.509 cv
563.928 270.213 563.748 270.04 563.515 269.979 cv
563.12 269.875 562.516 270.084 561.803 270.567 cv
562.064 341.786 mo
561.888 341.786 561.722 341.7 561.622 341.553 cv
559.134 337.919 557.262 334.208 555.451 330.62 cv
554.006 327.756 552.369 324.511 552.047 320.834 cv
551.819 318.232 552.28 315.595 552.687 313.268 cv
555.196 298.91 557.924 284.401 560.795 270.145 cv
560.822 270.013 560.898 269.895 561.008 269.816 cv
562.088 269.037 563.021 268.743 563.785 268.942 cv
564.331 269.084 564.764 269.47 565.037 270.057 cv
565.474 270.993 565.501 272.058 565.528 273.087 cv
565.529 273.152 li
565.716 280.25 566.872 287.386 567.99 294.287 cv
569.384 302.891 570.825 311.788 570.401 320.693 cv
570.376 320.83 li
568.169 327.742 565.538 334.685 562.554 341.467 cv
562.476 341.644 562.307 341.766 562.114 341.784 cv
562.064 341.786 li
0 0 0 rgb
f
567.495 365.154 mo
567.268 365.154 567.058 365.009 566.985 364.781 cv
566.895 364.499 567.05 364.198 567.332 364.107 cv
570.972 362.941 572.443 360.005 572.249 354.291 cv
571.823 341.715 569.846 340.406 569.25 340.304 cv
568.98 340.258 568.789 340.016 568.806 339.742 cv
568.823 339.469 569.043 339.253 569.317 339.24 cv
571.537 339.142 li
590.352 338.311 611.637 337.371 624.843 335.758 cv
622.623 328.815 620.5 322.468 618.445 316.324 cv
616.296 309.899 614.074 303.257 611.761 295.99 cv
611.671 295.708 611.827 295.407 612.109 295.317 cv
612.391 295.227 612.692 295.383 612.782 295.665 cv
615.093 302.924 617.314 309.563 619.461 315.984 cv
621.578 322.313 623.766 328.857 626.061 336.047 cv
626.109 336.199 626.087 336.364 626.002 336.498 cv
625.916 336.632 625.775 336.721 625.617 336.741 cv
612.423 338.409 590.727 339.368 571.584 340.213 cv
570.894 340.244 li
571.894 341.667 573.014 345.213 573.32 354.255 cv
573.461 358.427 572.946 363.434 567.659 365.128 cv
567.495 365.154 li
f
397.232 308.288 mo
490.31 308.798 li
522.391 374.689 li
428.491 375.235 li
397.232 308.288 li
cp
1 1 1 rgb
f
398.076 308.829 mo
428.831 374.697 li
521.537 374.158 li
489.974 309.332 li
398.076 308.829 li
cp
428.491 375.771 mo
428.282 375.771 428.093 375.651 428.005 375.462 cv
396.747 308.515 li
396.669 308.349 396.683 308.154 396.782 307.999 cv
396.88 307.846 397.05 307.753 397.233 307.753 cv
397.235 307.753 li
490.313 308.262 li
490.517 308.263 490.702 308.38 490.791 308.564 cv
522.873 374.455 li
522.953 374.62 522.943 374.815 522.846 374.972 cv
522.749 375.128 522.578 375.224 522.394 375.225 cv
428.494 375.771 li
428.491 375.771 li
cp
0 0 0 rgb
f
456.106 335.137 mo
453.464 334.878 450.576 335.584 449.5 338.011 cv
448.424 340.438 449.249 343.479 451.209 345.269 cv
453.17 347.058 456.07 347.634 458.66 347.052 cv
460.059 346.737 461.445 346.059 462.25 344.872 cv
462.809 344.049 463.046 343.037 463.053 342.042 cv
463.075 338.775 461.585 335.674 456.106 335.137 cv
cp
1 1 1 rgb
f
455.11 335.625 mo
453.553 335.625 450.983 335.988 449.99 338.228 cv
449.038 340.373 449.703 343.168 451.571 344.873 cv
453.319 346.469 455.99 347.104 458.542 346.529 cv
460.016 346.197 461.176 345.502 461.807 344.571 cv
462.385 343.719 462.512 342.723 462.517 342.039 cv
462.543 338.183 460.429 336.099 456.053 335.67 cv
455.831 335.648 455.502 335.625 455.11 335.625 cv
cp
456.678 347.807 mo
454.484 347.807 452.368 347.052 450.848 345.664 cv
448.65 343.658 447.877 340.348 449.01 337.794 cv
450.046 335.459 452.719 334.268 456.158 334.603 cv
462.337 335.21 463.609 338.986 463.589 342.046 cv
463.58 343.241 463.271 344.322 462.694 345.173 cv
461.688 346.655 460.008 347.297 458.777 347.574 cv
458.081 347.731 457.375 347.807 456.678 347.807 cv
cp
0 0 0 rgb
f
564.973 262.93 mo
563.707 262.009 561.999 262.086 560.63 262.653 cv
558.616 263.487 556.914 264.67 556.539 266.818 cv
556.443 267.368 557.503 269.66 558.049 270.489 cv
558.695 271.471 560.335 273.262 561.755 273.378 cv
562.967 273.477 564.093 272.759 565.001 271.949 cv
566.643 270.484 567.983 268.309 567.459 266.172 cv
567.145 264.888 566.229 263.842 564.973 262.93 cv
.67451 .831373 .968627 rgb
f
562.691 262.77 mo
562.026 262.77 561.372 262.926 560.836 263.148 cv
558.516 264.108 557.354 265.268 557.067 266.91 cv
557.049 267.31 557.916 269.315 558.496 270.195 cv
559.164 271.209 560.675 272.752 561.799 272.844 cv
562.663 272.914 563.589 272.491 564.644 271.549 cv
565.333 270.934 567.537 268.737 566.939 266.299 cv
566.682 265.253 565.936 264.292 564.658 263.363 cv
564.07 262.935 563.375 262.77 562.691 262.77 cv
561.987 273.923 mo
561.894 273.923 561.803 273.92 561.711 273.912 cv
559.934 273.766 558.142 271.605 557.601 270.784 cv
557.148 270.097 555.864 267.564 556.011 266.725 cv
556.474 264.077 558.752 262.85 560.426 262.158 cv
562.18 261.432 563.998 261.558 565.288 262.496 cv
566.78 263.581 567.66 264.741 567.98 266.044 cv
568.479 268.081 567.499 270.438 565.357 272.349 cv
564.173 273.406 563.067 273.923 561.987 273.923 cv
0 0 0 rgb
f
537.105 365.236 mo
536.694 365.236 536.241 365.084 535.752 364.67 cv
534.733 363.808 535.418 362.182 535.643 361.647 cv
536.001 360.797 536.588 360.101 537.168 359.476 cv
539.051 357.445 541.288 355.688 543.831 354.241 cv
542.451 354.058 540.942 354.672 539.811 355.303 cv
537.553 356.563 535.534 358.299 533.581 359.979 cv
532.591 360.831 531.566 361.712 530.515 362.529 cv
530.01 362.921 529.463 363.319 528.808 363.506 cv
527.986 363.741 527.149 363.567 526.623 363.05 cv
526.252 362.685 526.034 362.158 525.991 361.526 cv
525.888 359.987 526.813 358.624 527.518 357.733 cv
531.699 352.446 536.11 349.503 541 348.734 cv
541.294 348.688 541.567 348.888 541.613 349.18 cv
541.659 349.472 541.459 349.746 541.167 349.792 cv
536.555 350.517 532.365 353.332 528.358 358.398 cv
527.764 359.15 526.982 360.285 527.061 361.454 cv
527.085 361.816 527.196 362.111 527.374 362.286 cv
527.621 362.528 528.068 362.604 528.513 362.476 cv
528.985 362.341 529.418 362.024 529.857 361.683 cv
530.888 360.882 531.902 360.01 532.883 359.166 cv
534.876 357.452 536.937 355.68 539.289 354.367 cv
540.965 353.432 543.392 352.548 545.435 353.646 cv
545.61 353.74 545.719 353.923 545.717 354.122 cv
545.715 354.321 545.603 354.502 545.427 354.594 cv
542.534 356.088 540.02 357.976 537.953 360.204 cv
537.44 360.758 536.924 361.367 536.63 362.064 cv
536.105 363.313 536.288 363.72 536.444 363.852 cv
537.085 364.395 537.419 364.185 538.177 363.614 cv
538.228 363.575 li
541.185 361.096 544.173 359.053 547.34 357.349 cv
548.403 356.776 549.782 356.196 551.011 356.797 cv
552.459 357.505 556.618 359.103 563.924 358.642 cv
566.622 358.471 569.429 358.843 572.263 359.742 cv
572.545 359.832 572.701 360.133 572.612 360.415 cv
572.522 360.697 572.222 360.853 571.939 360.763 cv
569.232 359.904 566.56 359.551 563.991 359.712 cv
556.427 360.188 552.065 358.505 550.54 357.76 cv
549.75 357.372 548.685 357.841 547.847 358.292 cv
544.746 359.962 541.817 361.964 538.894 364.414 cv
538.821 364.471 li
538.383 364.8 537.803 365.236 537.105 365.236 cv
f
524.339 364.503 mo
524.135 364.503 523.935 364.473 523.745 364.414 cv
522.639 364.066 522.163 362.846 522.086 361.822 cv
521.905 359.388 523.2 357.133 524.19 355.649 cv
527.516 350.66 530.955 347.511 534.409 346.29 cv
534.688 346.191 534.994 346.338 535.093 346.617 cv
535.191 346.896 535.045 347.202 534.766 347.3 cv
531.535 348.442 528.276 351.451 525.081 356.243 cv
524.18 357.596 522.999 359.638 523.155 361.743 cv
523.203 362.386 523.471 363.204 524.067 363.391 cv
524.375 363.488 524.776 363.403 525.14 363.165 cv
525.506 362.924 525.803 362.576 526.153 362.145 cv
526.339 361.915 526.677 361.879 526.906 362.067 cv
527.136 362.253 527.171 362.591 526.984 362.82 cv
526.663 363.216 526.262 363.71 525.728 364.06 cv
525.285 364.352 524.802 364.503 524.339 364.503 cv
cp
f
521.514 361.805 mo
520.962 361.805 520.394 361.633 519.912 361.295 cv
518.349 360.2 520.289 354.421 521.933 351.707 cv
525.641 345.587 530.374 341.17 535.623 338.931 cv
538.353 337.128 550.222 340.737 555.224 342.382 cv
556.479 342.795 558.137 343.276 559.839 343.329 cv
564.217 343.465 569.853 343.542 571.327 343.312 cv
571.617 343.269 571.894 343.467 571.939 343.76 cv
571.985 344.052 571.784 344.326 571.492 344.371 cv
569.497 344.682 561.407 344.449 559.805 344.399 cv
557.967 344.342 556.213 343.835 554.89 343.4 cv
546.809 340.743 537.895 338.611 536.196 339.838 cv
536.091 339.897 li
531.103 342.01 526.4 346.401 522.849 352.262 cv
520.86 355.546 520.003 359.928 520.53 360.42 cv
521.041 360.779 521.727 360.837 522.193 360.559 cv
522.447 360.408 522.777 360.491 522.928 360.745 cv
523.08 360.999 522.997 361.328 522.743 361.48 cv
522.377 361.698 521.95 361.805 521.514 361.805 cv
f
547.646 244.613 mo
550.108 250.649 555.391 259.006 560.765 262.231 cv
557.841 264.788 554.172 268.811 548.022 273.387 cv
545.857 262.545 543.611 257.385 542.306 248.91 cv
543.716 247.861 545.89 245.668 547.646 244.613 cv
1 1 1 rgb
f
542.884 249.142 mo
543.57 253.474 544.49 256.896 545.553 260.843 cv
546.429 264.098 547.416 267.763 548.378 272.449 cv
552.336 269.441 555.223 266.696 557.568 264.467 cv
558.413 263.663 559.166 262.946 559.879 262.302 cv
554.976 259.01 550.02 251.55 547.399 245.411 cv
546.477 246.049 545.457 246.939 544.54 247.74 cv
543.946 248.258 543.381 248.752 542.884 249.142 cv
548.022 273.923 mo
547.83 273.888 li
547.658 273.822 547.532 273.672 547.497 273.492 cv
546.487 268.438 545.441 264.551 544.518 261.122 cv
543.422 257.049 542.476 253.532 541.776 248.992 cv
541.746 248.795 541.827 248.598 541.986 248.48 cv
542.507 248.092 543.152 247.529 543.835 246.933 cv
544.964 245.948 546.243 244.831 547.37 244.153 cv
547.504 244.073 547.667 244.055 547.815 244.104 cv
547.964 244.154 548.083 244.266 548.142 244.41 cv
550.724 250.741 555.983 258.737 561.04 261.772 cv
561.187 261.86 561.283 262.013 561.298 262.183 cv
561.314 262.354 561.246 262.522 561.117 262.634 cv
560.263 263.382 559.356 264.244 558.306 265.243 cv
555.809 267.617 552.702 270.572 548.342 273.817 cv
548.248 273.887 548.135 273.923 548.022 273.923 cv
0 0 0 rgb
f
564.433 262.203 mo
567.497 266.064 570.561 269.925 574.249 273.888 cv
578.709 265.179 583.221 256.198 585.252 246.626 cv
583.343 245.741 579.191 242.996 577.281 242.111 cv
577.836 244.146 578.969 245.985 578.698 246.626 cv
578.525 247.035 569.211 257.717 564.433 262.203 cv
1 1 1 rgb
f
565.157 262.254 mo
567.926 265.742 570.795 269.337 574.121 272.96 cv
578.136 265.119 582.578 256.296 584.64 246.923 cv
583.665 246.429 582.309 245.617 580.993 244.829 cv
580.022 244.248 579.029 243.653 578.199 243.192 cv
578.341 243.573 578.491 243.941 578.632 244.285 cv
579.116 245.473 579.436 246.257 579.192 246.835 cv
578.951 247.405 569.951 257.664 565.157 262.254 cv
574.249 274.423 mo
574.101 274.423 573.959 274.362 573.857 274.252 cv
570.159 270.279 567.04 266.349 564.024 262.55 cv
563.851 262.331 563.863 262.003 564.066 261.813 cv
568.75 257.416 577.58 247.284 578.208 246.4 cv
578.238 246.156 577.893 245.311 577.64 244.69 cv
577.342 243.961 577.005 243.134 576.764 242.252 cv
576.71 242.051 576.776 241.836 576.936 241.702 cv
577.095 241.568 577.318 241.538 577.507 241.625 cv
578.487 242.08 580.041 243.01 581.543 243.91 cv
583.021 244.794 584.548 245.709 585.478 246.14 cv
585.704 246.245 585.828 246.493 585.776 246.737 cv
583.667 256.674 578.917 265.949 574.726 274.132 cv
574.646 274.287 574.495 274.394 574.322 274.418 cv
574.249 274.423 li
0 0 0 rgb
f
428.375 375.365 mo
428.172 375.362 428.01 375.122 428.012 374.827 cv
428.015 374.531 428.182 374.292 428.386 374.293 cv
511.425 374.711 595.624 374.029 678.644 372.267 cv
678.84 372.272 679.014 372.499 679.015 372.795 cv
679.016 373.091 678.852 373.334 678.648 373.339 cv
595.624 375.101 511.421 375.782 428.377 375.365 cv
428.375 375.365 li
f
532.867 341.5 mo
532.602 341.5 532.371 341.303 532.336 341.033 cv
530.305 325.384 524.586 308.995 516.646 296.069 cv
516.492 295.816 516.57 295.487 516.823 295.332 cv
517.075 295.177 517.405 295.255 517.56 295.508 cv
525.576 308.558 531.349 325.101 533.399 340.895 cv
533.437 341.189 533.23 341.457 532.937 341.496 cv
532.867 341.5 li
cp
f
506.359 342.297 mo
506.259 342.297 506.159 342.27 506.069 342.212 cv
505.82 342.052 505.749 341.72 505.909 341.471 cv
511.688 332.516 518.916 320.73 523.544 308.993 cv
523.653 308.718 523.965 308.583 524.24 308.691 cv
524.515 308.8 524.65 309.111 524.541 309.387 cv
519.878 321.211 512.615 333.055 506.81 342.052 cv
506.707 342.211 506.535 342.297 506.359 342.297 cv
cp
f
533.899 366.766 mo
533.894 366.766 li
533.598 366.763 533.36 366.521 533.363 366.225 cv
533.435 358.957 li
533.438 358.661 533.691 358.421 533.977 358.426 cv
534.273 358.429 534.51 358.671 534.507 358.967 cv
534.435 366.236 li
534.432 366.53 534.192 366.766 533.899 366.766 cv
cp
f
578.577 199.383 mo
578.451 199.368 li
578.163 199.298 577.986 199.009 578.056 198.721 cv
578.512 196.832 578.715 195.819 579.083 193.98 cv
579.142 193.69 579.425 193.503 579.714 193.56 cv
580.004 193.618 580.192 193.901 580.134 194.191 cv
579.763 196.043 579.559 197.063 579.097 198.973 cv
579.038 199.218 578.818 199.383 578.577 199.383 cv
cp
f
625.186 336.784 mo
624.901 336.784 624.664 336.559 624.651 336.271 cv
624.639 335.975 624.869 335.725 625.164 335.713 cv
628.35 335.578 631.587 335.491 634.784 335.453 cv
634.79 335.453 li
635.083 335.453 635.323 335.688 635.326 335.982 cv
635.33 336.278 635.093 336.521 634.797 336.524 cv
631.61 336.562 628.385 336.65 625.209 336.784 cv
625.186 336.784 li
cp
f
653.297 298.451 mo
653.015 298.451 652.78 298.233 652.762 297.948 cv
652.744 297.653 652.969 297.399 653.264 297.381 cv
662.897 296.792 672.676 296.617 682.328 296.858 cv
682.624 296.865 682.858 297.111 682.85 297.407 cv
682.843 297.698 682.604 297.929 682.315 297.929 cv
682.301 297.929 li
672.679 297.689 662.932 297.863 653.33 298.45 cv
653.297 298.451 li
cp
f
657.052 307.326 mo
656.762 307.326 656.523 307.093 656.517 306.8 cv
656.511 306.504 656.747 306.26 657.042 306.254 cv
677.734 305.853 li
678.039 305.853 678.274 306.083 678.28 306.379 cv
678.286 306.674 678.051 306.919 677.755 306.925 cv
657.063 307.326 li
657.052 307.326 li
cp
f
667.805 345.681 mo
667.52 345.681 667.283 345.456 667.27 345.168 cv
667.258 344.873 667.487 344.623 667.783 344.61 cv
678.44 344.151 li
678.724 344.137 678.985 344.368 678.998 344.663 cv
679.011 344.959 678.782 345.209 678.486 345.222 cv
667.829 345.681 li
667.805 345.681 li
f
587.867 261.002 mo
587.75 260.989 li
587.461 260.924 587.279 260.637 587.344 260.349 cv
587.933 257.724 588.421 255.045 588.794 252.384 cv
588.835 252.091 589.11 251.887 589.399 251.928 cv
589.692 251.969 589.896 252.239 589.855 252.532 cv
589.478 255.222 588.985 257.931 588.39 260.583 cv
588.333 260.832 588.112 261.002 587.867 261.002 cv
cp
f
593.5 257.051 mo
593.451 257.049 li
593.157 257.022 592.939 256.762 592.966 256.467 cv
593.389 251.788 li
593.416 251.493 593.68 251.278 593.971 251.302 cv
594.266 251.329 594.483 251.589 594.456 251.884 cv
594.033 256.564 li
594.008 256.842 593.774 257.051 593.5 257.051 cv
cp
f
587.367 177.918 mo
587.147 177.918 586.94 177.781 586.862 177.562 cv
586.763 177.283 586.909 176.977 587.187 176.878 cv
589.961 175.89 591.964 173.036 591.95 170.092 cv
591.948 169.796 592.187 169.555 592.483 169.554 cv
592.485 169.554 li
592.78 169.554 593.02 169.792 593.021 170.087 cv
593.037 173.471 590.735 176.752 587.547 177.887 cv
587.367 177.918 li
cp
f
566.865 344.506 mo
566.809 344.503 li
566.515 344.472 566.301 344.209 566.331 343.915 cv
566.392 343.329 566.493 342.742 566.632 342.169 cv
566.764 341.62 566.972 340.915 567.406 340.327 cv
567.893 339.665 568.611 339.259 569.326 339.24 cv
569.341 339.24 li
569.63 339.24 569.868 339.471 569.876 339.762 cv
569.884 340.058 569.65 340.304 569.354 340.311 cv
568.968 340.322 568.561 340.565 568.268 340.963 cv
567.95 341.395 567.789 341.942 567.673 342.421 cv
567.546 342.947 567.453 343.487 567.397 344.025 cv
567.368 344.301 567.136 344.506 566.865 344.506 cv
f
567.364 365.017 mo
566.948 365.017 566.53 364.801 566.24 364.435 cv
566.011 364.146 565.889 363.817 565.792 363.504 cv
565.384 362.186 565.268 360.767 565.458 359.4 cv
565.499 359.107 565.769 358.902 566.062 358.943 cv
566.356 358.983 566.56 359.254 566.519 359.547 cv
566.351 360.76 566.453 362.018 566.816 363.187 cv
566.882 363.4 566.96 363.618 567.079 363.77 cv
567.163 363.876 567.277 363.946 567.363 363.946 cv
567.377 363.946 li
567.668 363.946 567.906 364.179 567.912 364.471 cv
567.918 364.767 567.683 365.012 567.387 365.017 cv
567.364 365.017 li
f
546.352 182.688 mo
545.308 182.688 544.278 182.435 543.405 181.825 cv
542.339 180.979 541.533 179.849 540.899 178.636 cv
540.664 178.873 540.417 179.1 540.16 179.314 cv
538.608 180.641 536.765 181.548 534.859 182.248 cv
534.655 182.347 534.452 182.391 534.258 182.391 cv
533.656 182.391 533.138 181.968 532.933 181.433 cv
532.966 181.176 532.997 180.919 533.025 180.662 cv
533.028 180.633 533.031 180.603 533.035 180.574 cv
533.11 180.556 533.185 180.538 533.259 180.518 cv
535.516 179.924 537.428 178.459 539.451 176.907 cv
539.933 176.538 540.426 176.16 540.936 175.783 cv
541.862 178.537 543.088 180.023 546.196 180.037 cv
546.214 180.037 li
549.159 180.037 553.731 176.934 555.533 173.958 cv
556.632 176.107 559.082 177.476 561.798 177.476 cv
562.363 177.476 562.94 177.417 563.518 177.293 cv
567.833 176.366 569.585 174.553 571.333 172.235 cv
571.44 172.667 571.565 173.12 571.714 173.586 cv
571.602 173.79 571.486 173.991 571.361 174.187 cv
571.419 174.091 571.483 173.946 571.481 173.946 cv
571.48 173.946 571.462 173.981 571.421 174.074 cv
570.833 175.181 569.979 176.127 569.064 176.974 cv
567.573 178.287 565.786 179.241 563.916 179.895 cv
562.684 180.319 561.404 180.66 560.095 180.66 cv
560.041 180.66 559.986 180.66 559.932 180.659 cv
559.825 180.655 559.719 180.649 559.613 180.64 cv
559.752 180.631 li
559.741 180.631 559.73 180.631 559.719 180.631 cv
558.65 180.631 557.59 180.225 556.73 179.598 cv
556.109 179.116 555.599 178.499 555.203 177.817 cv
554.386 178.736 553.453 179.545 552.471 180.285 cv
551.47 180.973 550.799 181.525 549.041 182.175 cv
548.197 182.493 547.269 182.688 546.352 182.688 cv
.870588 .870588 .870588 rgb
f
532.933 181.433 mo
532.833 181.172 532.808 180.885 532.884 180.607 cv
532.935 180.596 532.985 180.585 533.035 180.574 cv
533.031 180.603 533.028 180.633 533.025 180.662 cv
532.997 180.919 532.966 181.176 532.933 181.433 cv
0 0 0 rgb
f
569.629 172.657 mo
569.731 172.489 569.786 172.396 569.822 172.328 cv
569.912 172.25 570.002 172.171 570.091 172.092 cv
569.939 172.285 569.785 172.474 569.629 172.657 cv
.588235 .72549 .843137 rgb
f
532.884 180.607 mo
532.94 180.403 533.051 180.205 533.226 180.026 cv
533.72 179.498 534.535 179.438 535.166 179.12 cv
536.075 178.752 536.966 178.33 537.796 177.806 cv
537.864 177.764 li
538.013 177.67 li
538.177 177.565 538.341 177.461 538.5 177.349 cv
538.908 177.068 539.242 176.689 539.636 176.39 cv
539.67 176.353 li
539.663 176.357 li
539.746 176.267 li
539.857 176.136 li
539.982 175.978 540.098 175.813 540.198 175.638 cv
540.437 175.282 540.879 175.077 541.303 175.077 cv
541.329 175.077 541.354 175.077 541.38 175.079 cv
541.412 175.084 li
541.573 175.67 541.815 176.228 542.113 176.764 cv
542.249 177.002 li
542.302 177.082 li
542.336 177.171 li
542.42 177.38 542.511 177.586 542.639 177.771 cv
542.878 178.116 543.171 178.372 543.536 178.548 cv
543.838 178.805 544.223 178.977 544.619 179.059 cv
544.723 179.18 li
544.803 179.26 li
544.907 179.347 545.014 179.431 545.125 179.508 cv
545.267 179.591 li
545.369 179.632 545.487 179.668 545.582 179.695 cv
545.924 179.758 546.27 179.795 546.617 179.795 cv
546.631 179.795 546.645 179.795 546.659 179.795 cv
546.682 179.794 li
548.226 179.642 549.984 178.711 550.864 178.128 cv
550.967 178.056 li
551.038 177.996 551.463 177.69 551.616 177.564 cv
552.412 176.915 553.214 176.262 553.942 175.536 cv
554.117 175.337 554.28 175.13 554.433 174.914 cv
554.533 174.236 555.019 173.546 555.743 173.543 cv
555.786 173.537 555.829 173.534 555.872 173.534 cv
556.543 173.534 557.151 174.216 557.072 174.892 cv
557.061 174.99 557.039 175.085 557.012 175.178 cv
557.024 175.237 li
557.058 175.326 li
557.212 175.397 li
557.253 175.392 557.295 175.39 557.336 175.39 cv
557.523 175.39 557.708 175.437 557.87 175.531 cv
557.973 175.577 558.084 175.626 558.14 175.651 cv
559.107 176.043 560.349 176.391 560.67 176.391 cv
560.679 176.391 560.686 176.391 560.693 176.391 cv
560.673 176.388 560.652 176.385 560.631 176.382 cv
560.921 176.415 561.211 176.425 561.502 176.425 cv
561.705 176.425 561.909 176.42 562.113 176.415 cv
562.316 176.411 562.519 176.406 562.721 176.406 cv
562.818 176.406 562.915 176.407 563.012 176.41 cv
563.141 176.402 li
563.368 176.36 li
563.454 176.333 563.539 176.321 563.623 176.321 cv
564.002 176.321 564.334 176.578 564.484 176.913 cv
565.744 176.36 567.052 175.543 568.449 174.191 cv
568.813 173.78 569.165 173.356 569.477 172.904 cv
569.537 172.807 569.587 172.726 569.629 172.657 cv
569.785 172.474 569.939 172.285 570.091 172.092 cv
570.459 171.765 570.818 171.43 571.168 171.085 cv
571.722 171.102 572.266 171.478 572.277 172.146 cv
572.33 172.432 572.178 172.692 572.052 172.939 cv
571.942 173.156 571.83 173.373 571.714 173.586 cv
571.565 173.12 571.44 172.667 571.333 172.235 cv
569.585 174.553 567.833 176.366 563.518 177.293 cv
562.94 177.417 562.363 177.476 561.798 177.476 cv
559.082 177.476 556.632 176.107 555.533 173.958 cv
553.731 176.934 549.159 180.037 546.214 180.037 cv
546.196 180.037 li
543.088 180.023 541.862 178.537 540.936 175.783 cv
540.426 176.16 539.933 176.538 539.451 176.907 cv
537.428 178.459 535.516 179.924 533.259 180.518 cv
533.185 180.538 533.11 180.556 533.035 180.574 cv
532.985 180.585 532.935 180.596 532.884 180.607 cv
560.631 176.382 mo
560.56 176.374 560.488 176.365 560.416 176.353 cv
560.488 176.363 560.56 176.373 560.631 176.382 cv
0 0 0 rgb
f
581.448 189.804 mo
581.097 189.804 580.833 189.695 580.635 189.515 cv
580.773 187.384 580.759 185.557 580.75 184.402 cv
580.749 184.262 li
580.746 183.944 580.748 183.619 580.753 183.288 cv
581.149 183.421 581.548 183.535 581.949 183.633 cv
581.976 183.679 581.999 183.727 582.021 183.776 cv
582.15 183.754 582.28 183.743 582.412 183.738 cv
583.552 183.979 584.7 184.086 585.811 184.086 cv
587.643 184.086 589.378 183.794 590.825 183.325 cv
590.664 183.863 590.5 184.404 590.332 184.95 cv
590.211 184.991 li
590.01 185.058 li
589.16 185.417 588.328 185.821 587.513 186.253 cv
585.941 187.139 584.347 188.026 583.501 188.617 cv
583.31 188.72 582.6 189.284 582.542 189.284 cv
582.538 189.284 582.537 189.281 582.541 189.275 cv
582.316 189.517 582.054 189.721 581.719 189.784 cv
581.623 189.797 581.533 189.804 581.448 189.804 cv
.588235 .72549 .843137 rgb
f
590.332 184.95 mo
590.5 184.404 590.664 183.863 590.825 183.325 cv
590.857 183.314 590.89 183.304 590.921 183.293 cv
590.95 183.339 590.978 183.388 591.002 183.442 cv
591.264 183.991 591.002 184.677 590.442 184.912 cv
590.332 184.95 li
0 0 0 rgb
f
579.679 184.521 mo
579.678 184.516 579.677 184.511 579.676 184.505 cv
579.638 184.335 579.641 184.17 579.676 184.016 cv
579.676 184.101 579.677 184.185 579.677 184.269 cv
579.678 184.411 li
579.679 184.447 579.679 184.483 579.679 184.521 cv
.870588 .870588 .870588 rgb
f
580.635 189.515 mo
580.04 188.971 580.051 187.773 580.088 186.929 cv
580.028 186.116 579.847 185.317 579.679 184.521 cv
579.679 184.483 579.679 184.447 579.678 184.411 cv
579.677 184.269 li
579.677 184.185 579.676 184.101 579.676 184.016 cv
579.762 183.637 580.042 183.325 580.389 183.16 cv
580.51 183.205 580.631 183.247 580.753 183.288 cv
580.748 183.619 580.746 183.944 580.749 184.262 cv
580.75 184.402 li
580.759 185.557 580.773 187.384 580.635 189.515 cv
0 0 0 rgb
f
585.811 184.086 mo
584.7 184.086 583.552 183.979 582.412 183.738 cv
582.715 183.726 583.023 183.742 583.322 183.711 cv
583.143 183.721 583.068 183.725 583.058 183.725 cv
583.044 183.725 583.175 183.717 583.325 183.708 cv
583.303 183.709 li
584.113 183.669 584.907 183.503 585.706 183.373 cv
586.789 183.208 587.888 183.166 588.968 182.974 cv
589.285 182.914 589.638 182.836 589.968 182.836 cv
590.347 182.836 590.695 182.939 590.921 183.293 cv
590.89 183.304 590.857 183.314 590.825 183.325 cv
589.378 183.794 587.643 184.086 585.811 184.086 cv
581.949 183.633 mo
581.548 183.535 581.149 183.421 580.753 183.288 cv
580.631 183.247 580.51 183.205 580.389 183.16 cv
580.559 183.08 580.746 183.035 580.933 183.035 cv
581.167 183.035 581.402 183.104 581.61 183.262 cv
581.76 183.363 581.868 183.49 581.949 183.633 cv
f
575.877 243.208 mo
575.651 243.207 575.426 243.126 575.268 242.962 cv
574.895 242.917 574.514 242.74 574.165 242.646 cv
573.778 242.498 573.396 242.337 573.016 242.173 cv
572.839 242.146 572.641 242.117 572.524 242.115 cv
572.402 242.101 572.28 242.082 572.158 242.063 cv
572.288 242.069 572.419 242.074 572.549 242.08 cv
571.136 241.997 569.737 241.691 568.382 241.286 cv
564.43 240.15 553.565 236.566 547.889 234.68 cv
547.789 234.663 547.696 234.637 547.611 234.603 cv
547.546 233.844 547.477 233.087 547.404 232.329 cv
548.265 232.492 549.135 232.614 550.01 232.692 cv
550.203 232.709 550.397 232.724 550.59 232.737 cv
550.802 232.801 551.014 232.864 551.226 232.927 cv
551.26 232.875 551.297 232.825 551.339 232.777 cv
551.69 232.791 552.042 232.798 552.392 232.798 cv
555.318 232.798 558.206 232.322 560.879 231.428 cv
560.912 231.434 560.945 231.442 560.978 231.451 cv
561.617 231.214 562.247 230.954 562.878 230.699 cv
565.055 229.743 565.876 229.215 566.155 229.102 cv
566.276 229.029 li
566.262 228.98 566.25 228.932 566.242 228.882 cv
567.571 228.029 568.785 227.049 569.849 225.953 cv
570.342 225.445 570.81 224.86 571.254 224.215 cv
572.475 228.572 573.735 232.678 574.914 236.422 cv
575.008 236.752 575.104 237.082 575.202 237.411 cv
575.536 238.599 575.936 239.768 576.333 240.935 cv
576.37 241.068 576.423 241.209 576.479 241.356 cv
576.561 241.613 576.642 241.868 576.723 242.122 cv
576.79 242.497 576.729 242.847 576.325 243.091 cv
576.189 243.169 576.033 243.208 575.877 243.208 cv
.870588 .870588 .870588 rgb
f
576.723 242.122 mo
576.642 241.868 576.561 241.613 576.479 241.356 cv
576.574 241.606 576.678 241.87 576.723 242.122 cv
574.914 236.422 mo
573.735 232.678 572.475 228.572 571.254 224.215 cv
571.274 224.186 571.293 224.157 571.313 224.128 cv
571.317 224.164 571.324 224.201 571.335 224.24 cv
571.87 226.151 572.539 228.018 573.243 229.872 cv
573.731 232.072 574.292 234.254 574.914 236.422 cv
547.611 234.603 mo
546.665 234.226 546.563 232.864 547.346 232.318 cv
547.365 232.322 547.384 232.326 547.404 232.329 cv
547.477 233.087 547.546 233.844 547.611 234.603 cv
0 0 0 rgb
f
552.392 232.798 mo
552.042 232.798 551.69 232.791 551.339 232.777 cv
551.463 232.636 551.621 232.519 551.814 232.441 cv
551.845 232.44 551.877 232.44 551.908 232.44 cv
552.053 232.44 552.199 232.441 552.345 232.441 cv
552.497 232.442 552.65 232.442 552.803 232.442 cv
554.596 232.442 556.382 232.382 557.999 231.551 cv
558.627 231.541 559.255 231.529 559.882 231.495 cv
560.064 231.476 560.17 231.466 560.185 231.466 cv
560.186 231.466 560.187 231.466 560.187 231.466 cv
560.3 231.45 560.413 231.434 560.527 231.419 cv
560.442 231.43 560.357 231.442 560.272 231.453 cv
560.392 231.421 560.512 231.405 560.631 231.405 cv
560.714 231.405 560.797 231.413 560.879 231.428 cv
558.206 232.322 555.318 232.798 552.392 232.798 cv
550.59 232.737 mo
550.397 232.724 550.203 232.709 550.01 232.692 cv
549.135 232.614 548.265 232.492 547.404 232.329 cv
547.384 232.326 547.365 232.322 547.346 232.318 cv
547.481 232.224 547.643 232.154 547.831 232.118 cv
547.935 232.097 548.039 232.087 548.144 232.087 cv
548.364 232.087 548.583 232.129 548.802 232.188 cv
548.864 232.398 549.02 232.57 549.254 232.57 cv
549.276 232.57 549.298 232.569 549.321 232.566 cv
549.49 232.544 549.659 232.526 549.829 232.511 cv
549.924 232.538 li
550.146 232.605 550.368 232.671 550.59 232.737 cv
566.242 228.882 mo
566.218 228.737 566.219 228.588 566.249 228.442 cv
566.463 228.322 li
567.125 227.74 567.787 227.158 568.409 226.534 cv
568.717 226.226 569.015 225.909 569.298 225.579 cv
569.602 225.227 569.927 224.861 570.156 224.455 cv
570.231 224.322 570.235 224.167 570.188 224.03 cv
570.367 223.915 570.574 223.861 570.78 223.861 cv
570.963 223.861 571.146 223.903 571.311 223.984 cv
571.307 224.03 571.307 224.078 571.313 224.128 cv
571.293 224.157 571.274 224.186 571.254 224.215 cv
570.81 224.86 570.342 225.445 569.849 225.953 cv
568.785 227.049 567.571 228.029 566.242 228.882 cv
f
563.804 277.278 mo
563.736 277.278 563.668 277.272 563.599 277.258 cv
563.077 277.249 562.779 276.798 562.456 276.457 cv
562.206 276.184 561.729 275.846 560.871 275.235 cv
560.965 274.757 561.06 274.281 561.155 273.804 cv
561.34 273.86 561.525 273.897 561.711 273.912 cv
561.803 273.92 561.894 273.923 561.987 273.923 cv
562.788 273.923 563.604 273.639 564.455 273.06 cv
564.456 273.078 564.456 273.096 564.457 273.114 cv
564.459 273.18 li
564.491 274.423 564.553 275.665 564.639 276.907 cv
564.419 277.132 564.124 277.278 563.804 277.278 cv
.588235 .72549 .843137 rgb
f
564.639 276.907 mo
564.553 275.665 564.491 274.423 564.459 273.18 cv
564.457 273.114 li
564.456 273.096 564.456 273.078 564.455 273.06 cv
564.577 272.977 564.7 272.888 564.823 272.793 cv
565.092 273.021 565.249 273.397 565.147 273.903 cv
564.939 274.519 565.099 274.676 565.023 275.814 cv
565.076 276.215 564.916 276.624 564.639 276.907 cv
560.871 275.235 mo
560.842 275.215 560.813 275.194 560.784 275.173 cv
560.102 274.784 560.007 274 560.299 273.422 cv
560.577 273.585 560.865 273.717 561.155 273.804 cv
561.06 274.281 560.965 274.757 560.871 275.235 cv
0 0 0 rgb
f
561.982 272.852 mo
561.921 272.852 561.859 272.849 561.799 272.844 cv
561.641 272.831 561.475 272.79 561.306 272.725 cv
561.335 272.723 561.364 272.722 561.394 272.722 cv
561.468 272.722 561.545 272.728 561.624 272.742 cv
561.749 272.759 561.871 272.798 561.99 272.851 cv
561.988 272.851 561.985 272.852 561.982 272.852 cv
.588235 .72549 .843137 rgb
f
561.987 273.923 mo
561.894 273.923 561.803 273.92 561.711 273.912 cv
561.525 273.897 561.34 273.86 561.155 273.804 cv
560.865 273.717 560.577 273.585 560.299 273.422 cv
560.489 273.046 560.843 272.758 561.306 272.725 cv
561.475 272.79 561.641 272.831 561.799 272.844 cv
561.859 272.849 561.921 272.852 561.982 272.852 cv
561.985 272.852 561.988 272.851 561.99 272.851 cv
562.336 273.007 562.658 273.291 562.968 273.562 cv
563.078 272.86 563.594 272.535 564.1 272.535 cv
564.364 272.535 564.624 272.624 564.823 272.793 cv
564.7 272.888 564.577 272.977 564.455 273.06 cv
563.604 273.639 562.788 273.923 561.987 273.923 cv
0 0 0 rgb
f
573.161 275.19 mo
573.093 275.19 573.023 275.184 572.951 275.171 cv
572.305 275.015 571.365 274.564 570.148 273.886 cv
568.887 273.094 567.625 272.312 566.323 271.592 cv
566.278 271.566 566.237 271.539 566.198 271.51 cv
567.299 270.277 567.952 268.917 568.083 267.606 cv
569.881 269.798 571.777 272.018 573.857 274.252 cv
573.951 274.354 574.08 274.414 574.216 274.422 cv
574.055 274.849 573.675 275.19 573.161 275.19 cv
.870588 .870588 .870588 rgb
f
565.79 270.314 mo
565.861 270.02 566.036 269.752 566.287 269.586 cv
566.13 269.848 565.961 270.091 565.79 270.314 cv
566.841 268.381 mo
566.843 268.202 566.89 268.026 566.971 267.866 cv
566.938 268.041 566.894 268.213 566.841 268.381 cv
.588235 .72549 .843137 rgb
f
566.198 271.51 mo
565.797 271.213 565.687 270.737 565.79 270.314 cv
565.961 270.091 566.13 269.848 566.287 269.586 cv
566.449 269.479 566.644 269.415 566.865 269.415 cv
566.93 269.415 566.999 269.421 567.069 269.433 cv
567.183 269.434 567.286 269.47 567.386 269.516 cv
567.256 269.327 567.125 269.139 567.001 268.946 cv
566.888 268.766 566.839 268.571 566.841 268.381 cv
566.894 268.213 566.938 268.041 566.971 267.866 cv
567.132 267.552 567.427 267.304 567.774 267.229 cv
567.877 267.355 567.98 267.481 568.083 267.606 cv
567.952 268.917 567.299 270.277 566.198 271.51 cv
0 0 0 rgb
f
574.216 274.422 mo
574.08 274.414 573.951 274.354 573.857 274.252 cv
571.777 272.018 569.881 269.798 568.083 267.606 cv
567.98 267.481 567.877 267.355 567.774 267.229 cv
567.845 267.214 567.917 267.206 567.991 267.206 cv
568.092 267.206 568.197 267.221 568.302 267.254 cv
568.73 267.355 568.979 267.728 569.174 268.093 cv
569.388 268.438 569.641 268.758 569.885 269.082 cv
570.169 269.546 571.297 270.758 572.309 271.674 cv
572.73 272.14 573.403 272.426 573.73 272.964 cv
574.29 273.292 574.406 273.918 574.216 274.422 cv
f
549.862 273.694 mo
549.536 273.694 549.233 273.541 549.017 273.309 cv
551.849 271.158 554.134 269.145 556.065 267.355 cv
556.318 268.451 557.234 270.227 557.601 270.784 cv
557.645 270.851 557.698 270.928 557.758 271.011 cv
557.544 271.241 557.244 271.387 556.928 271.387 cv
556.841 271.387 556.752 271.376 556.664 271.352 cv
556.516 271.466 556.338 271.557 556.12 271.617 cv
555.275 271.822 554.402 271.924 553.579 272.217 cv
552.145 272.798 551.222 273.092 550.429 273.531 cv
550.24 273.644 550.047 273.694 549.862 273.694 cv
.870588 .870588 .870588 rgb
f
557.758 271.011 mo
557.698 270.928 557.645 270.851 557.601 270.784 cv
557.234 270.227 556.318 268.451 556.065 267.355 cv
556.16 267.266 556.255 267.178 556.349 267.091 cv
556.383 267.114 556.417 267.14 556.451 267.168 cv
556.745 267.344 556.836 267.696 557 267.977 cv
557.346 268.512 557.609 269.087 557.912 269.645 cv
558.202 270.15 558.074 270.672 557.758 271.011 cv
0 0 0 rgb
f
548.765 272.153 mo
548.806 272.048 548.866 271.945 548.948 271.845 cv
549.258 271.501 549.673 271.286 550.106 271.101 cv
549.673 271.448 549.226 271.798 548.765 272.153 cv
.870588 .870588 .870588 rgb
f
549.017 273.309 mo
548.736 273.006 548.603 272.567 548.765 272.153 cv
549.226 271.798 549.673 271.448 550.106 271.101 cv
550.448 270.954 550.802 270.826 551.124 270.667 cv
551.607 270.437 552.095 270.225 552.592 270.035 cv
552.622 269.885 552.679 269.734 552.771 269.586 cv
552.781 269.565 li
552.856 269.371 552.799 269.243 553.36 268.639 cv
553.699 268.295 553.997 267.853 554.488 267.725 cv
554.605 267.705 li
554.786 267.246 555.25 266.903 555.744 266.903 cv
555.946 266.903 556.154 266.961 556.349 267.091 cv
556.255 267.178 556.16 267.266 556.065 267.355 cv
554.134 269.145 551.849 271.158 549.017 273.309 cv
0 0 0 rgb
f
567.626 364.008 mo
567.552 363.968 567.467 363.946 567.377 363.946 cv
567.363 363.946 li
567.277 363.946 567.163 363.876 567.079 363.77 cv
566.96 363.618 566.882 363.4 566.816 363.187 cv
566.47 362.072 566.361 360.876 566.498 359.716 cv
567.129 359.756 567.766 359.826 568.406 359.926 cv
568.455 360.003 li
568.462 359.981 568.47 359.959 568.478 359.937 cv
569.437 360.09 570.404 360.308 571.376 360.592 cv
570.978 361.491 570.441 362.223 569.757 362.807 cv
569.746 362.807 569.735 362.806 569.725 362.806 cv
569.567 362.806 569.42 362.843 569.282 362.915 cv
568.933 363.048 568.713 363.295 568.605 363.581 cv
568.299 363.741 567.973 363.883 567.626 364.008 cv
571.743 359.583 mo
570.75 359.29 569.761 359.062 568.779 358.9 cv
569 357.997 569.178 356.946 569.405 355.767 cv
569.528 354.455 569.515 353.132 569.544 351.815 cv
569.541 349.915 569.343 348.025 569.15 346.138 cv
569.011 345.478 568.895 344.962 568.775 344.519 cv
569.819 344.502 570.71 344.466 571.278 344.4 cv
571.716 346.478 572.09 349.601 572.249 354.291 cv
572.322 356.425 572.162 358.171 571.743 359.583 cv
567.469 343.458 mo
567.522 343.11 567.59 342.762 567.673 342.421 cv
567.789 341.942 567.95 341.395 568.268 340.963 cv
568.547 340.584 568.929 340.345 569.299 340.314 cv
569.653 340.405 570.377 340.912 571.028 343.35 cv
570.294 343.423 569.01 343.455 567.469 343.458 cv
567.689 339.997 mo
567.811 339.854 567.957 339.732 568.121 339.641 cv
567.968 339.742 567.823 339.862 567.689 339.997 cv
.870588 .870588 .870588 rgb
f
568.109 364.412 mo
568.04 364.412 567.972 364.406 567.905 364.394 cv
567.878 364.226 567.771 364.084 567.626 364.008 cv
567.973 363.883 568.299 363.741 568.605 363.581 cv
568.516 363.816 568.504 364.078 568.559 364.325 cv
568.517 364.341 568.473 364.356 568.427 364.367 cv
568.321 364.397 568.214 364.412 568.109 364.412 cv
570.052 362.825 mo
569.956 362.819 569.86 362.813 569.764 362.807 cv
569.762 362.807 569.759 362.807 569.757 362.807 cv
570.441 362.223 570.978 361.491 571.376 360.592 cv
571.407 360.601 571.438 360.61 571.469 360.619 cv
571.422 360.727 571.374 360.835 571.324 360.941 cv
570.981 361.619 570.536 362.24 570.052 362.825 cv
571.858 359.617 mo
571.82 359.606 571.781 359.594 571.743 359.583 cv
572.162 358.171 572.322 356.425 572.249 354.291 cv
572.09 349.601 571.716 346.478 571.278 344.4 cv
571.355 344.391 571.427 344.381 571.492 344.371 cv
571.656 344.346 571.79 344.249 571.869 344.118 cv
572.123 345.045 572.249 346.005 572.325 346.965 cv
572.63 349.62 572.722 352.296 572.703 354.967 cv
572.637 356.535 572.371 358.124 571.858 359.617 cv
571.627 343.353 mo
571.559 343.323 571.484 343.306 571.407 343.306 cv
571.381 343.306 571.354 343.308 571.327 343.312 cv
571.242 343.326 571.142 343.338 571.028 343.35 cv
570.377 340.912 569.653 340.405 569.299 340.314 cv
569.317 340.313 569.336 340.312 569.354 340.311 cv
569.602 340.305 569.806 340.132 569.861 339.902 cv
570.09 340.138 570.263 340.44 570.434 340.72 cv
570.925 341.478 571.242 342.333 571.56 343.175 cv
571.583 343.234 571.605 343.294 571.627 343.353 cv
0 0 0 rgb
f
571.469 360.619 mo
571.438 360.61 571.407 360.601 571.376 360.592 cv
570.404 360.308 569.437 360.09 568.478 359.937 cv
568.59 359.618 568.688 359.271 568.779 358.9 cv
569.761 359.062 570.75 359.29 571.743 359.583 cv
571.781 359.594 571.82 359.606 571.858 359.617 cv
571.741 359.956 571.612 360.291 571.469 360.619 cv
568.406 359.926 mo
567.766 359.826 567.129 359.756 566.498 359.716 cv
566.504 359.659 566.511 359.603 566.519 359.547 cv
566.548 359.339 566.454 359.142 566.291 359.031 cv
566.477 358.919 566.69 358.853 566.917 358.853 cv
567.09 358.853 567.272 358.891 567.456 358.976 cv
567.879 359.106 568.092 359.537 568.361 359.855 cv
568.406 359.926 li
f
568.775 344.519 mo
568.7 344.241 568.624 343.993 568.539 343.756 cv
568.395 343.829 568.233 343.865 568.071 343.865 cv
567.844 343.865 567.617 343.794 567.441 343.656 cv
567.45 343.59 567.46 343.524 567.469 343.458 cv
569.01 343.455 570.294 343.423 571.028 343.35 cv
571.142 343.338 571.242 343.326 571.327 343.312 cv
571.354 343.308 571.381 343.306 571.407 343.306 cv
571.484 343.306 571.559 343.323 571.627 343.353 cv
571.718 343.605 571.799 343.86 571.869 344.118 cv
571.79 344.249 571.656 344.346 571.492 344.371 cv
571.427 344.381 571.355 344.391 571.278 344.4 cv
570.71 344.466 569.819 344.502 568.775 344.519 cv
f
567.441 343.656 mo
567.265 343.517 567.14 343.31 567.116 343.038 cv
567.043 342.576 567.371 342.161 567.526 341.736 cv
567.518 341.723 li
567.16 341.136 567.297 340.457 567.689 339.997 cv
567.823 339.862 567.968 339.742 568.121 339.641 cv
568.327 339.526 568.561 339.459 568.808 339.459 cv
568.94 339.459 569.076 339.478 569.213 339.519 cv
569.478 339.58 569.686 339.722 569.861 339.902 cv
569.806 340.132 569.602 340.305 569.354 340.311 cv
569.336 340.312 569.317 340.313 569.299 340.314 cv
568.929 340.345 568.547 340.584 568.268 340.963 cv
567.95 341.395 567.789 341.942 567.673 342.421 cv
567.59 342.762 567.522 343.11 567.469 343.458 cv
567.46 343.524 567.45 343.59 567.441 343.656 cv
f
567.905 364.394 mo
567.454 364.316 567.057 363.984 566.911 363.547 cv
566.721 363.455 566.553 363.315 566.445 363.113 cv
566.323 362.883 566.269 362.614 566.305 362.355 cv
566.307 362.256 566.318 362.158 566.335 362.061 cv
566.338 362.024 li
566.335 362.045 li
566.354 361.901 566.358 361.755 566.351 361.61 cv
566.335 361.557 li
566.268 361.449 li
565.998 361.14 li
565.307 360.464 565.615 359.44 566.291 359.031 cv
566.454 359.142 566.548 359.339 566.519 359.547 cv
566.511 359.603 566.504 359.659 566.498 359.716 cv
566.361 360.876 566.47 362.072 566.816 363.187 cv
566.882 363.4 566.96 363.618 567.079 363.77 cv
567.163 363.876 567.277 363.946 567.363 363.946 cv
567.377 363.946 li
567.467 363.946 567.552 363.968 567.626 364.008 cv
567.771 364.084 567.878 364.226 567.905 364.394 cv
f
647.963 372.326 mo
647.896 372.249 647.838 372.164 647.789 372.074 cv
648.95 371.773 649.914 371.39 650.657 370.914 cv
651.084 370.64 651.502 370.356 651.908 370.062 cv
652.041 370.058 652.175 370.053 652.308 370.048 cv
652.682 369.644 652.88 369.42 653.13 369.125 cv
657.512 365.562 660.398 360.907 660.697 356.704 cv
661.018 352.182 660.33 342.744 659.487 336.864 cv
659.517 336.862 659.547 336.861 659.577 336.861 cv
659.635 336.861 659.693 336.865 659.751 336.872 cv
659.562 336.239 659.373 335.606 659.189 334.971 cv
659.121 334.583 659.052 334.222 658.984 333.894 cv
657.419 326.395 654.041 314.503 650.164 302.494 cv
652.646 309.163 655.188 315.808 657.814 322.422 cv
661.504 331.715 665.274 340.976 669.227 350.16 cv
669.876 352.191 670.494 354.249 671.385 356.733 cv
672.025 358.581 672.766 360.394 673.398 362.245 cv
673.883 363.719 674.294 365.22 674.879 366.659 cv
675.143 367.267 675.439 367.861 675.745 368.449 cv
676.082 369.166 676.537 369.879 676.628 370.675 cv
676.643 371.178 676.416 371.558 676.073 371.823 cv
673.418 371.835 670.754 371.862 668.089 371.899 cv
667.993 371.836 667.902 371.757 667.816 371.659 cv
667.639 371.721 667.452 371.755 667.265 371.755 cv
667.253 371.755 667.242 371.755 667.231 371.754 cv
667.195 371.809 667.156 371.862 667.115 371.913 cv
660.696 372.01 654.278 372.165 647.963 372.326 cv
673.171 369.038 mo
672.973 369.351 672.673 369.596 672.319 369.694 cv
672.696 369.698 673.091 369.706 673.519 369.717 cv
673.396 369.484 673.283 369.26 673.171 369.038 cv
667.767 354.684 mo
667.832 355.25 667.894 355.815 667.956 356.38 cv
668.123 356.439 668.277 356.539 668.415 356.655 cv
668.29 356.292 668.168 355.928 668.05 355.563 cv
667.953 355.271 667.86 354.977 667.767 354.684 cv
.870588 .870588 .870588 rgb
f
650.717 372.818 mo
650.688 372.731 li
650.254 372.753 649.844 372.766 649.478 372.766 cv
649.285 372.766 649.104 372.762 648.939 372.755 cv
648.933 372.755 648.927 372.755 648.921 372.755 cv
648.512 372.755 648.186 372.583 647.963 372.326 cv
654.278 372.165 660.696 372.01 667.115 371.913 cv
667.081 371.955 667.045 371.996 667.008 372.036 cv
662.332 372.058 657.681 372.261 653.023 372.68 cv
652.602 372.718 652.18 372.758 651.759 372.799 cv
651.413 372.806 651.062 372.812 650.717 372.818 cv
668.346 372.031 mo
668.257 371.996 668.172 371.953 668.089 371.899 cv
670.754 371.862 673.418 371.835 676.073 371.823 cv
676.052 371.839 676.031 371.855 676.009 371.87 cv
675.482 371.896 674.954 371.919 674.427 371.938 cv
672.401 372.01 670.373 372.023 668.346 372.031 cv
0 0 0 rgb
f
624.4 372.226 mo
623.805 372.195 623.211 372.152 622.618 372.089 cv
622.111 371.982 621.657 371.99 621.268 371.924 cv
622.327 372.031 623.373 372.132 624.4 372.226 cv
638.294 371.894 mo
631.621 371.894 623.015 371.104 613.864 370.016 cv
613.839 369.961 613.818 369.904 613.801 369.846 cv
611.435 369.683 608.146 369.13 607.364 368.991 cv
605.745 368.853 604.125 368.72 602.506 368.572 cv
599.396 368.158 596.288 367.732 593.232 367.314 cv
584.686 366.143 576.573 365.033 569.524 364.287 cv
570.612 363.621 571.401 362.761 571.969 361.783 cv
572.057 361.772 572.147 361.768 572.238 361.768 cv
572.368 361.768 572.499 361.776 572.631 361.784 cv
572.762 361.793 572.894 361.801 573.024 361.801 cv
573.086 361.801 573.147 361.799 573.208 361.794 cv
575.641 361.82 576.766 362.071 578.608 362.289 cv
579.633 362.361 585.232 363.392 588.054 363.863 cv
588.749 364.008 591.566 364.263 593.484 364.472 cv
596.178 364.806 597.229 364.998 600.255 365.276 cv
603.628 365.627 607.043 365.62 610.352 366.443 cv
614.186 367.188 619.808 367.276 624.844 367.454 cv
628.304 367.675 631.755 368.068 635.222 368.16 cv
635.566 368.17 635.91 368.174 636.254 368.174 cv
638.077 368.174 639.907 368.058 641.728 368.035 cv
642.755 367.762 643.771 367.449 644.782 367.123 cv
648.108 366.039 649.901 365.347 652.93 363.188 cv
654.309 362.24 656.362 360.386 658.153 358.497 cv
658.279 358.346 li
658.319 358.292 li
658.851 357.474 658.785 357.52 659.12 356.333 cv
659.208 355.975 659.208 355.573 659.5 355.307 cv
659.559 355.247 659.624 355.196 659.694 355.155 cv
659.681 355.689 659.66 356.183 659.628 356.628 cv
659.299 361.252 655.552 366.505 650.079 370.012 cv
647.978 371.358 643.792 371.894 638.294 371.894 cv
659.189 343.79 mo
658.892 342.17 658.558 340.474 658.208 338.595 cv
658.069 338.107 658.204 337.674 658.477 337.363 cv
658.741 339.254 658.987 341.487 659.189 343.79 cv
648.127 299.746 mo
647.35 297.677 646.609 295.597 645.955 293.485 cv
645.926 293.391 645.913 293.297 645.913 293.207 cv
646.657 295.358 647.398 297.545 648.127 299.746 cv
.870588 .870588 .870588 rgb
f
635.866 372.585 mo
633.74 372.585 631.618 372.426 629.495 372.349 cv
627.797 372.297 626.096 372.313 624.4 372.226 cv
623.373 372.132 622.327 372.031 621.268 371.924 cv
620.854 371.854 620.514 371.7 620.26 371.237 cv
618.477 371.063 616.701 370.831 614.915 370.692 cv
614.91 370.692 614.905 370.693 614.9 370.693 cv
614.396 370.693 614.038 370.397 613.864 370.016 cv
623.015 371.104 631.621 371.894 638.294 371.894 cv
643.792 371.894 647.978 371.358 650.079 370.012 cv
655.552 366.505 659.299 361.252 659.628 356.628 cv
659.66 356.183 659.681 355.689 659.694 355.155 cv
659.857 355.058 660.044 355.012 660.23 355.012 cv
660.259 355.012 660.289 355.013 660.318 355.015 cv
660.131 355.929 659.924 356.839 659.7 357.744 cv
659.797 357.608 659.912 357.487 660.059 357.393 cv
660.185 357.287 660.327 357.211 660.476 357.15 cv
660.467 356.253 660.452 355.356 660.425 354.459 cv
660.317 350.511 659.839 347.332 659.189 343.79 cv
658.987 341.487 658.741 339.254 658.477 337.363 cv
658.731 337.073 659.105 336.889 659.487 336.864 cv
660.33 342.744 661.018 352.182 660.697 356.704 cv
660.398 360.907 657.512 365.562 653.13 369.125 cv
653.343 368.874 653.595 368.572 654.025 368.062 cv
654.594 367.295 655.159 366.521 655.702 365.733 cv
655.484 365.942 655.265 366.144 655.045 366.336 cv
653.665 367.717 652.023 369.069 650.3 370.091 cv
650.444 370.096 650.586 370.101 650.725 370.101 cv
650.873 370.101 651.017 370.096 651.154 370.082 cv
651.405 370.078 651.656 370.071 651.908 370.062 cv
651.502 370.356 651.084 370.64 650.657 370.914 cv
649.914 371.39 648.95 371.773 647.789 372.074 cv
647.673 371.857 647.613 371.61 647.616 371.364 cv
646.017 371.956 644.28 371.978 642.596 372.12 cv
640.599 372.319 638.603 372.56 636.594 372.579 cv
636.351 372.583 636.109 372.585 635.866 372.585 cv
602.506 368.572 mo
600.659 368.404 598.814 368.217 596.973 367.985 cv
593.434 367.426 589.938 367.311 585.589 366.388 cv
585.325 366.332 585.06 366.274 584.795 366.216 cv
584.678 366.418 584.494 366.589 584.229 366.691 cv
584.044 366.763 583.852 366.788 583.655 366.788 cv
583.184 366.788 582.69 366.642 582.227 366.64 cv
580.717 366.482 579.215 366.26 577.716 366.03 cv
575.65 365.687 572.724 365.457 569.764 365.307 cv
569.759 365.307 569.753 365.307 569.748 365.307 cv
569.271 365.307 568.916 365.059 568.715 364.718 cv
569.001 364.586 569.271 364.441 569.524 364.287 cv
576.573 365.033 584.686 366.143 593.232 367.314 cv
596.288 367.732 599.396 368.158 602.506 368.572 cv
659.189 334.971 mo
658.931 334.084 658.683 333.193 658.456 332.297 cv
656.7 324.848 654.5 317.508 652.116 310.238 cv
650.856 306.716 649.441 303.249 648.127 299.746 cv
647.398 297.545 646.657 295.358 645.913 293.207 cv
645.915 292.846 646.137 292.53 646.439 292.358 cv
647.668 295.741 648.909 299.121 650.164 302.494 cv
654.041 314.503 657.419 326.395 658.984 333.894 cv
659.052 334.222 659.121 334.583 659.189 334.971 cv
0 0 0 rgb
f
568.715 364.718 mo
568.643 364.596 568.59 364.463 568.559 364.325 cv
568.998 364.149 569.235 363.688 569.577 363.375 cv
569.738 363.195 569.897 363.012 570.052 362.825 cv
570.303 362.84 570.555 362.854 570.807 362.869 cv
570.869 362.453 571.118 362.067 571.587 361.886 cv
571.71 361.83 571.838 361.799 571.969 361.783 cv
571.401 362.761 570.612 363.621 569.524 364.287 cv
569.271 364.441 569.001 364.586 568.715 364.718 cv
f
650.744 372.901 mo
650.717 372.818 li
651.062 372.812 651.413 372.806 651.759 372.799 cv
651.42 372.832 651.082 372.866 650.744 372.901 cv
f
568.605 363.581 mo
568.713 363.295 568.933 363.048 569.282 362.915 cv
569.42 362.843 569.567 362.806 569.725 362.806 cv
569.735 362.806 569.746 362.807 569.757 362.807 cv
569.411 363.102 569.027 363.359 568.605 363.581 cv
.756863 .756863 .756863 rgb
f
568.559 364.325 mo
568.504 364.078 568.516 363.816 568.605 363.581 cv
569.027 363.359 569.411 363.102 569.757 362.807 cv
569.759 362.807 569.762 362.807 569.764 362.807 cv
569.86 362.813 569.956 362.819 570.052 362.825 cv
569.897 363.012 569.738 363.195 569.577 363.375 cv
569.235 363.688 568.998 364.149 568.559 364.325 cv
0 0 0 rgb
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 26.0.1
%%For: ( ) ()
%%Title: (2112.w039.n003.36B.p1.36-temp_01.eps)
%%CreationDate: 12/4/2021 12:05 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb",KBj4M-oCqkQ^978A#mc+gS:(FIY_o^m\1\\^"%5HgZT+^5rh'.g?WHh\-NO9X&d@<S#aJ_sCTm#8Ci#g!WYA*kUP7u_Eu?2Y
%m2/=4GDqLNci;#)SsFPo7b8DKeO&RYW\h3NeO%c!/69sEH=JS6pcW!+CugZ@PC2M0<%_8Pbq,+NKbNa8>BBO?9''`_>!L7j1Z"),
%5^T+b^MH_")?AYFpfaLjDAAp`l5pbm:?h?SJ)]qg&%b]F8^!l39rr#@FWnF8//eI^]\eR+8r[FGh^hbX+",Gm\)tf.]2:.5+4+CP
%%fJ=P+(gh5_gJN?Pgs<-<qL6M14paI10ZV$)ViN2M+mop;#eX5Ae5(:J(#bD:R[jQ%c:J.46+CEgY5Ag_ib4qO`=Y&fMWa61D9aD
%_2AF+pS-,?3T#ej&8g<lEAQ(0JUc*4kf.^*gi2!<1=NDbAUMhIR"hM&:C]Pa<f6mIb<1dT`Mfrb2HOhbQ@@0uJk1]"'R6NUNp88J
%V'_m."ptP0)qACsQGZYW=3>e.B,VrgWa"iOlUOg9.'m)p!V^Z'+J*/NFh41E*n;3U^i4e((01(.YBZbihFul(VN^Q:):Pk-N&fq1
%):Q%l9M!o;k7eJ./N7g$H?9RLJb0X?Nb4boE3!;+.TPW.4U26#4[l!DohmLf:Z':tnqHfp';YV^qQF'ZTqL(t.XDo.[D056N'q<d
%Z)d$>4)UT1<:V?.d$!q(WWf-jb#5sA-gZM`77ZuWB&S*#=i[1"[Z.J^LTb-BYD\;WC>8O8[dg>6j&=]u:KLT,]6*X,2"Nj-jEYG$
%H"c>c.k>qm0LVBa7%9;;E;)%SZS4d'I#"n=[^_-*Mi6f1\;3or(XZi+"eVs!GTM'9=[@\*($R!%Q6j_3A5;q7?1mBh:#5=MRUKRu
%MItM-hQ;0[:#RVV?rQjCHe7JCcI`rIi[8OL?SRcf98:H`n<Na.DZIek0WX,2<e+f7)SVrjapMPQP^)_MBu-X=$=BX1ls;RmbEpc$
%r4I9&<4[qa5r7j>?SRcbV!M>M;[8(rcjY9N-S;9ZcIaAUi[8P=kQ"u?iW6nt1rCC)<=VsK7?B#M^mpi/Gk%5co[1bn"nu[WaO@Y]
%h9-"InZk!>=iT%5-;F+S[(ur(NFIOq?$7hB@upDBAjYh9UYnR%j"&hkK@F1*\`P/'T?JICY/sf[NM\dD]TA'`Kk:sG[Xrp1TAX$f
%(?G#Fotfkjan!hQcS*2Z!:m\u;2Z5[(!;iK(Bhhk/,Vn.3T5GO6esWo-@D\QQ10?$]&nQs'"N?U9q([;e(2$(:'5:[kiD.<9([/s
%P4d$SY]M`sKE'k:,q;X^a0Od$jBq`C3:_.]YPb*^Xt-1+?hraZnoOB*r!<H#3=+Wt"8+%.PE1lVjj1eqr1*[8J#N7mP(8^Fjj3M'
%r1*[8IuO/`P4LY#I$O;gTCl"N0D9'>MiPETZi[>/YNF9U8hQcd=6*_4H"Fr(ks*p0@e_/*rXp:arqK.9.%j%Qi!+(:`Erhf>XgOI
%-_KN&2oOlmiT>/WFOXti`fc)U&p;\+gAK'5DM:-)JJ1#W?C-Qcd%CER!Q]6QGHRFZAC:Fa-AU0Ym"T9F:<2?K83Ef*J,Nqo);TOL
%q<Otn(8RM[F*CcgN2OGN2=N:V]u(5%q;3#B7ZK3!MmR_&:R3Um!)3*cL6Crb;JVtciS\a8/09e_0Fe41gr7.nQI";i1)q@Z_5H'/
%4/2=W[,=0VQ5o@C8`N3>,t$rR;N'/j>0Qfc=HXW'h60@Jf1OVkOQWGo0288\P7Aal#'+`rZ5uFF91C>n`0OY$c<[!N7N;pP$E=/_
%2kq.LV5ql2kL:NI`/@OSP2JS7'1s3l'(V5;?B(b9d6"*T3,T3nd3,t&@IgUlNS:uc6I7#+D(*7HM@YD,BUArS?AL,O]GqC@2b[nH
%fAYpZ>oSIVL3`o(K19.6?<ZOLABFAiQY]`sc4(S2qLms;clii9aD&_XVREn,cqB%X&f:CsFq3T@/a4j$51"(q!Tnu1E[6Gt_D!A)
%;qBmM8]O?#LX_6#_ft:fB34)jl(?'e&M/EJbO!C`:=u18+ob6':T-U79[S68hJP(jM']@[BrHZjC$rqTbf4[f";G9r)+I795&hlH
%@_,Z=Qqu16Z;W>P22S41-4ILsP;XQ[<YAa+E`k8&#4(8aZE[ql'[\6qRf$q=0qO_JqAuHLPCt,\JGEba?.5+4-BWOiK=cFB4bZ)o
%-"AZ1(2>7,esqo49,?j'=P>Fo8bh)inl9V%D(Ee5/L59I0Hr-$KFjP2Bq?<N"JkN2F1RXc+p>PS>tmaG.J`5+2,,9jH,erh9dlV`
%-'_#>()q+R>m:iq<^alhfX2Ug]JL4V[\uJ9(*h*(BekS9i.@b5KK*-H-]@[s*1kMCN-eV3R?a#6B<6V4&*O)$Qs.\0'ibSK$--cZ
%eWtn)gp-+*,+BDW14)]JU/+=HMY>!9-"I^b0J.d"n&t+:OK`4Vi_nSq28KVMBFk6H#Oo>rF!ak_7?u/XE?QeeVKmk"g)2P$BIB08
%!\'j`[#W0@=M.`iD"L$`MPan'F=cEo_$1u"EuJ)Q[@GUVS).qT:"k;"U)4P`NS47u8]n?fKVIrYk(DK-X@W*)R'om:\6[:d8]"Sk
%-qW1@3DnA%@r,#fMD)&A:ml`'S\(48:h@89M,aoq59]04E=jN>,\Wq*D(RC4-J1^/eZ&=,3SW&2M':G9$/,TMfi)pU5^p#b2"F&%
%-;m]q@=F8]WqMbp;Pq.%9MmC$1^>:Qf>hCD*YY]6M3\q#<c,]UM4E2pP``?c&E?0BeNu$lDNQ[bdYl-0=po0S.ina'=]MPr2/VZA
%e$a?:=Xe6E=XH$fg-pWrHIcODY)Q;l*^O(*8"BjnVLF"D6"j_[`AF2XZ?DO1kF<GA77Ms$`3r6Ng.g(=];8peVS.g'o*KTh#FHKm
%,#k=CRD^#pEY9HD]f;E3]b8S0\daS?R't`@H<Nc$6PJc=i=I^O#ru_MX,00oPt7MaQ*G^7/<_LB"9U*1De%Jq?U(5F=(j`/<LU(t
%f[+DJQV/dF/H'L]/4EQRRlX#G+thSF(KQ/dNF&&bTcCG,e=I]Lh(fYDQT<b0OnhXSI,b(3\O("J:>7Sii'OA<bniu?WfVo),2:A*
%G-%1%j$\TE?n!*Z;#$+-_3K[uZr7T-2&(>T/0gI.\fi;5+YBj^24J(CeEe@Z9s"n+;LZ2TapR$0#-F[q@^aaQGZ,5-B>V\%>>OXW
%:P-=CPdor8l4n/5V%on7=3@#mT4;T!(.IWM19I/,@?RHsV6,Xj9cT#WOShg(.43n*(21:k?ou>7.DAI.*:/P0/C^O@'.2*3dr%a5
%_3S,.Ej4Kr>UPtJ?RE%Jf\VJb-;KJ>6IWqF/5rqAiG-&m?Fnef$M.unRj\UHbLkCRV+o0PC/qQaM8\&)\J5he9=&Pq9!u&b$VO"6
%1c(q-:pSmKrn@mZ=N<_I#h(?)1Y.IX90a=cYpJOJe0tj$cm4ofXH(`G&O.kEFA4;=;Uh4'?<U0@#q&1u_fKN,$"##YOheqW#$F]?
%OeVXo[[L*AQEp$g(8fVqMP,$)ZVVTR91`2J'VTSNXSMYd@R&/e[Zu%9''TK7-*_1<bf@(8`WqZ[).M-dP-bO(3tg_l^iJkJ7#CZ>
%Fm_kjFCZECEh[?W':S^]\HK)B\Kog!P]SJBg'n.(]b8SQlrNGF7'+=hd\M_cGA3*m*@ji_6p&;dje\s7m,)>U*@Y"$`_nWeKLT/=
%G064T6(:ofRs).b3^9J$[02;n9\Qf"M"?rjUVqqU&ed=7TPU*^KO6KE"&u>@Gj[uB/F,36Hp0t=b=X#bkulKUWs=Mpf0UW48`T8L
%:F==WV@GAZ2+t%>Zo$6o1<g2E3sW]lOn9W-j!_%:bs[N&Z)H.de8EIOC*<9)aX.lh(ShNn[MbB9UYUDkX,TM8b5a$-*nq)uHEKZ9
%kp(8/o^W[],%[[Lc!um;qQ/.Fi#6=RCC(d*G-#2;;dW.OjoMPc9c+58U'*oFVgPr7G+F\SdOPg;8^'Sp]B,s(f+cPNOt0D"ENi<`
%dY,Y%NFTdlinIk>2Ua)=!c4eKEDq+$[9;KmQB/67i:*@&4P*/g8b]tlg77b9bPh,[UK.k7bEX8D?.??AePfEpU!cBP@(,COEqMtO
%Rf'snm7,?$m2meG@DMkSPrb-Z.(/m6J"-"3YeOI]d>+dqC9+dD3NW5O^PQ4#H4XXo7>5?]?MY6K1Kt)kk_I:("IGrrp?MGTNBoeL
%D.`@8g>jO^Y*APN-mP?^?iEq&H^4S'd:'G3RLC=cjiY'2>cjh,Q?H=IEBC0ZC:&]C2r-X7NT.dd1e<%:V5[;a<3KhuM^?6m"g`>g
%Zhn[T=ZB_@*AjoU?TDK8f/k<]kC)EJ";5OE@FT[GPqa*Hj`9UaT!'0$$CQToX)XZ_X&dF6nE50?:Qtd:5=3]aP7fp:%ni0s<6sp>
%9$JcPVg;N6l"4Q%3*ubIBt=*SB<bH&^[j@X&#*PE\U%3N>]Bk\A%&o!Gr*j'2eeT6!b:B*3SH]Tk>C/%E#(`?3N<c4naQ*Z1+q3X
%?rpP+pX=b0\^WT5QCEJBkNgAjTcEHKD`"5R0Qd%\;ku:eo^nt@_DL>kh,gX-V/d7BYd<loR5t-.c,TTl[2@m"bj952"usb!r-)>I
%&9&Op^?*NiimdkT2HR*F^L+b-I+"g0>UgQU;2&5ARFsH\CMj$>heUYgi\9)%eIPi:g]BdeSZIu=<HBaW$E1\`f?Z!hU3YE?5I4n$
%l]UAAT3>uE,,3G1l(HRc)VgE<M+9b9TtYHA*]7-_AhQ*<8*o#+V7PD4OdbY6Q5VjplH(!YgfN77SXZt^^8jllFK<d4J*ZL!d\D!R
%ad=g<^2N<[hhY=udFT-gme:&UXCL2ch4*:D[*3#IWPPI\ogR_T[8ekJX(&[5rMZ@pHZqZMb&<GfV926NHHgk?B/aiSWd;,`nuM&$
%njRl8QXn=`g#\ZUc\BQFd(F'0@spl8EE"t[m\s7:,Bcu-5dp9&WS"jSmp9cgC;;VDU]4QoYF"#=n$d,,VeYYsfe):9p2f?LEIQg3
%^FUu1<0S0EDPkSHXjhL?^@+W]'OMdFjlY9O]gTNY/k(P`q7kOH407Ve-nT@<99#W$2g"0dmE@T"d[BF92Al:26XO`8!cR;G%=Pd\
%0DB7o)>\A4_3aK&9euA&L;$o^=gOQ82&`<=AYIoU,q1L5%?p<6Y\O_$`l:_pjSCN2)U78>oW?&M=S:7!998tJq#joWLQ1M1:N5fV
%epi/55CjPrWe?;nB]1E_Af!HejSX'0VPaW)n\>'Cq-[dOG-t:`Y$]'sBfj(D4R[@OD=hOkqWPrRl-n3K[dg,Zg\B1:cp4sBM[HS,
%^<U97(!5(*oWfBF]"jABrd0$4W3)CubP-$Qo)`[BhdTCT?d5A(HE21N5eDmLZ2a@bL>n?7C8K>%=*hHYZX]W\?iS*1?GuDa[;%#Q
%cN]T<4#bglijD7VI[DcV]7kWn77Gt@J!t0%PB=j<j@0(phdF>@rQf]C5"Y_iA8lFZ"R*UL4m=E%S=IJI[k2=KJ!8gOU1:spR@(b,
%DEG+M\d/-,al#JKP6'%[7A6gKSVM90&*6]Qmq1E#V3nHQR`D='Er^7HAh(j;Wmm$,IM?5%?W!d)N)TI>(]@3#:/=Vq@"RE_SB!9k
%[YN&>r_e3YK#tQ/'hj84cCcYSVQF'!__dHL%%rJl+o2t>GE;@7lG#:N?HVZ:o%BtmCWC[jk%BODh3u!E7s^*ZPg#Qphat$7MksHM
%/*lh`B=sL6jEVJ5pn`4&YNl]5@fs6Gd!%3&'OH9Xn@D=1s+\Ck&&P@P`M,<@VB3,:mCVGJ^('b<"/)O*8ut77\VF8G0=VXEd!m'#
%!1>\E_;"uO/H`5cL//KTib=#Df<kL:V[<2qIXg\4"A>R\Xdh%4Gaj"(?i(QIFA^FQ%iMD1Fd-kHA\5J<s&Ol3k>+r;K.(^W!'q&h
%J*uqnB=<&TY>h7eDH,agl?esd4#;'Crc7s5VtG%ZB?1##<6c[?l"oEpQClE][N3h2[h3MJX)f5OD]"/]m!j_)7fSf8o<$^>D;R:q
%,PBR/eg(.uo"02;S3]cdI&1q2ES11]o$G(+;L00^r98Dh\jmN?k@icP40ZtE:ZZlp*#[3)UH"'iH7KBRJ=Tp/^CtThYFbH.,;NTg
%54[fboABFp/0pFJq0K6`S.+)]V8ITnrTJa4pTRULp[iiX]["c,i=VI6D(/f@-?#Q$Hg;NYF-G]`--GtsoX^,;(H/9X?'j>hB??O3
%S#Ssu5jJBC'oOC9`ibo)=$1*XXt%uE!4GiTZqah2o&\KX<,0q+D56ECEP6\rl_+7bIfQ(d!8P'_a4gB>'"@.GL>fIMf4+NlYS-'D
%i:lKo(0%":J=:@^jC25JEp]V^5<N/[%@&>o&A3E-=p$a@@3nNA.T$E>I+7Xe*r]]/n#r]Zl+^pgW*5G&D5]l@Wh)GQ(1dIK2694a
%etW(\=Gq2uSXnM3M_YRG3VZblo.R%2)$'L24V=5kASDL\+\OTs_:F)dFI8p#Ha5Ien3OBH8;_jMfcMNKHZBaOaK,nJiX^>4kVjL"
%0;5b.bJ!mQL9LJsCra1_YPYm/hb2iKpDX6`%H)6@`G2fn0UQn2iGU1DR7c8Li4"sEk2EMup5o:SOoPT253jkIEp@id3@)A+(rQ50
%1_i$8CO_CMo7h:&.+`oKY4\E#L2q,Zf7s!fg.PDK?5QHWMR=L][:LJ*BWV`?g7L"JDNhIdP\L;_C-u4m&!C\@.PL%9@E+p;#Oi].
%-[f+o2mgSCa@=tqfcRNIJD$n$(a$'2i1A:N#Ol]]+PtJV:%(khb^%CQQnEeE1A#d^^8HJDl%@23Wd;C5mo.c3e*;Y5p"ZqKWC1mq
%>Y#8^s)G&.%F7uGI=&lPWIFecW`#Z1*L81O!@3F+JPj.le6Ac7)ROR$J'GT02q,Z((s&lj+9!V5Mg'6&NAQ_a);M'M^W26QoNg(t
%>.&@TdeJFt5i5^Vd#!tf>jL">]@FKK95gOY\<%DB:J0^Q8qI!!gH4XKa.3'FL)Id4nbsWP7AkUJ,;IO4@/sh\;,P:)p0do<e$B""
%AH6gp;(h-[BB"#Goc*m:A:)\-?>:OR7a1t$0K2p%hS?atK;I,W^!Z-sV&*jamF$J]H+TUH^4.*Y6["HJgODq;=V1QKDSb_1Q]rBE
%oGcqBL\]hK[kXiZ0+/P+J1Y8[0LBB=o,Zt@s-B2Dn.u]HF2$fDN+("UR.H;uB:/;h1Yh8(cM-ePq;*qulB_?'g0<W/I?2P4lG)p\
%odHiaPOs[naeC1(<Th,^Wo^0>?]U*9eU"rM@>Jda@1>B$?@,dc]L,1&9Gd1.qp<S+\ln29g<e(_\ljNeS$c3>8R6&5?fR9oG+0rE
%Ir$q@UNG5TmH^83OIbIpom]&#R0Mub6(](fE`0M5d2X49)UZ.EJ%n</72bA+Gj)W4[WG=N1-"`-I##FSkXsFa[5QSrEp!Z(T7U-4
%Yun-4[cj^Rg,X9<meZqnI%s\+,[55skJ%\6D;;t"RP7.U\(*BQ^[.@saClDGqR)EI$4oeM8B$WLE\n1B%7<VJ=LH&.d4f)f$lKLA
%7R)6'_iW8'D5M??!H+(\57Du=7A6p@>#ZWYXS3q4F\<oJ%>Bu"F`l=&58S"OocpPYG3h"(*'dn#/RnOj)QD`qCbQb(XM&e>ke@iu
%^KVBgqkMB)Sm3ulUeDcXHP<mO<q,M+=Mr0+r^9=3J/d^#Ir+,Q4kr8PQQ#`"g;F!TWpd,c$nV3=HthS4027[(c0]oC69G,m.`L?k
%'7[<.]F?MK%?,"UY:s6N0A_FbQj2k>%X$gXkf2Qh9Ri1F]R_^i%?=2=Y:j0o.D:.Xkp"f/PObWhf9^fo_r9oSf+JY.H>[,8:]Cs6
%GPWsEDtZ?mlS?f;iF*u-V-9Nr;@:hOhb.)Lg#'U"FUo>VN8ij7KH.'``PDhc_+B.X*7.-3rd"hAhpAq0]sRSs]UTpc1:JAp3-7<e
%i-Of4kDRl?DoJcl6P"%tU"r*sFdkNNDs3nfKmACoRbC4bo[*SR#r$l3)L?'5)lf9Ckb7r`dX12O%6_'K(0&u,=PqHu34d,[c`ZH3
%8*j1ZVDEbir*(ZEp1C->Y]DVLVVD-qoMi<upR=(g;[_k1""K.;gkPb&0TP[-iYXW@Kqd>m5g`:*+'WYaHasTEG'4]#^V+npYFbHP
%4*eKaSI?S[q?8$'J-Ui>nr7=Z*dqloQ,5t)Fnjh?n@bOSHUG^FL9CI2cugAr]iP*)<@1<09:!e14^VmbbF@&1!3QgSG<N;;oZ1lR
%.bk4mUi8[oc3Jb1K8ZR-Wk6MRZZ&c\UR+P09X@eMpU7`GD:m.Y%H)f/9'^SW7*W3tmOCBbmr/]<@M3#9+kH@<0@qF-nAa`9,k^Xi
%QYtP<kC2AsnFF]i8gkf]g<:)eL>Xa^H:n@:^Xl\'?8fr#o+eL'ToF@SCt/G#Zht:HeJR#=J$b1r&.((u;MS<<+(M.9`pG7&)8p\&
%<VA1uXn96hAH5pO5flZ.:[_Z_K$hr7)gZRTZo<1:F$E$AmcO:crP(Pq48cYgmqV(3%GeRg4#_9EL@3jDSK#.]4a6)c+-.GRF$k/S
%0<[)=k$!&fWV705Y.W$*9(_#Y)*TQj4oVX.)rW,8J6VS.`pa/L^L!/\SG+b@/%/L$e`tHfK_@)V#*@`d3-S3E(Ja*K!ijiBKi7O>
%g`V2`NTTsVs'A/4Y`n&No;h-]E'IbRqrk(+pnP?t2npc)n)5o08aMMD!e/<C55c#FhJ0sd08N-UKYYZ,M1=FVqDElJ*ES\DJD5#p
%d'WZlT$73_S[Nh`rf2d#glL(eHY63D#4$CW+Z8KFS9B>GkMPL6Y'tZlY;!c-IQ?UG1iP=I?r.(`30j=.nK=DH-nAnsmUdJGCL<VW
%T+Sd8Nthpp/64:&om.N9kT%0TGPtSnNE6!3?\ik5q&VWOD;u-*e:\oi^9+hPLXt5uC[Mt:ZCs#I(E%;+lIXDV_OA(_2UERr1[j8g
%T`/^HNOO?R$>7CCZbQK\\R*5FJ$j#;lH]ZuZ2Z^Lp(j'B[kNJ"d,.kf/5tuBSTA8s[o6cGKAD$O,j<"34m=E5S=IJM\#kgss0gb*
%78mI[9['hi(][iIF<gL*Ha(ia@:8'\!U,aKSB"([1Y4]!kNj84V<2s8FJ5CW':!%@?>:OR7Y>reCT&5&=ud'X&GKHj%ZG,uY87Ed
%_tpMP#=)18f8G:S*f%=HW#LN'nb;4sL;.LXV3h00>GihrF0k7e5,Ha)n7r5`:\ai":\`_J?R^Hg1#GCtJ#f1f\s:#;@JJ&_56Dhc
%C4.=&Zi'/q^U>@Jm5DgU'B0*.HNT*#B+4IjH/HT&^@.:VlD_kO,BiL"Q.FXPP.eUR9'_NN'>8_Qj*'*G\+K[Pn;WD+0[[)=O`Bt;
%*,XGum_<&Zs#2:5DY$lVl/<j#In8",E)o^5q>N=WbTIN^3+m&BmrlD)4KPda6]L>]dTcaJ6@(`&l$'>""8GT^2qsuHn=*4U8n$ma
%po^#L(k<MG9WZF[oKQg/pj1K^peTYKJ!u<$Of]+M9EjqaN0,!@=eEcO@7Y!fbfmgkR/N0uMOT6FomETUphPr^h^4[(Lj;A_==MdU
%H%S=4oJ+_!):Z@:_;-U[9]/9]Fn=:!)#F%!4LUh\+qBu2DgOWV)fBqO>e,6g=hd2RrUo'!jPI&sJM`2M%-i$Z9q/WM[ic,j'*J"m
%8?])Ei__j'!2VjV,tM+ogi\&PdTCD32"m7d`V>cC1!Bf7J$W>3VR>q=1"-KD&07#ckth<She%j4$fnY]Ef7YL0iC:g`TfaR=fAeJ
%a-hp7-%?WZ1L'Mram$u4bfH]?q/X#f,UU0=\lZ#"BBa34E.#sOZ]gdp[340kqf;P;[0tQ@*F,tg8M1c8/cOW]pi#H4hQK/.cZ8^@
%/q2VAKBVTGV>>+aIpsaL:\9_rmJN(PEg)<?BlCJ&=t<*_,9sOK0=nA"s1QMVZ9qu2]J-Pu5==?'NoN.p`XY,KV/L`CFDQ>8g:lYM
%@ToYpL&?qrKUFbZ%&7SahgEI?cfhto"T+P4PM+$is(Gr#s3QN_0EZ"N+t\oF]7>jhoGdouWNBKeZgE-#C,R<ih"Cblj#`rQRCo$9
%%!aeG5qr-^1ebs_eQO?Wn'D?"AtANOKKX/3bn"3hrI]V![p>ZA$d!_S=b#l/enNL>"$=,/BlZpO+`Y:>mX@A`W0T0fs%A9,%d6>;
%W'r@>$a%mVdTjpRM,M@eB/K\]KHJsEgXuLYjin?6Unm!ADJc4M0'dtiU3_GQd&/G9c5D50?9B`d1lDUOl5]E=2&]>unN?ZN]"3HT
%RGE_jjikY$%9k%e.t*=Vl_WV?H?@eEri`<Yr>OE<bB&6E3^_'9oJ=+]>)fW:7clSb!6]2,Ms@]r.;mpPi#Pp7D'R(q(WoTSjNh2P
%R\o]:]kX\06WQ"M-u4=A<c(Hg3P04moNnISS(6![!3Z<K[9Pl9QZo0-X5)&.aE*H4BKeoXDH)(RD\BY5X+bp=EhgG[FS?/He!d'.
%g/;/0o]LQ\/PLR&o$,B:@6U]@M_]Y,J'H2XYsa@O.[QU]cQ^?P`:UJW2-[K4HG4FL+uPS;Y1?c64Zj$#478nk/ESJ?nr;JRO7R>t
%$L'MW]uDa)bL]:K2+jdKEg"a3#G&;s(L*u+Ai`H)QV3<5$oI10456=g)^bu)H[:g^I'KW#Ngc_>/_:YPkLME!<jS7JaZ&E?P&6XB
%-GiHjhE7b!lbuQg7,6G/kIS*K@3ZD7#Nno:)K)sO[8o)TO>2sPM&Oob.to8#Eie3YiN;bAQaX"d)@9HE=VDDC>/$#D,+0Zb900)Z
%a,H<'&ZP@p(47PpNp9J`ji5E"0ATlZ>bd9IMONg'[+7?2.,lV_DS*AAWDj6Q<B?kLH8XiF'K[2#6Q1qp(D1k^OYZlpA/d+TA4N4E
%EO6;t<kT\?+Nn-!nmKqjHLrd=T<j^Qn?e'nW=ic5JQ>R@1MkFc\u%n_<D2>k'ut6U$ot5bQYMs:]p>@Wk:[d\:bL;^E*tL#8*>+b
%,bhmrqWp>DZk<ncZE9PJeE0!;N0LB+*p7psUg<-^D1+).`Y+tgY!5Bfa1$H0"Jp1=5BacWEIjU5c[P[$Ipl8sNBE"/`YT6@FnXD#
%n;6[-A"QTJR(q->^?QcN3m'9(i/P9c4[56Ci,]BapK;/eaB0AM:A_EEp)gnDlE@P@mcF0q/gn#Y'!&(Vn&k;1qm:ZQ\B*K4+$k5>
%o;JchX^%GCl.&8HUuJ.B@qn6C8NlK,$16l4[,90m2buq&b,)uB;UE'$8X+8jq:E_K2N[f/_?V&OJ.'"i0-+>iJ,OY-5!-YBkN!Jb
%Ze"%4?7fa_o=I[BmQ1+)3s43kQ1B,`^U5>Ff=A3gmH`2"hDI^f\bhd9(`?YKf_bIrV8@0Le(BYtIs[rhBqW48:L>40Vbo6W,hK4a
%)Y;s2KpSlV<6(JSO5&12$:K8EW7Hl(nXKV9Z^]KWqrd4jNgk]9[S-WhjmB!q(o:`jEK$qCS5[U4cAQUD7b7Z>/U-gDU5`3a=X*#l
%VkSX"o2'JQ%eR>E'E$)&At87bQ$o*mA(M``]oJtV`P0X`@q,5HHKfMr?U&6uG$U!E98OS3;M??qgJp"]3eR1ip"?D/CUJE[VU964
%]<-]Te6JtRRQHnt9Gm2\25QhNmX8&tn,&A38.^0R9)`ZWL>35<]?P`"8/.^O1h4L-Rr5.n3c/)C6gMob`6#X);E9RF:[B)lN@:!o
%8"&LZPUT510gdohP-:#DpGf0`)Yn=(B>0O3/!jJ(,3t_'&",F/Q)T*4+%i,pVMZVC1DuVq"4PkVoP5E@HaT-<Q)SQ,P)4];RK^lr
%6'(T58qp#+m`/8,8ag;*icot\;0o*B`B],*;ef3s9KlD#9>BqOEt^\Km7CQtJQt>iGca;S:cbU%K?;>P5!jUS<a@j^(0#$Z>*Tc^
%dq:!\V6E;"<(e6Z2]CPu+%9t1_eOB6iMN[6epK:-4)UT1<:Zlkk!@2`\of5TM<E,]=g#r:UUCi8:YN\W;PeVl[<6(O]C(;`=<^.*
%i%d/U2`qZ_VSu;3P[YY1*R4<kQ#o<QbOYlRF((R`]Q.LRc<e'W?F;RTF'_ej#;>0(N@U(%PEHj?:.dEHWgm=f/[+0hA*m$_gol>o
%SZ_?UCW+G6g#2;a&m?V&HNdZWj;Z@qdD;k]o^>d`$gI#S;N4ke^/'Te9WIOC4NUI!QHN.!6RA/gV.ZB-qb4`p!fUA=PBDT9(Zt.s
%00(=]<2NLbo\I^Rm$<[=X:#4l%p`tK,^"/5eSeM$Ln3j,;7>)9e)XMhQ$W+f8FPGNr?TX15M%]R"5PqHUKXW4Ni?*%Jc+q.;=.9W
%WW^j,n[\SdFIa5=]:;RhF)>:VREcK72or:<SYkuR(\(l<9@N'eVG2,B=.LSXl!0og4ifS6oA?>><LBLJgU?^lcOia<DR$elcK?5#
%foh,_RQ[JOY@8HG3iLK^Y#f%:?&mr_4kj3LVXa8DIC1hkDUU*r;#)HgC$jAml)0iY<[j+skj2t%(U!LIPr(_eLoca!h(0S4UA@ZI
%F@qZIMj_;HY=UTP.IEI#+(:SV=IgbELtCBa.(<F&CVb/tVu=h3aY5/&RPTY4.hrJSiet4e8Ho?WR8emn:Y1P>@Co9)TO%2tV),@W
%)JsbH2^o;#YCsjS-96>)3I'87'6]q+J#OL5^hCeJ]C?>6nUg>]Z6R5*=o5AOKnan=14>1o42j<5WkMC`0A9CcUf9Du[=3-f]6XT4
%N2g,PhL>$3rF_^%&)^H!g'\>L3m(-6mBZ=Ml.e;>Q#7kb-pq\:r$!@S)eU+X(Cdb+Al2i'*e%dn-U;FSqFk,Qi;u;DCWnVqo7Y)c
%-6,KRd=EnT;`d$'R;&<P\LTfSbqs%.nD^ai%PA&u($`c+7\NkC`Tb>UQjPhPKN7MK/`#sP-'[^OVq#7c-A:Eb=^\_89.QI2=t<Ra
%Zs^fm[OQuKF4!ReiV'qE/=`T(Hu9<]Cn]9J;<td2"67$\[YmU,Gre@2`QZ0mbYk"MI/O,b@\&inQ4_Q$/TgSN3_sC^cJ-QOV)_I*
%?Znu52_s7$3S_"!8p$;QqF\dUc`TmeQS1ibH<o^F2mgJG-g&:^WqE-3.-pdE7EhN+l,oWXR=c+T8N1Yo6Fh3H9-YRdd5m)?_nLZb
%gIjfXg"@5lFl)X#QJecL7Oc<BVSU9tl9]*"H-nE8c^VAsDAmU>XX:JZGGGtRPpTT$FHo5<FCb&B](gH6'E?W`Wj+P)=";b'iMT!i
%LR^juKYW>RmD-L+]IOdp@q6#=BCt2o-cbq$1DNbKh_Ut'p%fPAr*7:)RNA#6HGS!k2;04Ic4sk6=]Lucd7k9$>EZcl2kg:tM$[I)
%*d9KP;b[Xthn'aj][Ea1d\s<7#Sq'N#aeX'%qk0oA-nXE@jgm]c7bK!ottNR2P"V;`7c0Z[i1CS8i<cck_"mtBbu-(EDUDA`i_^2
%g\*CO8&HP6#1Ai!c=<;fa9,Gndp9H4;`DZJYp\N4G;=j[-We>jZb,p?%0n9STIj2lmLh@=f;e@$?_GIp.\WS>C0kBDao#tEUsItN
%9Gb/bRhI,g>'sU$I]6cC\6Ap+&'Vee@C9Dc[kE56TVEO6j\(4'mI]8ODO35!+8l%XCM3GNS&*E#-/#(E9]!m&(MG$;L2t!DgE>Z^
%1MFgi'6P[AY`5mQGs]1@oNek:qn<\Lk[HQ<&27o^Y4G5od4EVnC.4MOjiV.+?o/WSV_4=:k,NaH^<=OUQ)5t+Mr,n!gCEp>Obe-0
%V_2-9AITrnG.CK%[]?ipa&c#d>_7mpJ@h>>/2q]^m88J*DOuk%UcdbkIp[t@SuXe+q+=Me,b>=\?/el(6Zp!GP_rf4W5*.2?\H5S
%R3dN3:=/Q`E'nt#Tm^E5qA&^HG4\3KNYYXSBW!Y+e/m-'f%*!Bk:>oM:N"b*'G;OZI3i$iKf4]9h,n:Qf)"q^j9`Gi@/>UkV4-1>
%6X`;)H+g=S4EcHJF8YD`/a^cdLmYn?-M=oH79RWZ/`/ZSKDa"aNT^YAcBo)8a%>;F.9I4$.$Mflc7Y?'kUF!Q\@*0_92P`_HMB=d
%bq?KBm:Qh(fsd"`fh8YU:W*!nr)ipV_X?C&kdiplREa;i)qf5ol->L'XXDAt['K5\8$MZpFhBKD\mG:(j$u!hq0=EY]m"ZGS"4d^
%6Gj#qqXW3uj:=tK[@YlTXI8_*SN;5TbP<6@b4Ns2$i2UkX=cVl<b4_[a(XBpH1g^n,^jb.0)rHZ\Zkc95L/k]$[+6((dDn0j1TYj
%3W*";+*57+]11[ON*u,[\R><X+al<F&3oU11okh5EqegRHY>:BZT<98C"%;#2pm&!Z..Eq`K.Z2GA1Z%\j>4IS,DNn@T<Ab+(+$J
%l/g6P^/!UU4FIOl"mbrVc9KHh6<]lASgFnI((WVnr8G?\C<+L&HcF.LK;DUd`a4.BcX*!0hTkM:D2bSJ0ANl>h\.)u&+7ZT?TPjs
%FDU2ebPoF^@slue4J0DgDDZ]V/Zm\Ff$^,`F2mBEk0B#0j0^uA-_C(6FQDg`^O9`HB;ZPXO&$ilkqf%$pkK@u8,2XO*T=\qG61Hd
%HDaNj)'&a\VtM!amKA#/>J9q3'>[I:](*i]NbE4#5$?W3(@3j)/A0V`*7u>kB?\n[\*nK\42o8#$d5lO%^0PTk32-/WMN*4&!t>;
%Dsj_[I.0<QSBM`:5Pb/a[#h#\ACrK\)b*SrTK%Dk20W4eC99U#=kiM[kCluqV2%k0VNs0lbpQj?(]:8oop&7t^=+S0pb@-dm!3d>
%;7#[@/6/:dj`^)WW@X?qMKki25Q1(bAgqIWp6XYWXt2]'g\c(IqttEUnPA&300@ak0u):a]!Zongi);G^E#J5oDCAO0HIlP^U.$H
%]1^$nPb43-KsEd`i;9j?6T\@&XI3!7iC>TEaGX[fpNe^+gWCR5/M(+]X#[LM4nW@UmQiImSf(ZlSGlnL/So5cl9&0kU-G$4Iq2%s
%c0=RCH)B8WimTR6m*][)Lpt*cbs$U-`(EPLJPG"u30KifI.K4BD_A]C`%Ir\9bd=sI)JgU.hgIKpu/oX/l+WE9HFB4BGs:1*RBb)
%J"4]BhI#!\hQ`pfZ=?(<nbC!R(L1p'c</=d4>+Cp:+l!9ZhL';cX`q[N%AN.^\[RP48iU`96TH*H87R/<-joh::FS@c%[<OmEt'e
%XPJ3eA_lk]ca)F+d8*p&gok@C-Q@4e>]H?Ik?_abA`jI!kXtR-phN+kkg?`=m,M.XO0VP2k#?M4mbUibnbq[#G'U`L-bH\_oh"lA
%=RAJ!D6#R`I6QK0A_6N`qq967;j5o%EGmH+iZM=Fm]LCdfpB^JQe>HB0-f./ebdPCGP_o31!PJ40E(78(Zc1\c[5*Ym(o`nh/)UU
%m8!AZph2g;>g546-f`4qm-3<[YM&3lb\HieiUtf=o=jm>,eK@\NJuF(2Fb\&7`S"GNo.JhR9FuSN(c1M5*$O"q=tWWgc2-E7bfY<
%cUNN2]+ZF\F-R7\O7)-PN'+)SrAq6/]X']*o'*\@ZM&:?4L4tFl.3pVEPi[I.DMg?]PP=9)gQ5G5Tb%.OcfUum/G)B.8>4M^LiIi
%?IAhOUU?.-[I%?2dkpO-oL;>olZYh=S]AdGPGNo`UXQj3do"SC)iVAgp=*bpRW"-KpcO$cqIJd4]@!J"B3V-,GE%m8p"(Q%8%1^q
%E(9T94IdI@4$%Y2oOCuB)9m*_l_DkTmcipOlhM?cB!ekMGWa[scQ1gZfm8$jkO/;fUH;DH<fc\do?Y2,EO.;omt;eV^YX8.]U$7;
%\7FI0o@2&[hq=BCmG?O,hfsD/ouu4VSI`'1[dW;?7c3)`gj"9qkN$]ZFf3eqSJfVr[iWsSA)hJcf>jalG<_%SS,(3of??sK4kLa(
%1q$d3mZ+Cj^Gm:hGlDZ&CtG;)1A5meq.Atlq;gjDnOptCqm-6IH`VBm3$$<\o?R-ePN%MjRISb[\DrXoO3_[4n&M&bEYC:Spo=)R
%q=qt!PKN[Wq#-!.mp<(:N9?1`1O^%Kn&HqOY@kjZe!%!(N]19?hjod>hqW?\I@Ri0s'kuFh1b#lkO.'TDXm/gLI[Eo^+N.0mXAmk
%DqmMJhG2li?!l@$gH9cP(t.pAUPINZRD\O=KGSrU'+_h\c&(PIq)8s+,U4]1._F^S+$S`n'?+Uloni6kiCu-FSrZS%?&/iOZ\qc:
%PQ(FTUWLQK)DdSX?^D[pgG:4raZ%N]?Vc-RAtMkb*pmC)afjgA]f3ClFm@i-q"rHchT)IrpDuPA:@:9QmmQnVN*#WFhH$CIpC>@A
%&,/gk+5bsk<qkKI9hlaXS?db3rm^kpOb9X0cc4qnk5D.IeE`)Qor7j[@r1GR7PHXK*80jrRemcqUC6guQ*nm6&#QDrmk6V#9)#e%
%NR@WA5Ao6M$_QhJqkjZHYGXl?HRI:k@umLarOM1JFDg^9lfmTo_s6kEpObX-q8;NXl'%O+j6>.B4(Dl;iVgcT2h"SpH#d0-1c*Hb
%9t['C[Jo+09`Fk2V_dFIQ1F:_1],#ToZkauCeu*oB,=cJ5L")j2=9(@0;!Z]-$"*?^M\N^0IA,e%h/?sk_\i^c*%u1RbOUWX.uNC
%`k`&;2(CGf3OUiN:=GTmk2`W>E-Lm*>g"'*k0'cCR0Vk`eZ:mhIV"Le/`ePLiS>sK;0BEc4^\-Zep;CUB%8A#]>!r\IIs[*\[5SG
%4_O>l^$'ooBlEkVcg6_OSL=,toqT;?H+de91sToYEQWS%^`Rcl]q$']hV>`lFJ?6g)G\2adr;3[mPWhi[6NZR/hW0p05%a@h88fH
%iI8IichHk`>BoK<k3&Z!b/3MJ\$r]Umi@W?b21b>mC7Z7KB)ddA8qbkDY;KM2u]jJeqmb8=7>sE,*^?lf'D81e#0V3q;Qu>]R)KM
%)3g^Wq%A^*4g@=(HG1CPN5)BH0:%Y@KV,#$`;.6%qfDL(DdU`5Xc-d^Hp(f,HQ+!Wk"9t2QY;i`43u+#H"V,>AU\@XDI\-6l/VVf
%nb'6#o?Fr<qLL@Ul99HupndUjqm`m(+<PuuI.6guh<0RBO5DQRHuuPOq/A->>^3dYlH]!V[:cZ@kl0l=qP/g=#9P%)5/4T#B`Hlm
%8Dm@I<#^<L4hZ+2psE^Pj5[8qqY&tIb5J0WoiaP,1:sqTq]t@ZGG"4sN+JUq:JY`9m&,ml3BR8TPZocS4j(H%H@;1XE]8K\E;.2j
%Q\FotlZD*2c)<:C>$)eNW7;8S1sP%(jun&GB<=C%ghesA/KPt7^08,>VH$ml[l,0ucaIFtQ9N#Hc7RR1DsT+&N^#!F0*M"rQX>3_
%k*A[7:>`50IJp"I1-^+*Y&$QT038XlRZ5kaguQ@QG<5N+\i.*UBi[HY'fK+-:/0<3)WC;,Vb>e;PG`>ZQQJ@R]iRC$]>++<d9:F.
%o#ob1pP$So0B$[Efjr:[I.es,SU.`VGPq!anZ1m$o80UDNTUi0I<tRV4LU?)B;rF*&_,^@5MWa;gsu8hh;#^:j&b]aCeU;N<u[2m
%$]>sN02'm9Q\G8%k*1@;]UAAWhf$5P7lNA&++.2ERb:f2hcfke=Bk5a>5,M?/t^qT[Z9sSgM;j7['o^uT:.F=*tMR/JsGWBMlgr-
%N2Cl?39<m&9[%An4-/b^rm%QPp@6Gmk0%DLZdJQkh::2LKAB=-PI8*jaG6b.@.3W<^$W@eXhCLliPE]aKib$&(Z%BKHhhRRabuMY
%^%mjnm\bj&X,Z.0)m9alQbU2)>hF14Rb,*F_j@Ra"_/d\l\COehfqp]IX/7W2)5-nk[^IXG3\Z>s6\7TQNqFn^:/]<fmN&Rh;%Ps
%j*,kEkGmuGQRCDBRtluMn"8?)TACAK*Ba0Pq65tZYW,[0pYj"UmEru@a-gq9k2ZC%gqh$t06Yr3<qjc9-R\ABIbMrY48`(Kn%IMK
%H22K+Ir3'ppBto"V`mm;CTYp@(%^MXVt\G&rm'66L]$0[Y?pDL4k\]:\(7up*6dkfD]cVA^=kcLh`KI>"ImY;1ehDf@D4BoT<I@7
%hYj3&`>8]Q?9EZ/IPPr8)/ch[nD-E1?C]n5[%De!*,`H=dlKTOHt"2NQG%IK[6)*PFOI+"O6maKq;^kqdoXTOPBsq'I$gEW]m)R3
%^/WcjLLL%ugFfRUg&3UIqPAABp@'=I0,IDj/`lno`g9lCr*]=h:k%.SUXP>aViOTF4P2e[rFE#mX5'6OmoGbCRNF#5=lWr`^-C)J
%5'q%ZXr\ZIH;Lr,XjPkrmf)BQFXm9IVYM-XIcPs+]p9b>BC2+crab0OX8;fYJ$h!kFr:59UEn!'Nb>uB=/@0/S;KMoG4@_ch-.NX
%Shm*-a\uY]rTi9+5+V>XjDn&!>i(GOk=T$R5?lKsHJbmc@C7gPc%]u0Io=V)EM]AAQ=m5<p$gKB1Stmtp`[A1$g@H'5Q@52f(eXN
%lP9-]Bl3%haEtJ+6ls+MhP\qV:Lg#c^PiPnYg@e\VoS9&^%iJ&aORl7+F*"Gs)9QU03k*C+b-sR6a"UfnMg<N_[C[0.3Nc<1LHT?
%UVgd-.nA]7DXM4"1S)+WgX5A1HZnE(2EC]1g&u#$?I3LC6FcU2<?&[&EN?Li2^634K+FO?X7](aa)-XC3W$t4G1:T4da,F6O#"aN
%^0#,-k2sm'Xj+FXYFf%PcaD?VdPVLTNRoX+Ur$KGnu.4W?5'`t:G(hr88=dY\d*.sb.#[HiE;7l96$rVcQ/Spb<g*S?MYH)*p<&"
%H%Ge?\?`&MLlS0-SY"so`H"r8C^^'J[:pFaXag=oYJjD@p+oKr6DE/12<,R*R@0o_Ak^MZ+g;)a=XbaaDWl@Y5_^A5]M&?Sbo)_(
%@g+_q.q9OWN9@_p5gE&:g)bfs)9X`T!P+e5F'lhW$!d^V6IX0Ziqn9W+NlHU"pIcCX_\p#Z/Vou(^SWtHqWTUAUX92j-gB"7&[8k
%AZ;h@C;@W-Bb&jMAHsukJQH:u-'k;lfQKOl'j?>>:t%+3<n!Y69e2=mpo],egCfU'n$k#:D9#UXZ#,[P#stg/mi;Y?aL]5H]pZZ;
%\-cKYP_8R>W/7's!b@(pY9ruFJN1AYj;<R+JonCe=$]R0\%/1GaAERZll]i#*uM/2r4i\_h[o5[$Ij4GcmLU<1rus(#$G@OWZqju
%Ka+'(mcuh:qD,a_ZSV_%`O:T*",F?Y#dNW1d+:$c"Sig.'@"`=gG]2abU$Eoa9aDKKN@=$N\:8Q1KXjTLYI*C>$TO_).WrCQ(f_q
%CWmVbTT:(g&J0rej)oa2*c70s:hT*XP:Kl1B5CcoL$q*T-.bt`&K%2a4nJe5Ic-TBN+(I"2,p,ABXggX=guk5U(mcpk]jBFe+/o-
%#\\LTP5kV<"!J))(j&^c1/3HNK6AFYA'OeBlO$N13rl#g7Vu;:8Z1a%gC-+OO8IAiq3p%H@KqrH"qJK/L.:C-L:Ct'LuelAO^XYt
%<t\l-_[\t[/iWDiAg2aF;c[@`!$Y5FZ;=1P_.0bfO!KErfJBr^32OS5/0IJ#q6CWJDZiC=##MIZca$]^&BhYRoNW@^)HhYSiaPQ=
%,oj\#8B<JjC$7Udhi@I)j&*j/;.hi['i#(mVZLsm^eB9/3/Zs7+$N.>ODVS/-[hqlSds5sj-dXAE'k!WPgMhIB$5.2W%d?/Y3P>9
%*9->t<eCrRDL#&55aEG7KH[\$:\'KBC6Lai*?ea@"sOZdl3@l9<\S%+)*u&b$ucWq=$6Xa3/4)tl+8^)$$!j*bB="VUY=/J$j>SE
%Tq9^C6VSC@D%Z*A4H]6^Oq)fL1Id=3f<[?'6I5B?L+QKR'TggY7sb'caI-0SEP@5bliW2m.SpARUaAogXLM[M3%fi>rtNQK9O83c
%/>>._G<uRZBdY1(B5D!UgSKI8b>q0Nh.MRSdj]qL\1\F%/JV)$d__<)(@s/0>h!-]6jp4&jOgUcI7`<]r%O?Pb2dgg0*h_lbF48?
%9M9q!d'[2$_#.t8&eY(NF%0hHZ4-o1%\PKa'NPWR5ZhHP1p"J]=+Y\2!n#t^dT'=Aa>87P>?D*,`j4RE'Y`hd*Jj/D+iS=W>=tJp
%eKn(:.R7IB0ED77prkLD(no+q4)e1qa&Q$c`^B="C'`&d#a&=6BOQW=LntBI#`<`:mMWSCVlgJ;D\IC#EYp'R!Z2jJNSt2(WO]4^
%3'dikJO"Y$P_Mq@H3/,D7KDtD+>k:C797fHL@+3-*dnM0XcB;*WTs)4Ta-5j8_L[I'AF(NTj"(L,JoW.$p<2]IH*''ZriCk,=E?r
%(BW?32)Ragg(6`)gQ(t#_pSBO'^M.o$a/HB_J_iI,4.6%+AsJnJ8EO33KlniKPJEs2\[a9%G7c-X\b6$5d"4F,\h_J*.T#]l%202
%<nk3h8V[AG7s*dBGR4g3UQC.g#uaSa9YD53N,&REf2TaC!H"/k+cdDmSq'L5J]K*X@Sf0=6%]l96"KD]5]>30!iE&p+n3A>5j$T.
%e]>YB$\D8DoG`H1kSbS-Kfs;(+e+lCNlspao%+D)\19!B:N/`<Z-*R_42)i*m,`a`jLD]$$;Apr'$ThRF[cS>_$pi^?olEVOd1/,
%gJQnS^iJI\4^URo:`?pB*HVi^#6egeJAYerU<Tp'EiPcJPI6,H,dbl/k"X&>.Qk45KgLap/B.ZH9uTbs)N,"3:H6W4>`jHt3+:5m
%<6-Fa/:;-C/17-]I+;;NCe2Efg&t#)iCH<j"@*/6Fp?VT0@:%G?/-6n0LHiti4Lqf<Zk:612gR,Xp)mGFu&]Oj624%Q:t=N^_S:e
%ZXE1Sn3C*Y@9Q;A%"QK?deXAs6k$@1[:BN^A323mD?>Mr-1,Nh;^aNm)6YVG']OruP82iG3cH$9+'T+Ie*f9`%^OHU#S%&^B>X'F
%I$$g-%+=C9TF>j8=+cm(#\:7)"j$=!c.9a*":RhiE'*W=e7`B9$DZ(=(!$_%=*Grh#8f:+HjQFojqpG?l6uWX8^:TbRLDu5%@nik
%c%JZh$j>%e6NQue1Ehe"Md)UPk#RNTBEIq%.COrLEg#Q->KUB909-EkaF]=E'iXLc]GSNreG<;"Oc*cp>enSK0M;KKL)C@9>Kh)=
%qBA!ES#fAt\"?I5kHo\lI"RAniH&`cgo@'B2?ed8Cg`l$?HDu45b@:WAOq-s(Za<T_?ZmsaHKSM%R[*ZPOK_<6AX[4=r@tQ.o__d
%2Pm*a.]f)C*rmMao`RZtaObig3>+BiO:;]*&]CtB40_f$U5k\no!NuK9sVBk1C9;)&G&4N;??T&+OF`f+>gKb#`M#74\0d/&_g5d
%$+2'f]<%'D:@6U6$HGd_=U?:qM]3#[cQ&&/3"OgG[h,jLK]>2CR^-l9"ipsPM3pPa.s>^L&eGW9+9C]<_DS4/K\4#(G%?/lXr-&I
%=JLZbq6m7S?Jf:M@Zm=Wj((N@Zk#D+Y[E-#ankAb+C#)*65dE]i^/3Z%?FXZg6cG%&0qiQY/+]tq?DL+)Mm5Z%T+A&"]POKWeV_8
%DZXp+VFLa[a(@6W*:SpV*$Rde)2fS/HgjU&1?M-M3!plr)!K4j,4L.HRr'&V._[`5@D2V]Zs-2H&c^",EuKk.D.1V(PA2L2VV#Ma
%ZIpq=5WnE%"8Sf<,PEHY[;_jJP<Ddd&e*2:#-e^:5LO,W`g'tHa#:m)<FMh7"QC/Zd!#ZDA9HVSf<EeV36FpM6Q%XD(mn#[@bXp(
%9t3js"`Btuj>+[q1"eUF1l/jdG%/Q[EFlsEBG6jEaO62f\ZYL>@0cTP[1O,EQ![s67%"fP]C:,0Kd\tdjV?gSGr:,h.0.Eu/AD;U
%*=&D#85MheYE@+r-B^V,`#TfO)TpGCM>._)Z4$aOSu_]#X/h%0)8.BCD@g#ln0V\&:HpmrjImZ`"eL5e#.YZj+U6D]_;Sm*i\*41
%7Hd+E'+n<^goRpmfVQ_X,,f8_)*l+@#6m!pM[U#1_H&BN\u(5R6R.UH)[;40Ra.!D!gfG]"EAf:@#un/?m$Gf+rLTl?_D_Nd`3]O
%5WG$>Y)2WtD)RL6,1[6>>_h'-QK!G3RK1DbKr%^-ml2<3DktJVjt)sVHib$Q,,epp.4@GIEYu$A!:jRO$cl);VZqnW%)eri%aU;k
%%V9i*'-L7b+FN:$'a#KDob:S<CiLFN@"r,Ydg7eF[06kY)Qo:r1d,uKQHugU@Mq$R]GYZ2.0rj=$35doX[BO7kU@p]8IN75TU.qK
%(P-7!a&OK)KUQ=7BT>Cc;,,+@4bL9X":64]&<W:\GqaGA?X"_s^n"oT,c2CnBr#sCNXkQr=a(P`]&J)K9__jXpt>-riX8qu/Hld]
%PsC(:`]9&U1(,3O3(5rq+lgIAKYT>$-HTEsjB94Bkh,7%J^Ib`jF\h6Ep:2t,MDQjN$&;P3=^s1f_1'd"LNeJlYKqc[*5t5`++NC
%N\G*$-jVpmYO,!,b_A82+V-h*:>h4!;=r/5!KTOT0D%Ve5XId2,tg\K#9jK=CBU410jZQ;+-VokH^XaDWB5hYAt+G--?:,q88\:!
%_)/=Ia9m&BaU0%="U4$/=&7"GT8?oVBPIksM'?43C4r$T/BDd,O8)lbWO.eO:t`OKs8;>^'IM`s'mc:)aip7+S5X60=9l[sA.]Wp
%[5(,Z^qt194[O4Ebs`<0K5DTide9'7:$>a^OIgQa3+$>"UXK8&4lkZ1;'ASc!5&W1',m"8YQ4SG"ALA9,I.?/$Wi"+BEG48Rq3/8
%`/F``otV]$W)PEaQiJ;TBcl<Q5T*caln=tJ`j$iJkQaqU*lO?(BS4DrC2;Nj?IMfg70d#OK.5,DTg43Sdk3tLG,T77#K+0\6!In#
%8>aa*4&Go1050`@:"70+42\O;^*EZH2WV(ukB"3_@$X(C"EASj'J]]fUWlBS=NgSXkh$kZJZf*pQhH;s-FM%La8j"Q_Vh,],(P]7
%\=bATmM9e(=^[?`oSnXbD&3[B9OsL&9hVakM[^PU)Is(if0g[1QL7+9+\(oC70p`u,;cG8M*lZ%)KJ(Ia67fLd.RJK9B8K$>m#j1
%J/Zg!7j'.sF8uOR`Z=H.X?i:01e8j$.%:E2"DXB2<J-hHp=D:T#f"mI-j!*`J@=C%Ji[>1\Ms\G"AWb['#fS,7%g*i]1$lD6Wg',
%?Pk9$nD,eL>EApg6T>iA>0`61i`IDUg=^2F90(A;1ir`"-VRMO/1fihL">K`[I%#!WXlUi^P031g#m)N_`*YgB3rXI7We_?Ct?u<
%*'c3WE'N@#0Wc3WJWpRF*1mD_>ffIOTX?djbn+EO5_WgC3l:XL'1"HA$tKI'^uKS`\s2"Aci]&;g4o0>6;'D`KXefU[<ED`kcF"#
%=lpt?l+V\30@0`[CMVtd$Z5:gqJ=-$aMlOR3t%lXYU9iNqm3R6i^Bri^',2Q10Z_;ds'?L*esshRHMWY\;E#/8=fV":U4A\E/NN\
%Pp^0jSn.eJb>9O.?u+d/p)-A4?m]sG)?gBn'7#Cc$ILg"VfN_1)<=<_p+I%W6;KgGIR;K$o0E*m"GR'J=i>QnLfG*CG)-fp%^lXH
%YVI=ROrJoST$9_<J0mcJ4:?u`Mjkm6#_:#0'MTR/TZ:Z#L`lb8W#uTh91Ck&Ws-<4A-#0`8N.-[X6C%F'nVE&:b-']&F8p1H:!1m
%0L>fFI:$LrRKYf7`1O(kEk32$)lJLPS9Q35")e2\*HK\(LhG%(L7,J;&E;St'pWR>\3s^*&Dr#7U,mm4Tc/>S[5]@jR3tNjgMAl3
%*;a+ikTNd@r>ZR`"GH*[C'-SU.M8:"1c[m[,[0,_g'p.jT7*M=/J7$!3.QQ?NWBkibj@1(7BhEp]Pf=rm)%`uBl=28Bnf`i)/3u>
%J;_B10MO,+4<L#LbQnj_0o8Oh=d$1$p_$^b*Ukg5%@unF^`8j3A>E=`SoNVEb;fQB$jj_;aI>K)O=M0j8e'Eq(7RC=8L8"Ceg)XE
%!k(MfLg[^5nCQASA?R'&hLH\X1D;86mrMSC7_F=4&8-pLd027g4I&kcr,hW?&X%0>n_Cg.FV:L>BBaqt_r2#+-R#Pq5f?9KM4r@5
%QK6u^kNMI`=dY@GU7fmf1fXh)jmX7!16Q6(\ZA'+"6/4%?kP#L5Z7?-l`3iLi#s=YEA<e16IL"AH]Ko`,>cb6A(ceDM5u6$[VNE'
%`5@TtS,df5Mpb\;kU$@RL.pS1*,T-?CT/cb#m*BgLZ3IH!c;</KY[=5[5hIU"NWJ*=]1H<i=&HO#,8K%bSu0/R;P-qkb1,k84@jU
%%cU$jjlttZ3R%nG/)hkf\H4M<600Y]//^pL&jf-5#``aU'7LE;$qK#UVM%/Yc3pG%+stm[Sdrf.S9-%t(50i^\%2DHR[D\qK]35/
%%G</s''08*?Y"\<W#I.Dg_3nkE1e1bs("_TA-)s&Eb:a_E7RC06pMp&epp,b+fAdc/JA2ONXYPCe]b?7K]DBK3.ZZ@T'kg)q(=ps
%[+LmVG/]=p"6jH47^J%5q\4:tYd5<KbQ5iPUB;-rP..0LObMMd+s4lc6qngb3%E+-&TNOl080-tPD#&"'Zt,E9AI=[875&9(4qld
%"6(3C/[:p^,aS\<&_OA%*eFs#I?/3H^g`#5"WG*"<HY%39G-nB/7QjmK3G?%68oS^8,NpUL>^R4$d$Y"Ob)l4(gQ&25V7[L!E5H?
%NXTKl5a7Nka2`TQ1"]baS<Amr9R]5HVCdD(ecpdX#MA?_eV)i_>;RDQ#.fV3^jbjI_&NY=S2^2,#I#W4*)=[2&DG,m+9rJZ5R[cM
%(]s!o5`WR^3sm!R&B1;"nnmT\/28V6^j!e3&IV5_,:FYd@Hi+?(Y[_1@k4ro52[%cN^&1V0N6+Y;+UdfOIdZO.*Z<WUQ@;t)Xmf6
%#.Y1h!"aSo6UGtY$"DU4bUa8#Kik27`#\513X2H+,p&ij>Zl\pM0<ZABqZ%AknVSEZ?LAEWM@,XPN*q_dSf<CdV?#a<3;d,]3u&h
%&O\(?7.$o`Tn[)=42V%9JZhG4-4;P,8p1;[1HdUaMu8P;ncI-6q#J`bj/Q_7PU$X$RO*E;A[j46ijkZQ2+*4oqGKnbq@Y`f34Fsk
%0*_6L$L\/bV#eNWS2<bJHW:V0E;P_.Zak#ng6+$(-tuJ:AL^:<W$I`3MFUB%7?&Ap^gomR_)5HX2,UW\q`2M6Lr=?c)J)TnQuF2b
%HGU=OfYOjjj(rK1O&.JA!loC^0btRW,6Nrg+=gPH>_12i/7g)gS9B<X>a?C$gqkja>?Q9\W*tah1QE"@YrurCJf=t'<O4rj)%l-,
%6SXNk3JDKE6(lCrO@_0,(<O$Q.DuJo6`!<U?&IVilcO44H9m+K-$8(=XBSAtckKhJVT:Qh/+V'2/?&n/VmY/l[3`;Ba<5*r6A07c
%'eA?+4n<(l<e5d'TrVlqRJ@h$[!YS@._od*C-Za(lKUt#'pND8EE=SZ"pl6_C)H/fVnj+tS:aWH_%es[X;dVf[%efPp*_C'6:3Jk
%@s\j1(JOpP)0";o/Sg`V2Eh_,KLGI/!mu\?^r:>[/t>2O6XkigL8!%s[]M&d6<UMP/!)D(N*V.kX)S_Z;'Ba7O9ctsFUFZ_=44rJ
%1(bQr3N3f?Wk`"KU/*)B!JA9%LkES"ZY+Su/D1"T>UMd%gEX:NGUekJU?*Bi\m>eT[.%3P!*0.DltHH/W!j:T`j-e/;0=N=2-U@m
%#-qUS`>&6V$bK$);IZ+]..p7fiG?dG"fQ9h&VQV](-@W_lM4oLbi5I_ETVm>3#]V&UQ6B'Rh?M';31+6d#i',[Wr;"5S5i'4in9J
%0",aee/J/r1#OH2kV5o]e5/^V(kKCE?G>TQd-saP$fr\nrdguj<4N("VW3bW-iq\Fn!p&f3ahXiOWUhfI]P3g5^EKWW.=V)8X\:[
%Ttitd%,?M@'8#0s4tJ&kL-l.g)K*,k>_KIG/4bi.:VK6EFW;]dCE,^`6MX<hOt$r$PiG[mQ]n/b>/EW6i2#Y&/`M\-!WoG)>`U-_
%]932%%Ik:pZ'gGfL!$A[KX*uV+AHgt>hB&fO3ZQ=eMSMePKQ7Icq'mQTu"XAU`Hir-J)S9C]R\4,of<HTTk']-X^=1^52(t/HB5;
%-qt7<es\":$<8oCe-A;3i[J_7V^:%L1mH$Kk8c%.W>&,XitUucKVfI:,!Wt(VJ,4FB1aer@a?[rW/4,?^lLm>*SY017-+P.!21l1
%E^8(4%c]?!<@S`oCS-^m?[sec^d#a7F:]K@00/e=8hc+p.<dUJ@YYfB[;6utS'-/,XpYQ3eqR[$0]lY8CWPJ0e;5Ts7[YhE]s-,S
%ia)hU,p8A.&<.'970Ng>@BbM-84HrtY#ou-Sj:(<9ZSc=*/gj7&:B,AZ>!bsLTan?eq0[g/mRn%91,(kRdZ\*>#I>Mor%&ahug&#
%Eid=?H5CSJHmFcgn`nn8gckkR\0+ce0^rgOahn[.Rc5=k*(r`B9Ba<#>egV6GpeX*Tlm*%:FkB0.$baNA/^T)LdFiX)%pG#pkfUF
%PoT==4\l7E$m"ou4GfAt[NcF>^u[0AYmhGlZ:kF9POrRelARp;VU:A'O2Zf>*-(IIjUhO(%RU=%i]E\Bf1mIR]L*0r0Ta1E8>)s?
%],,GF&0S,p\r?bp'r1>*:U*,9F^5T?&PC^'AEt%cjg]cWYl]\T/Q?g8f':_)Hn2oU_k44SAEgt-7(1$SI?2j1Ta2:';mX2E7*%g4
%5-gN8e1-S<B8bs@.FX=#$fIfG.lfRs6ZSrtF9B5a'Cp!;q!FTLa5n-X1E__HM,0.i98;^KE(gA#O'HQ<8hq4>9c1GS-6TjqcjZZh
%b(g`NR&8XC,]CJ172hmePj:NCU`MO$:KJ)1\7"GT&7J6jAbbO*B6lpn;%Gs%N.b0sU6tZuN%lDE(5N9-F&L,(p#S7F;5c$$b!L?e
%:u-2EfJ@c-\,lmjLG%M*!*%*[Blh@^YtXPd=f*KUaecPLE':$*4K43HV(Pa4H)fkfJ2S2X1(^;a&Abi!`&.i9C(024R;,35AE=#Q
%ntkQ)9*>@PM6Q(CVoMCH1;VF`<nYrC"VD`,7\H!(X*mNt5To,E#YJA*>8a7i+qep*ElA-XY72-L)$i`6BS=MjZ5bO+1'0-B%\I"G
%OGa.V5S9i2nVporO!T&`3lAI,Mds(5nDQnM!nM1a+bB+7E^SK$QmDJOCg:*SM"Q<mLhE]M)XQ1a`UX-Wi6/Et/Xfi(lT*pYd0qrF
%Dq3gB[tf=F.b>L-Q!174#SQl`/Hu`J<BjII6sKG:$Z1H?K68JB30`E6!.DS\iH#m-:q4bAD]b8R_T'Z)EZm9nkQ1d;Pdr;s"bA<C
%B*/i\Z[$+B_MY5L#]gnV;-@^aW,r\[qaCA`(F+79"Tu?@:`'EVJi:NuNY\H9)gcDKiIVL$>&@3$B;*WdM^URm-)tPr1$c/l+hK\;
%$q\k#Hk"/N$grf^0fZi5ZL+;%$?cpq8fH+9@MFVR/ffP("QpGKN%HafCg6EC.QZ7[F<-4;!(-+X,o/iZ8s(L'^lo)l<!=aE#aZdM
%,5Ctk*\Eoe'&DKGW1g%E3+"iLX!#a0'a0='Lun)MQ7UeQe.AkKW$Idb)c3b%4C>7+n7K0;$HI[[</b@t^.;J&TNGV?>dE:A;R=:[
%L$^r_G?Zm[.<u*d![YDYj',"R)Ch[u=n%U]i\E[uOjLFc4+r0F+Gd^bFh(Dmc*@@lTTXhVj?aI)d20ZM"V/'e-m(u6-036RTGH<G
%K%Juh3ZS@lFB+.=@3<:4/fP)G[5<PXV3i;a0O>>uku8[#2<`,e=C:&SX,%)ccTp^&b'+1q]1JI?<\\F:$C+D(Gq+hlHDW0\[fk])
%7RE@Agim@&_j61/5L=63X%Z`JRioqNTQtYmL)W[c;W.A6":R9UkTc-uLpBNN.uXVc;naoO;S-D4#HS;qlXI[;Hc(&](<Cl'Bh1V1
%!uRs\<]3k/lPaGprSiMdQlA"kLV_JPBr-GK/Adh#*P;h(Af(PSNf@`q+G<'A]tfn7,=8@<!3aQd<rgbg]=?1%E^,3FS9RS_#f(Hh
%$3'hURPic/FMo6*:$#Xu^6#lf$@kAjMf`VSf`Y@rEc_Ug9,L8(b3&g9U(,_9TV5pGs4't,:"BfuU/5p4<_QNHb]NooYDW$)+mK&=
%aD.9SkW>pii`9;QPK$N_3Z$>c(6mB1;@=$Y9WrI>@:2]R-K)0GRmW^_bFC:'/l`p+6$<kH#umeBkFe(F+Xm_e5jiLKDQP3FPu'\l
%^mB%.dDQNHaBZGj6N>EXI=hpWHrT3aJtR*np@8<.gmhRP`5<$B<hFE;"s/]#MCIQ>/3^@/1;4p:;P.+/@rF_8cG;phL;)f2p^d[i
%5U?nQ#>o't.Eg:TH.@aLKkcj-q%1"`o(,ji]Z$4BXTZ_b1WOiIgp1?HFB"[8MZO24XrR/GhULXZ"jt=JYKc/:255A%af(VHS8@$/
%j%DJ4;mBnY_pOi*\_\E^&r^N8`J7Kq;2e?"?Cp890;(pF/CYGk-7%+i$Hu=X`OM\a(Rj/FDM56;A2fbqXH:U>I"j95M(4JjFiAoH
%(El4C&0ho>Xt.5j-oo=Ka:%#X4I6]d$q.hO@W(bjESQ!WrJOFVZ:@FfN]S9hi:80i?)>t75Wl3(6&c>Rp&T0dDKg>lZ8i_`.SH45
%aKTY?IT-D&`#t6QLsMF?nA9sWr"U20=-Y"^#GVV]g>cg\,kU#9`dh&?7g!2[JIaoXM<AqM6^^1N4c&>(`W6Z:68$d(>8"RlO)Ob!
%`3WE"al?!0W@0Wd2@p/>*Y9+hc:,u0&*8ZM/-m"C%QOW"&4D&QY"^V&M<M+iJa4;Pa['JPdb8`l7[5gbG^Lb@!b/GrjHgKe@\>o;
%CMc'f+o-7+=s+ud_*uG7X=J_:IMb%r"7RXEZhG<rH@Z4Wa@I&%UG)Z<"Wl=Y0F#)a%EUZVhkM(DiQs2^<!q3.%T?+=>6NE:n8r'D
%$rg+c]O!rTg!RqUL`I><8Y8A^2W&t>SJ7,PcMT"T+JnhNqdDR0g6(%RA)]#DHu[:p37s8[fSVhnJIF975X>gh@4QPj!'u3pQ=b-=
%(jEn3*$H7[A-"u==TZP%4Fl)N*2,P7E@a@+K6c7=]N%6YRZ7FfHkh^3_<u9pN3q,3VEd7J$FBfo]S(oa4*5WG"FQsOjl"'t]R6>M
%#:LHK7JcS/f$I;[KXU^-X8M>[L>8FZ\7UO>Tpsi'2;%eI@.s.+G_BeE:'A#a\`Y=XJ0kAt>m]T;/RU19e.`;k3s5VI6Qsr7J1n#I
%(@6m3"JEk+)W-P^V3U;EO;K#j;Br6X"`AqNpd6t2>cCWAXho2]3kgJ'\JDsZJ9oI:+r)/(9gJJ.'bu3rVnjNlM7Qh<\O!QPXWcSf
%kF_h60G<foRYh;d<CMd.4!H2Zg^jr="7]1u+DgME;:C97SkDKH>^XYWX[.(1$!Cn9>\G6I34T'GpkBj<bT[4,=I@7/,Mit\@r[Ja
%]KEpNJt(>o'Uq*&\jA//0N<`tLcX@B"WP47[4X_&P<glAUb"5gACOVRPYK+nK&YPife=/WQC"K$@HL*BQgM=7WXZ\Iae=$"Oi@,I
%jT57AjCPS&f5b/IHln7?'_!\eP^/[74*oVcf^j1T:k\%gO5bf[:'KiR&5E6,EI?)1!@2J%&6!.;4AQ^VEJBT#>O3*H7U::@#r!H>
%K`L$KL-Q_W6%$Q`LoIRF+Yf[k[oh7l3)*%t6b[5W^?d=DCus`(T"8-[E!%T+fUhVGq#)W`\eRda&#*-BdGU`]K[700!,3V.(L%RO
%/6cRh0&J(Ri<-5i9]MujKbkiZbP(4n/siBl!F'qo4:M%jU/Me7ZFO!@D\d:SdpbBHRJDBj3=<^lA:TT!JiN#Wo7aLN`Nu^r%>*n/
%E5BX_*fQ@#LA-h%Z=5\(an8]I6\PdPCHcKFR@JtR(gukkBT)1M,lqN7U)"R8dV!e4!^.,pLYT.2U^.c-?EO;d=AVD?+((n3bBfH^
%AHJ1\)]f4TUas@)*A-D<(EQ*;2PU!/QE0"`Lfjpe>\U`nogS[O-5Wpkr*EZ647)P8"r:Z@SBS;6N@9Sj\_88/$Nn^4&-bJR?93mT
%H/&mr-l`^>iO(]P.1>B5]EiKM>RTOu[!nHb%8Rl&Q?W\P\sUPM)5Wuk;TO&C"Cqh[Es90Hnd!8EH(LuRg:eqQG1g,.A0DcQW[EX.
%p3q!fSh3fQ*3=qf!$<aE(hI[a0&B&?&Aj(&(bi\Ck9Y[27p@Z2Vt0o]!bK8gW'rt3W?>St+YiX"!?47"$of5b?U"Mr1Eaqpl8&Vu
%Se-6'Xe[1'0,D\=Ceki0qL!cM7-RSt?27NpE("BXla9*o@H8Xq)b<>OF)h96.*(H.QlZ6j9>*HgNt`RA-N"mmei6dQ+PW#!K^rF[
%5`U9u$"eO_qYF582]F?J)8c%Q"Sfh2!N2R6J.%h*8@U+P2$O>_WaKfhms'S'P"Q(AYEUbYqM=Jkl3q)?FBo&m&IZ$d5MNXmE$u7.
%>)8jAPqA68o.pGU#rgA#i=J)(FU7e/6Ih6NH<`BP&;hoQ=4PrmVW+jGq%8!-!"+J,Rk&KpN*I(A/1\8,TUD>s#6hk3r8+@(LQDOk
%a$DP2?RB@o(+EnK.M[;`TMrQBW"=M:[QHQ/`)6\2NRtuJ#R8Y3`Qt?KlE))!2i5[mhhrT!$W1FXJduuA^kVpqNZdP%^2[Yu0k7(J
%m)P0&dPsq?9/R:6i/;])H.1d=55[6jN>FaF%?V)u_.NoB=d8u&r$3QFLu@Sg^b%b\-Wp\l<eoV%EF5'M#WODVe1;mk?)82S*=t.(
%,!HLon\[?DluMTMWIuie:^K4K(;GHoZ5l,9f=1NtcbPGPhsJd5M<]`u5669K,ogfONKqCW+Eo9Z`17$[Hj;$4(i_!^.A_KE-2C=+
%o_:=).Xk22M)0?D/d.]t[^B9aLYNJUi>\j^@4SWRNZ6ru@PGK7\qc!#TjBtb</a3N.Dq?@I%0kb@mK\[**W6-=O\4P_Ep;;T@I>Q
%!V:qe;..YrGRN1k]O52g_Br+Ok92-d=a^#I1h93u&1tjh?9^8O+ZB$.q-&h,`.k=*`/LK;*.GI#_g4j';HNXIGY!T:<Da/0#K9^D
%g`ooGn9U4+RHB/cY/jI10SI=J0chd_](*)2bt8b[[u5KoAT97&OV\]fW2D^.IV4[Z4+deJ=16(:$r!`T)3>Uu7E>rFW*J//"OplI
%-?gs`nPQX9Bk)TO&in-V&:@dFDW85-]*=@d*l#8%YN<@T)(?su?,l=jnhZ98(!\aC=iG>7I43&]E.ACXaWT+>Oc)ki//@sE$<1\"
%n;4^TL`\dGZo!@AXo]a^_8U[2R.@mEm2llg>J`*T'$bPXItR@Si\4Q0__kjrAk9ni8g+>jZt@2E`!-7h'LNMZkn/CG&t5LZ84oQ-
%a:^Q7cBm_ubie8r\5WfGLJTfp%$^?Da>*q!UM3@q[G4,ZHcb6n-".?F:KqKl:bFiNT3jngrS(Ltj3aS#ceQ)'=E5_0q6/:G&5\ng
%I^E-R@=T4<+m?1mZm;Z.)+%UlK:\A3rHj6HjsTTAbj#GT,"=)g4<riTS>RHQF#-G!YUYPV'/X7*1k@Vs)&1D,g5fI9+t?^,%TG28
%K%Mj'&jORE#1N6c^/k<mfEo!lT8^C9A$!NcjkgrH<4FtUi)&lDX=q$U`T5T@(0mYSW7DGh"9kY@%'6$;B(!%6%U3"1Sf!AP/OPVc
%+#i9\H2-KD[fIb@Sr`^J:!jH4RnWpP8@,'"S!q3%\l\5DXa&WF!Mm,T;gJ-p45N`,ViCTm<OI)H/#\Waa&PG_r0hSne.5KcIlp]P
%G3-$.AXnc_^mi:>Lc`+EB*oDY81hA_,b%"":/`L&Fbqjt8;BjJc8sJVhuH`Q;K"E%LJuo1NZ28jcao@aM@S1@R-phH9BSPc5qgVq
%2;d9.(QGlL+DTb+WR0AR,B]Vg;\SZ+'P]h0I>=E,ojq-*A<6U2J73*9FCd`mD5CXi,kc^ejdoqi?1Sd.,%iM/,3EoG*bWEo67V@K
%m#<J;&FHasMd8H^ZWZAr`3Lq5*iU7<pZO9a/]iqf5(..AMrU)r'.>o!J3i[&C6TCV.&rR`iCKG<;9m^p-Z:;W%h/f("'>j(&I*H1
%12`>[*"YmeS\VE=Os>%=U?0G/WiI$2Pq$XRqLUi$S/`#,$5t:uf.Df/=AkF0,sVb(VUXOld3'#<UMrc(>32q(.&&&Fm9E/,77WV^
%'&>Y4]VZlj%8C!3O4OGY>]U!GZ!.]kBSItV)):]D1.'9\osY6iY<eH6(cm>.c^:lm,1%Y^X!&_YXKrj<Q&Z4Nau#d#Q#E#MaQ^7%
%a/I+Uo$nV"f@iV`*5STS\m,gR#ijFC7>X^pM<pLKPEo1X]QL&WVRKLL1md[+@e?u]MZ->*j@,Go)PA"Y)P*N</N=Q(B;#r'q@-Q>
%cK@[<i!jR=i:B6V<#B=li1Ln1nA`7?QtC8`fPee#cZMq@o3!:Qi1.;(Zr?\-L/k*u?O,o*=rhjbJPu/_fS4[AS?Z*B9Z4;Xm5Mpn
%#&17[4\18GPm/IZ#M):c[NC:c#(7n%"\tXMHb#0.JMPp+8RF/$,!'b(ST&4!'"<X[#$Hp"Lsh>n.D&%oX,r*[,FD[riZfC@hAh[4
%G1nhA9r&a#Es+5@d:?W^*2:cDBe1S_1']P/!-?F>.Q!0"Xu"06J?WaZ8_-Lmm2!&``?GWSq.Fh`eH"ZqW=ZqrK3P`N]3d__P<p]L
%%!HBaP'58aG"/%rs13+IjTU\Z?5TUH'cKd^mW+&ji37#F66t]@KCDRp;H1BkF+/Z]Z03msLJOHC@L^o2?#K64?poS'ZHRjJ*>=\3
%GTqc:N(eHn:T'HneiHT+KUA#uSPZRb/t:RpA55)PqW7@Q38+SG_=0_32rmi-jGnc@R.KHFU0aGqH08QFJ.#TiEo)OhDec-%<-l,7
%Q-Pb)o,7O);fc]3\lLJf*L1qsk's#r0LDjmlg%PZT"n))-&#>hZETAM-Zm0'-<V]?_9.s;AXXW2/Q%9,>#nmS'g_D1Gd-Nb3jP[A
%X;Jmg$FTN"]-0LILeN?VXqKND\C_!\M8+E%OB7@,e^5Dr-m4TJ=arl(?biRaN?3uIBM%JeAr1ZR76dkngBU/MQ&CoAfF*+2i81Pg
%c[d8_$8XTZh2G6A4c+65:2YrPb(X:5li0um;sE.8\"]\'[AeV/0$k4UE!o;E63^VLMHC+kXsI2<os&5M7S`6::=[c^0oL4eL'_&X
%iWZmqmUE"T:-^o25:rkgSI0$&N(%HPBV0-C?I")cZLe?bjTH./Q<&,87DtkT<=qXWQr7FmXiemkR=";='>@uP2O(8XG*]h@c*ChH
%*!bIO/*i^UM3'Q5,[:#ic,%6$CQ*Xs1B6uon?jRF(#)_r(os8/8oQb;eqS_k=me_OGcC@Kb*MTHr1N"+Zbb`7IIPa`eu1_`:TP6&
%/8\?S7,Y"A167?RCIDBLV^En7@&9s*g_CcOHF,g%>"h8k]C0UAZjGI$NXsf]r>VK]&K7`SNoWToIf/h+g0]-gSRTiI627.e!]2)r
%jNraZ.ltI:Xr<;K53/3tnl*3qT2%b>9a,q.;`/k8@M-G6a_6C.(W'Jp)K]M\Jnru_b.3pi(HDr27R@9B/X.FV[A%)=@,+eB+PM9-
%::4pG6WOq4`1:A9,VhZA7pSZBRUpg+j'6)NNJ8A;Xs*iN0MQit*I!9TBn()Q/hp'hMR+knUZ1eFQRsFSASjj#Xs#4Qk4N.YQN1A.
%_H6\gd'mss_BWWbMWUu(aT4,&IeQ`s"?\>J+g)T$We1!rQrXER!o4Vf:lJC-FP!+JK-9i(3b`Js$HM_IcT-0ZN8-a_[cdUpTN&(:
%5g;J@HcrWJ3C7/V2FhZhp:DY:<bQk*4WtlHlU7%#au.'Y27'8TZ_1ln$?j6&<J6j,i!-`p#&!ML[.;VQCJd6j7\-]28(?X84.45F
%ofnU9QUtbildX#=)5lPeJp.=.BJ&Ng/uIo3^NCQp^G:C*rS2(]l:NU"Y[(>/\Y'UMh[^Y/!*$13;,o0\jcM&l?83q1d@s`u^@1@a
%*fc[m;?N^s2Iu&7kn;PN2d_Th[19bF&b7)bgSj"pjE?7r:r!s2c)(6"W7LY:i.^rn.9sNOUeQ9qp/"MXh5B4K+U^:7Jkf7f%QC"&
%rt;]mrCGKKWlnM][gM>l#oj<C>l=`K!"9ZLcMm663^nN91i'('`qGq>RTh7H(^Y@S[fq',A9YA;5:..D40pr%T$eR>\s'0k+h)oO
%11qAm*mu%>;.p8VP;'Q7`ff6e@]_VH@B@72ZCK0?$0=2KRn-Yue>Bd>PH3hJe@'=BU)f$j></s6$KP,1K8c!dn!M.hIWS:WM>1XB
%BC;0[8[e(69iSdh<^kF.=7\XBLS`giMeWc[j>5]$7CEdtnLnI?(BeS1Jj_ArFuZGLN$V=]l+M`Ei+b]g7(*)]89M?-+XB(k:"GhD
%O]eBlP>I4LAuA\o?tk,kfopikUQRlu1_pGI[ol#[)ZL^T4^!b;&P7D'CQPk=RI8:NL)R_]HE_E<>-JtKA$@FDU2dChZSMp6qfTB1
%3)3j3kG)UoRdFA'q-#>IbF=h(WOg%eBfVB\R&@+8KCc>RYYr,>:S'[YX]mS%U+d-rZ1C^@/ZNfTCWV7]O.Zi2[7gqZW`;;&]j@^.
%0o'"9=6'krcFICLC2JJDc9&$qm<#jo^@>$#1.&%A4<9UYJuje)))?[7An;b/fs$g>s6-*OJVY^YT_<0_J2F=-?aU\_ps8Rk;k>JD
%(DAI$,VS<H/?pD#7;#G\h<uArpt\n2VPkB%J_-qt.?o&R6"#r5^)HA&#sZ,V(GX?p.0Y`;m;5Z38qV\BS(>:gfdi2eGp98#i`bn@
%li@P>5(VQ07h?eopj;&.,$I?tTaLIhGdnCGTV8bc2_hn9F!HV=p@QlVcjWm`5-8+S@%hVY<h\QlFo<qT]$Bf>fbKZf7pZ5QTXFo*
%DQ4M[kmX-Pe[mV!Brgc9XWaf=Xl/@bnkqYRRqIJPX(6j"]ZeGGcepcN.(%Oo/uiBWR7nDL_A)9,*gd]F+MaG!PSZ$%7kfL-[OSA!
%bq#gpd%(;A1rkO=B,f@1B?b,C$>a0`:st6DNYOTL6U%<c:'<2rm"mY:p)uO)/YCS:gp.8/EX@'PpQP5Np;^0L:4]^VD\a5#QKmo=
%TJ*.&e1Ca&&nOMIn!_L-XElStP.oC(C1ILWUSOWeAV-L2/$QGm*B<ZYXoLp."u4r[Ok_WF<C%D%Hk>">=pe@qQVQ5\J0-5SG*L-I
%'Vej*ofDJtWdE][-s*<3^B-m%%+K)B,<R<O4$>h36BZ9"@'i&K*Za7i7b%P`)HjmMKVnm[=3WP/+)2nM?FgAudD=s$]g_T:TOBN&
%1WBJE=Ib`_1hp't0J"2[+#;Llp+=]e5/h7FjrH![M=sn/(='!HIQHl2ldVQoTMB4EUqf/GV=kcK$Js63a/\8@jaaM21<CD!ofga(
%@$4Bf:#i#`P0ip!<XXJU+gB.ad0_JK:2?b)D3h-%<1?1YXu<<i7P'hJYZ%eJgMp-U?I!3(?M9$5=D;g(C@IN@!):Ec9S@L=LG1o=
%Iaes;=K/`>R!+\:^8KThA6Eb;@;c.Ce0'T?9&6FhQA)=BC9Em4Pp-nOQ4_Es<+ft@W@gKeDec1Qi1a%]U,)HO"(EQ*XuEUQDfH]7
%A?RdPdua`q[p)S?j:%+3kA7$:B;q_T)A[.;Xlb=g<Ed8<%Er#>].$bAMQE^YbI^;d7&aV>g?f!FcAG4?9?gmIpJV7/g[Qj0<NQ/$
%auuW2Yc43F!op5A/<pq@[c\7+/1pqK4g@kkknT$ngS[@5DY--i6eW$d^C%07NPNgLh-0`,()tb3"e"cm!.n^7KnWNl3NO%4c=+^H
%9"25f!`MF*ZCG_].Mfj['<$53EsE,C1S<kk[,&(3)^RUtcZiJ4XJ<WHDFWaF;>gVDe[:0RqX`i/WAg#Tad!9IiUUCsWmsiR*KIm+
%/5D@L.5[fG"mN+(dB++LX8>AD?'Hlh)o&+\P-E>p,ep[i/ZK+U8!RYRZ*!0^<0fqBV/]<JDd&d>agGTMO<_CPHEhEn[DX<I]5A3<
%"c]l*#rQ?)Waq2&?o.\RJngT2B?Y)fM<O6O8ltn+GQJZ1CT!;e8&[.(AnsG_OC3]1IsM.GO5SL:TOZ*JUf^2kJVIt6:4\cm`^/lt
%/=m(0ZCmRo].,,Od%+D$;rh9.a-Hkr8>]\QpsDlbh#`c9fm]lOPs0'(Q38[(d?<2F@s$%l,MMP\W1SI@gmf/Gp>AWDE+RDBEgF/?
%?_&%oE+C\,`S'nnh&Pj->J%JbOL)=UDc!l5^,&t.'"gU+XYj>6I,5#0m',:^$7AYZ3a0^o'S7p[P$n^+cQ->`.eg0)kY4#ZogRPo
%pLWXrJ#-e-p+EBU2#VJc&A_\?Nh4cUKs7j4NYQF6oPZRhVkI5SgMq568[S:IPalGJMh3EmXO%I_,RU^)EY/_CZ0r84!!l_q`o-@9
%aOVn91E'Ph18_Y'o4@_c)-%(R0=EJ8W/CgOAD'-L;&gHXINOmQ'UqkOa&VTaK+T8245<>;Zm]rMnC>"W%8D?e!=>WW[jD9:Zr9mj
%@dRCIWj&G!+G4&c/ZT1t>d/=IIRJrUREQ8Z:8]?lVO><q:FR2YbW$)Z.!23C&"EYZZqe(<LUqdo2+ZZ=/8D#ZA="I92SbR&-<UJ=
%PGo\,_Q69?hjQUm((Z%s[7+:k:(Bgenah4&4`?.OTl98I_(8eYUb-'t7Y2m$^sjR36m&JS4@7$j\'Lp@NJIapR=Wf<ld9*E&TO>r
%k4TTtl)[j9f^Y[MSSN`L6$mkk%<73X\)-(XZt.AjVg5LVX<frT%'&ZFd#K'i'4S$`'DU;Q*0+?;$l)HElu=B$[OAiKGY3KBlbJml
%]''PqC]Lmrk*L&;B.]O3-n)0tOZp4M6p6Aa$FH*5&#9srQ(Qj.TeKUU3=g:i)S4'0^k8PEI<r"kU[>@C.Hf*YXt&Y^fIs@mkFR(M
%hnO-.;lY<f$6#s<amVh^kboa;b3;0<JP%Ln]$#)oBKLu^g&sar^,q]$kcbiZ60]d_(.jhoJg_8brt#laSp@pgduj*e'b49?Qt&)%
%:Uru!eN$ZEPH"gUHH'+A>1JHj19/jOb*.)hQqO)f3sn!,"]0!0?>Z"ZD,`$ciUs.%il-Ecm_ks`A%@EJK&0au_g*b&U22%Tm$(.]
%@EHDp<.3$LbU^pD@`qZJ5XK``;pYj,qU>UUn++*UGN8g^lm1n\;C%1PFAb[/gh&T#fF,%S6`2NR(tM\]&XbHhWb=]LltAY2nC1rR
%;V7`L)baDY*?pLO[L7c:=o8$UTejVI.+Y=e(%[Ri"5.)I@6uX/nDB;;c[UtN>hn&"O&u<a^@7c$PH1G(o+%K9c[np;/3d9?/[AI*
%FdsZ+"WeEPeK^]?F5^9%$%1RgEJ`<8!*X#?Q;gX&I%MJ'+Z^tm5`gDg9,>Y(('(Seq=[6'1s[uM**2N-*g'k[8In%F_O6:\[R1t)
%!a(2pl$X0F9J4M(*Y.5H#Z'Yr#QWA6$R7M63@MhOg6ksp4$n1$!s-t&&*Lc`+a9Q8!*WCB/F3L+oT5L0&NLUM>,g`;e0oC/=aTs_
%_=-(tpYKkll$tA2;fWd$B#:)u!(&4iRbZP=<hh+L"s^-g_(l#]="lKSP0>$SSs8i2=26h9NM-="mtmC(`=*sH)+fH]A%oaua%1dF
%<:_CH&#X;B,I+[I#XT3F/8kS(D7d'0<G>uB^2a2t/I$FP_[kE19IOh]oIKJI.4B<O*Xjm9jr+j@Jdq%*mDZNjK!_ZeM_<2'ZquF,
%MH^ZmbD5Vm`_%jG$1s>eg]965`<p$F.1']i=>WPV*J8;K(Qudn*a3@Lc42sWN\$(Tkng=1@'k[7!@pDA^]>!+m?t<4<tk?,%"EGo
%?L87t30>l&N\R--1/7PC1"?e0eYR>H&V)XV2D0:/b'!Z=@OlH.GZMS5.J;[9FU.^rSHtE4Y.ulZ-?an#E"IA[[m.bh-VbC$Vu$Tb
%-"6I\Zo[m&/?Fl7pe;+dg_!CX(?Y/W>fSGX%iXJ)E='o7!lUQC;smLtGE5*M.p?Nt;,[`cp_8rE;h@ZI0Xe0A>B<R4+d7VS6KY;&
%]HZER38ciX"r5u7-<b\5I'M'IhEegU]1t-WSWIeFB8DX7`T6S-goqP.:5KONAmb-L/[P5*1L_8T`K.pfR+5Ep"C9B-cPkqfg*1"U
%U>YsUGf`8m.]]EM\X%e;\[H#0[AkZ=e*^Q06^90[V!?h:Es[7HBk2!^@]g)#,%-cHNV^IC(e/$h.!)E6!&VLl=jBQB$,/ai'odNH
%EZOH:\I[(1]GVaF*R!<R%*Baq[H'G\a_+IXS=qj26=/0FfjDW'@[RJAC!0W;Df[g%.L;VNHX[)c:!808s4JTcd/LA(UIrN]%a_!7
%aMU2A/SHR!UCMi)IN'7OUi@6iSEsM]Fcg&USLICCeYX`7@.RBuZ\;%SK)V<8a!X0+bbIZPs/O=KI+lM5PLD*NH&o9me;+4E6+&p:
%.oONZQ0->SoS`Wp_3^(r%g!IS=7F!T@"C&[n-Xh8rU!9k!><J0&p8ug76oVN?$=R4P2seCK;gr"#G2*@)^nF-9R4.Z=naBJOH0MK
%6j*\D^`6e#WHM<fQE*Mt(!qrd#075YW^5V.?7d#'Ut65.2^ZJ$O^Er#1)^%:h-*RZ2"(fuA%<[:jaD6m#d3Dmn_]@?^+;%A1,OQ0
%lS?Xj)*Nd@'K5>U9IR+o!XFB3+I4Or_bu-i;oqM'7\F'i7:uj1a?b!B^d[MUiF!!:<-?XXHhR'7^uha46/,.6&@2$OWS3PZUsV&P
%[DW7&:YASkB&kZa:VFem;4.4*VF=`n%tkq]ne#t?HF^7<.UB,##,h)<A6ASs@[bf6/J54R8FOE<YK`)0(mt9IB%B>IS%LF3TGoYV
%#Y>'_&2Hd_L#Z3?9b\A#oh'5um--1K597gk1[`cfZCQA"#Y>U/K^432$0Bf7P6kp)[WSD*2!n@Jqq5?(DDTXC(4kMImL#2>f>@m<
%`l\9*k>TB*OC^]0!r'+_WRgOj3YrC.9Rh1X*>28@FDB"'[`a#SZfO9DqQPgqYsnC7Q%fs6gjpi)Z^IIYnTre.kRn&Fqlt<L9S'p*
%TM]<13:#4fKhg"YjV,"Y6\,``g1HSX<MW5?=*m=XGCq0+,O0\eL87nY7Vn0>S"kh7);hmr?X/Hfm4[BX`!mp@Wnb(VdU2A&,,62K
%QOjqJTGnM6Ko2c";\rT@]a[IZ1Icn<EI;O3A9D!3270dC:/X$)E)4e-6'\1'AV,#FW\-S#Y<T#`8E%>k,3kU39tKE*d9P[QfL?lt
%e/F$OATubqK9-udNH54F]eI<)d)aVN%*EOb^.I>lf,i@/3=6<WXJG2c91E\d@HcO#mi1q"8eM$DBG'W8OY(LU"!1r1jaXZXX11&u
%!H`s*NYBTVfco[%c/ld'm;tWm"g%R'WFB")F=:2>0;dr2Q?3Wb[B=^s$@*:Z"X:hkW@2cI>:<Cc83N%Tot7<"9U0k=C?ASb"JN1a
%?FKp<$R2CRdMaGtf6apUS<9R;>s4.&B\\rjp8DSiPcZVU;"QmhlYW-j1A@V((PX,r&_b35!*QgSb*Q#aV4<6L=n6d?rEX(((=L1$
%R8HDmCk?G>!:7bXJj^?U&-mfMa\jOC(I5CXfZB?>S;g8"/@6QaRO>Fsb#1"RJIKNokGZ&Z5rILJD,`NPfp;HM*Yt]N`GCq%`YE05
%EDDX\8%qB0Wb@0.o(ZW=9na="Nc!c&PYd[/8q`*j4oWQI;]c*e4`5:(<AUWnMr7O&e<5\fBA\0k/H/%i3\uc505;.a:<p8JG3Tit
%,Nb`9(HYVo-Gs<&jH[uA=s03@ZaS+8UG@sC0*:YKQ#mBJPE'.aP&j_"AOL%L+q#SF#B=C3ZBQkAG4PpS91>#t^:hA56HTQ#JKc.b
%WXX/,"9PTQQ<gIagU6$)OqOd_&LXJ-r@!^NTrrV'*#fXE=A`'HS.,CO2A2)bJt>dI/QsAkqSa*QKq2g^3T[QH$.WQ!VGAX(2-C%*
%+Lr-(Fit%N@p*PGAuW=,Wi9<-CC>j*)d-e&!C)B:A@$sRE$&Y>11$Rp7Mn;1C;sgf'2]OGmHF9Yf45FD8+"8J+=]1t+)`:d$E7=W
%;5tMS='+IU9Tp&k+J!ac$PC`-.Q""a2niPt55c5GIQniS-P-dUSt$Spc^/:>(^J1OAWZWT#0?V#@r6@6Pq=!K`0X3/n[V?[.u70[
%O1Hq+(I-ZV[S[aW+>W@T$%$%RIeq#nd>dmYh3ZqNIm<5S2u^AWqqq<?_qYfm?,-%ks5f%)J+qpZI/i5FIe1%`qq[>5r%C;4ju8o]
%q#):apqqTB&H,3DLTfV5e(=S[\5il5"^Jcbja[0t[t"=r^Z)i>qr,SFpr>V=L&&XDr.fduVftB%]79\T5QB&js7/N^Q+m*fs7G=^
%J,B-#rqkUQ_sdU&FXJL*Q`n&npg='rr?)%6I-($UJ,fC1^:Eb%J,eONJ,K:is7q.ms4]bcs82CBs3=]Zr:n$Vpoj_mrBKV!huD[4
%0E2Z7IX]46ioJ?9J+rp1J,?i"rpV#Es74("GjI(YXZT'e'GGla..*P%O&9E8Sqe'i@6bp#kBV%d&`h.X*`!FKR7(;O-=U(d,#6T3
%T$+57[2r,T%<(C&NV@5E:V'p3h%r8eQI!ake3_1<6TphZ7MI0MIT662oji>sS_GPTR`#m^O+Pn*1.1fAJ0hoo__,q9VK-hc#OY+<
%Q<+N7N;&7dO1J]th)G<I=7<'7.4F>q8KX:nqrE[#(V$T7P2lKrM31;G\5>3h`1<G!&XuMt_3;d_1*tPp8Ld>=T"%PM%QN7hrSGh`
%<TA]l[92%W75RmThf9/=<1cM"m@'(@OWi*-8kWE,N[t>kBd"<L:RY<c'NJq10F6Opm9F<[.^XE8hSc7fKRg_2P$8c,D!*<NW/f7@
%q,4CIjQ0b)LoTT^^.][Ikr<c"&k/At7sVX/4ik/=Lp:i7FuFGrdr@UG!E05[XesWF9s!:ZW\em$,?;Mc3>p$'7-a`NrKV6;c?#Q2
%65U[&B]J>(nH40nmJ'X)2G-pe+X5Z[2lNBO`2l>FU=4*q+@iq<$m[u_jVTg(oNWun=,aU#P3\SeJf$7JU6:.3me5^8/cQH`EK=$,
%?2diT]m'<H2F^La61\<.J6pCfcs:/u<E:AK0WmG4b4(V8%ha8d5rBXY\[*MRO;(aI#=_f9Nhq,I?qG7(WRs_7`\e7Qd#t?0>3-Ze
%A*Vkb4,db&n.XcM<#$O?0FG*_7_OGi3J+%?e?aJ40&N%hQ.L;kEWXV[C5s3sA/M\&YrLX2I1DuU_>PT&]1ca3_$ho9dd<Pc$;-ZU
%[.OQEU/1$K&E(7"6s/lfPfK9:1/mk2"_[Z,7RZCaNRNZG6;18oBT4`L-K03g:dUdBLD'([co1*lWW[-YPdEeZIMo)nfW^t'LQq(F
%O`8);Ku7/,E4BL[RiXA4`sE20ZnpF'(.=l5LPn5#nnNl,]bLK(*r/T8m<+jg,`fkoe?]\a-kPKqOo"hc,Ie"P0++#9a[:o9`JQH,
%<iQf^nB=(cjHH&Gd/arYK_2`5`^2@E0usraPuGIjP:(QM4t8$i!:r<RQm'bAP`Jo?>jkppg4SD&HPY"@JH<DQGV0%YYZ'c<WhU:c
%@Bp:`!/4P!?3dTiY%jSjrfe#R2pl\I-D/r%d@J_VV\ID&&IU"RL/kpbqfJ2k`pHcS&j]aPoI-6N`sN^<o6\s*_:C#?5/(oa@6?dj
%UM)L/Jmd3.g_gQ`=GFh>3J,TX7eHs)bqVKBXl#6BjNeS><sb$r^#eCbC@QRQ"a):XXN)1<3/\AANmE'X[/B@3E^W4R1*%/uW45EX
%#=_Ir,Fu6;la9VfcDoq#]aPMT;LuoB)GE\LrnU@T9$HbS$c7F#Q%@.&>89iV6b?8\:JLUoBGZI32'@U]`7!.3`&9SQ9=1&aTmKn]
%NJitfK<W`b>Z8J46fbUbBd7f:*,C_smC4ZuW%#&[+Ig^&"rEs:(rZV'FPlAE>hG&GQA?)]K+Y#RKICA^(06pjN'NaD1S1"+TG[,J
%W&*adElQN=c;Vq;**BdbOks+]/9r&b.t!5KO<Bi-HVZl:6Fe/!\`nabTh;4XLSn3lIeQFmKY37],Xik5fXtl4iLaePok)$d]rle\
%Q*Yf<i*D]>//Tgg4@UkNQGhNUWRWl8jZ_AON\W1n/oL`omdftMTM2XjT\%]4T!kRpPQ3:cr(!#qP0oCOYrF3=iqCa%X!o6(!a&D'
%ES60h/3,e&hK&@c-6.DLlENV<Blj[ILuOct79H/u:0W`[h-Ne,EHQsY"pq$@SAOleU?R4Q@rW0$\V+Aa2.u6C6<<AT8[*m9JIaYB
%0eOWMM@36*%_'G@1'^dY>1;r:"B_Xi)d>AjYZ11><[D4k?A"QRUN)RWM'Re\r!q2=dR'n&aTnH002$K-B(,mqeHJuHeWE\1[,<'a
%<`S-pGoN0G9l]387iPYLWl'DQ`d'N.VUSlhKAggVabX]fY@1QD#bpG6c@')rk\QN61>orH\m3q%\F]4o=1NekT1!Cic:aul4o(TF
%!++,`m91!#IZ3aV25mc1"*h%Y$%_<NZ^g>d3OVYA#:aUG[SH.R()c5-.?:2jnpO"[(E:>i\/ECsdZN\^IT_G;l%+mH0kC,?0<3H?
%\UGR(4Uc`amgmVm/GXD#]"(;5OJmU5BC.'L]grng\R8OCmG'ZE'%EE5)E5r4/Tp/HH2'Bs*4^Sp;Vu8$ci-02qleVC=%h%%?NcYb
%J6uJmUm1bM'H77OL6;Cj?VSa(buB?Za&*3AjCdA+$5bg#e+][N-bLnnAbZ9&a`Bqr,6/Q+N^,S@,Ub;W\:RKUb;>0&25G]DSMRk2
%ftc&Z<LZa8,*iB"`>CBUk,r]-cAdIVD]M4=2RK9@&@!2_P#(1<F+CW1&=9(ol;UeVX9Beseet4BI5i`X.G!)hQf>BUF;guGPl4@\
%\V!e.d3m_M4Oats<eEq.e#_WspT!LRVWS*6.T_(G.Wtf;ZWNDODB'YsH$<[HlOiSNL/cZ:R[cp9B_`,fI[!Z(qB;nG%E`k`GPKCa
%`24BsE%d9OT&BiU,g6+c/'!BqmPOB/[TCR5c]&3SO:=tY_rN/=>X^9l.p6B)l5UUN8o.Bd%o<YJo>(i0a7)-2?hpaQ"d]u[AR3q[
%ifaZKPe0WBB5JSJP+?<@V:=GU#B2GmpEp86'ddUA>Cs.h+X]3>bI<Zh`7kk17N3\sS('+U`Fj@sF+ObJnM[E?0Nrn+(aT/V?903+
%W@?R'#[-aCh&/i_\L"Oe/b1)IQ'a=5Z]N(tV>sjEjOTrb<1^fjNtt'oX1VaE?EY0[:5T>]fR.Y%o0A;E_gQQ\UP_JD`S+&pFnpUs
%;e\;cRebH,/NDsjZqu?V\d9;^SCAAbKlXUFV^n/a%O<\Kh;B]nal$AS6KB&QqKNb4)i!39MaW)N<^Ul6J7<\r;h=i*[1]>=$<ej$
%4P1]Cmhug_&DKQ/L6Q@,Tf^>.86=I0"/%._hjGMT?96_9jPW'5($ne2UN17(gT$?o!Xs'J=@HGb\Xg'rBm;+FM.\>`?HMUf=s7AA
%bGlt@T6,8-oCIc7jU`US-n9lf$AN[NBeu2lgKWH6AmK)u%>iA"\MZthTRt[-B?.'1#aNq<:;\5nb+(4-V99t;%@U)maqZ^M!J^ch
%eC_Kg1!fhQg62.K95<KhU+/dh46Je"7[ah&nTaQ-ipUI[(4b?dL5M]W2<()4(=8m0]D!'U&*e=KT%1q-+E-8'5%P(*Ug%4S603q;
%D%(W8,LieUO8DW^/=Aq(opRAKJq+h<)0N60)hC>S3kBVZ:a.1d5M%*jW2<R?jgM!#Lo^lI1*oOS1JZ=ZV!S>!mB3@mWYq3D[?g^r
%MTZ`_D)((,poqnBj0:H*#FqI*>+h[)ifj!]_o[NMPp4@W_"UN/6?Y"<C;u,Q28-gNJhkY*[LrZ/;qHXqC3)Tr^0+D`.M.KH8!7RO
%=)SL0:eJ5g13g1*NE!F,g]F0-VpRJ=d_,F)R7hT6r/U9DWfb857<O2SGC*`^LD<'s+Dd8IG10lPnmJn+`OHoYf]2&>`4kG&HWCSu
%7b"i4LhnHb;D9%0lpX;;3S+)<_FT#Go,pQY^mk_Jl*JTRA$DS].!12V4mF`3k'!h1+VfEtb0Z#!#rJ#A\6D@'3/CMI%?:3jAqXP$
%,u6sohDOfPF=5h)l[H+`U7Ia.eTY?+j6[P1[1YU"5BQsY#?_>a(:l%`c`&S8-HKj$b5r$O35qhPGGdR+SAqKXG+ReV$'6q!TVaEa
%P`ZWb;7TV^)4OXpW"YQR$80Lg=q1Ad=\*qkr"_SN&YruIG/_5Nn:Gm(TPRaVD(oSddudM\J`_i%>WZ[C$mF1[OJ;`VQ!iVC+r)O%
%cV[QtBXDBLb<XO5;`-%F<+4.OO%`-`TqA'L!(*3H]GEm#$/AFm_p2-Z\i;)0mg^M'<AoU1:sTjh'?+:cJhE9LojsbjN)N['PS<L&
%ZRCqbDF0:q$HNrmGX[ht^*Y=Y])$]^1e]@Mm$OuIPq(?Uq"7b`.EmX*GBMAJ3%G,4ZCM_F`T>PsYGJX>kNI5Bc(AH2U(TjY6luc6
%fFb?k(7!E'2T!oFDgEH`Vc-pTUZ;OJ<Z(.E[-:nt^!t-<:9g",;Ht*7SKXg:(;f>kf\au1:VR;R=nFj`&6b_W$ubJa63')6A_Hm:
%:9m]Vj7Y+9HY>\F?uJe4D[-ROA7&XZiV=ek+ZVF.e?.V*M&Amch,XY)U/n7mBcK)OO`"K>T-G(=Zt'km[,sKldRB1I=KqM%a@b'0
%N^c"(3H>Oa9P@KNHS5;k3)%[2MlOa;0(':a$^Ze`OJm2Y)\*2r:'oG<X/me@?Hr_91iStP-N<`PX4hNhl\3qG##fd?LFu)>;3PH?
%eU[n`LRQU>";;>d@7E`m;tL;>_R+9^&45S:;RCmoV6Hu+ft3c+*3FP)/lJ7QkB;iO/9;F999=nO0N,S[N&`Z*9f;m"Ag-3rpQhSX
%YK,>ZD]GjPG&\Vp4dFoPZ-fR/[oK;A+s!(Z`t4Le<M@nc"nYQ(6>P;SYbslD6-V]`RH?=J`+T@9<lrDcEJ27ZWK<?".Bkt'XF;:_
%N1!@K2V&45Xu9'qa$BpN=qmK\>mDDN9^F\F0f814,Xdm?USu+/2YiGj.I[s7,3iZfm>e2KC%R*0,f4,5_QlL#0:I\tC(sH\k`Z6i
%;Z1%UR6([U'^o/o\]s\5,$E)dH<W85AD62/KGl]BKn)=J";Wt!kZeH)E:EP48XXAFH$>\/@/'W+b]-]t_22$ak4hqp^E+-I3_2f8
%%HgPR/#n;U@J;k2AfNEQFD>fU4fb<?)A^KZ.@km'ETf'SJ4\^:SGZ;Xe)^*tX@2bJ<"<sQ@1M$h"='?G#DI\Y6m-06%[2NTgG_bm
%epqt1n!^eHpLJC4C0pE(htQqNSfGLVZkeDH@K<riEWh4m8S@\">Xte/74GF?0jAZtc0^l.XSs2JW!CP?F9D$e<.[7IB6Fu9C/TD#
%&Jm5$]*ao^Y@!6dh_Qqj91,)paW.S\16S82nXfr)C8K^*-am1nj`iX!!t)C;9B"dp+p,ZZLZ>HJOIO03<2JR@3!Va$%PHbI+\2lA
%qa0VGSpbuHi@_;`EXAle=WeCf6n!j(lPK0(ZNQL*lc%Qb4@Dh>%tZ'f'ip[1bh_]Hg]=$AfO>%e],M5WrU8F7>.Mt@XJU_8E"tr5
%!=g@[p^19>g_?J(ih2[P4L.)/>"k33A[3l;[-0ukW"@^'ee*UFm3&mf@eINGL&a^h.FEZubb[5<YLeT!5BO\NT1#%U:e?QTl0Lj-
%D:As_C=@rm29Xf!))=h33%D56.!OM@X$l_QOLoY=,pf2Wl)MS)Y6B<7mXS>2[-k7'&dA##jmW$5Nbt`/M@S\@?q#j&!?JETI?+tk
%ZekXX"fsXZ@lqJ29:Uq&U7E%g'H)qXISW:<K>K\.XjVBI,OH,(<G1H/n(jQSXj,VL!U<,K7Nl$d>oYLa++&e3e"RfE2G"6??uEk-
%lEI=S?K+E%N2#ZSKQq5li22cIP1@oq>;`(IHUduNl\`*IbiAbK%2oQ#DDaLTe@W\O'K;oI*/d5madDnXn@Z&To0$o1c5YaASr,hQ
%b[VJLDC##*F>C:kDZ6Xjp[)6Jl7b_9LpTB"1H)WV"d)`V8lJ9fLq''eTn4sMH"_<0iPaKl8udT*'BU93-72,[3WpKe8G_DJpZ4>N
%Ymr(-R<KbJs61kr_;hsHMs>Qj4/nr*B%.>A>/5<OP+40#M1QDm'I3i>7AQ([mLCa@AXJ&f5QZ2i9$u\ALgmOD%hkAJUF?tjUilFN
%f$\&&NN0k^PWbnoW,*/nW7T.e5jEW$9e!67Wj@m<HSQnCZjTCc4a%AATc5!/;)_b0R\XEtX'a@<P5I4Vb:l&E_X)4rB2:ElDm[&k
%'DI]7"pYgOg>l`_6IOYfdX^/j#VV-%]spnXj[HUO4(A9ci^TuQ6.Ogt12FutkUD\0Ha".H+;GS_9#C!%=t_;I6u<Qg#UD`RWcu&Z
%*ZQC09(ja5Ti?:QQ$=[hV;L(US%AeXaG=f@#?%XVn=!H-796<tG3B[U)ME#ulaM)A<>`?]'3&ZKI^-/OBRbsp\Z^h)<bjLm3%E)d
%06a[Ein1U=e!ZWN3>_6uE1*`!4,WY+4=%[&g"'8p"Lugp_Fu6`O[Gb-.O9f'rZZ^4WMeBg,&<mW_2@Ee4sc<qWkAV@m!e@9+DcCu
%.s:\X&e-C?68$D9F-N8W*5Q+7XWg=[,<U3)WT:QbM)0]8*@4Ri.6..^Q]3Z"48B;?n."lc4lSl^*$e,CEH">B#9#VuX<\s8)R4%p
%bmio>M_NMOop36sD"0AObKh41e%8[gGQ'NC?5;nsLl_iPK#7(l+rk)^@PQl>9u%\UKbRb6@5:__IVd&=d=gN!''VF[-:n88!tY=k
%VQt/@N_X3OO;Aif""3P<#YEDi=F^[qd]b%LL`.G^8le;A2Yk.JQ!r+#VV^Q4#Qt=!,>4gZ5P_oq%JP,RQLnWrAK`b`ceo0\6uS.K
%H..S!75)@;Od+F.[SS48]FNjJV[EfW;2pME$'%c]"Uj'PYi"@C;L`#)1&35`Hk[GU:,ShkW.@KhNU3ul()-5XK$L)Xi_i8Kd3ItI
%TgOMBZ'#<f\3>>NK!QStkrZj1D`,Rm$r(ep)ek=1;<N&srXj%#Qf+IGBH3]DggWM&rd#cJRS,+bYQ/MV^,23*V112GrBtNI"\Ts5
%lTe_a"?I.q*P`RRKKQ]a\`/07.iE$o\>iW07qpVK>qM*q+I9VDZ4J`oi@));Op/0eiq3>pTb7UK;_Kcn:n"(\A6n1GS]`e/9?Hm-
%\L<q^T59(m5+U"t1qHd=:K93n%n[W>SNN$h_ZgQoP1</m[nqZp-#<BgVh/5ZJIP'7n;@F)+jCrm/)[F[V+JCRoj6-WgKZSS`2`mE
%PcW6"cm<'tR8e&aYSFb^a3nB`#TE>eed/_@"Ilhr2K5<Si1#<=8h!ia`B%SZ%Y=<'K2]Jk+eP;d*PN8bRW&ECI"P8FDKIFu$:'3M
%)>q<]%d=3DFKaWi-dsi0EO9qu8<ot_O:lP!lNB*K!Eb\1CCb-)1%dN=fgqN9#H'CG5#ptQ(_b/21XC54W-l0V7@\-a"Pb=s+Ash-
%^PJ&+g65]l?if,ng-VMm72d6?FJt1,H]aC(#NJ:*\sinsDU\:s]&SEGEL@o&E+K6I;VoAT:>7A"QtUN+;aiCZoYq@4P=t%!>,oLd
%6*jLG7Y#ZUPB,\rXbd*S1dI"jT!eh)W%<3Jkf6?\,D*!j+KJ1/\ILTE7A;YDS?hl6.8M?-]uksq04b';XdLXK0iO@4!=WJ#HD`CH
%32dcu7.gnXrg/FPPDcOB)<A7!8#Vg`Eg82t$:hS(b*S@nZLlb4@_]K!>L$M1SH)naV6>6*QpEs1Km['tZN\ZBL3\<gRofZ:@49NC
%Q/I!@#Z-d+V)l$ll_;@%g?D,r(\-anCcC66,GBW.YTJjZ-MXZc["XjQSua-K_*S),c5W'!GuJa@5#ONUkZ2qIXGn\_<L%JU[MI0M
%6uGDO$'?u6IGfa2S"];uQrfe)STlq5m2?p6"1nP3#`mH?14jt;+qH3sk2:)E!L(NiCCj]U>?8Gg*@'@jiGE7sb<P\]Ld,IPWkBP?
%^V0LNH81pE=L%7l8Ds9lI@VH39:1]i*^Q0,4BXQu#gMf\q,3Y*Nu1++*]/_afWe&?f&(G:(/m<E3n,F^YX2tbTM9<:36F%>-_KC4
%[I0M^^+7^qT.Nl4.R008"<O&j`uNK!IB8XA?3mp*`haVG@ne^VF/^"/ZYWOLm:bhMGVNl@e.f41Q3pSR??JGF-siC.T!'mjM;isS
%!6paG1<;:;?Ylj/+&N1!Pkhb&WJBk+D$b'RD%eBjH5Ckq7!>e\'+sMJ`/lW#p^&:pX0n5eMV*rHP]6#OIQ&KrD<NS;J-XBHKhTa`
%;%Ec*!iU2F)#iUj*IEO=1Z?tc$UE<5:d'R]VNU2s@phYi4/9`ZO]W13U-pfWCS!%[*I-F%@hHYpeQd)or8P+Z78MOqq^Jb]EC3n-
%&QR4jkmrmDG&5/%Nn()[nu]m$:i6hiNEa3#kpB>N;NL,/X=rUq4k"4pPZ"6U+f#K*qbg_5Wg/2l74'Qe7o<eE],%Z-C%0<!cI(+P
%p20p/ZR:Bt9.W%Ncmb:$DE?@%N(1WJ]raKtC\Nt`[C(.K9Zj$9)hr@6ftQk&j$Y&Ar5@W>O"$A4(Cr`9G_/=ZO*d7cIeUs1?L[Kp
%q_R)Yn#'eULW<bcf@FVp7;DV+,"+h]Z/05V?nXX>kLOl[KmkD$p3>B";XsAIc<IpueKN'qT.W5l\u3S39[Bj2YauYYHJJ=TpYYl4
%f4ER_@?Q%\_-1$&Z;2VEF'AsB.VO6u@%,<C9Uac<H[Jr7p]eM3rNn$8QYMDkpt90:en$!&dtK;eZQDti=It$8aa1_YrNsU8]_gFG
%Z1dff;PjdEA*K^b%=)0#."OTLn$IY(hj.=qE?!$SKuTRRV%a#Ip<tOG.9_>7l/rG`f?NL!4\X0dHWqSqG<bNc%IZLS0+P?r-IK>+
%pL/?pOXJh3I'W$)FoG?[,V%&-LN:3r1DnU>ADrcMo/6jGA(ADtTn%DQmF`1<)^i:.'imr+Z28N@WDLPPm[q0EC_l4,T!!Ef6p0ie
%?i0Z^l7+sR6=LbYCm#I^Y'>ohSTDlR8I;$_A;OBDII^e]i(WIer@g*>;SM'hK;Zd5W.gOu9#k,^l=O6b:O=u_IeI25YP3:qitL9s
%kk!SW]F\h"%W/6@)*6^1.`oFl-r;QR5ib+sT%i44,r2&V4<CDlbsJ_M)?Es7*=@>6gF@3R%8G[WZtIj/4$9V7IZMN4IDssErDbcW
%*HPMr?%ae0>iLYPb:+4-YUU!cRTDZZ+pb"6A.fu!J-2CEeNsI9Nt]Vl"]UQ?4XM@$OJ.tA([=QBql@b#9M`G#A3DU@Ghi68n%\U2
%W'.n\nnrTBec8)9YUZl]*P>?oO^,e:drT:eXOEX.c]8a(>bK3:h[L6+UsO"ZY:c'0=F9_Jg[a,8\+.,ee$I=Y]`6WVZjlr?Krd^l
%*>Y=e19BEC3#<[;eu2=V:Ss*C]7=:QduLY\LW<$ne.K\iE"E&id_\RGnnc3IEDD%jn&J;lS3E6Z[PG8UQi\]=+'YgM$IQd8HrV$2
%$R,/c>f^?NfJI^Vj5<g`$;tsmKHGDXGho:<T"InO4sPekIVp<CU&U6h+'g9PeT+Tn64Od?8Tk>.-Uj(m'eM=oZ\_DW3RffN9h?\M
%WAklk5cL<60Ii@^o6fm1Xqb\='opuG$mXe>r!BM&Cp1.$JFW/<X4WjPqV#Ik,K@,65A'Y%Xgh&DUVshZY%(VH]Q9KK\0*Q<'h25V
%q"+l(Bfe!7`/h0=$3F)h;'NTDC+(Mi=KKV,N;dcFgl';rW=%(P!*KB6VBn>XB,"=P).[:A/M%uBWsZYI/DdPI9ol-K'p4,HepXIh
%pRjHALgTS,nN>09#XF=EXReg^m+4FMba`[DM`nJq9%`4"=V+"$P8#cDnKL-YNZtig64)iZ'Vm1R]fG$Y*_:"(ngW*4!9#L2]qEBG
%,Eb.PojT,a9>1XEVs[jY=InCqJg@mae@)K\mb.YF4Vm@mJcmTDl\Hb<">N21hic-H9BsMJI5J`6;;'I#$0I&[50h>/U\llDVR]jR
%h$-$rN-=[#S8".04rlK3R63_^(_uQtU$ma?K=aL'lC\o#5e_*fR&T)1s5W%)ddXkqN$79)Lt\crm(aqbH<&<o)Aue.&3t&dp1<6'
%#UT:IBo/pTibCkF`:P"B)i>/.-fAJYDE"%`IaldW>h8MJF:O4IN]@(N=nS6LN9#DK,$HIBNu"9i1n7mo?B+f_Z0jk*%u4<tRda%j
%5jSqVouNB?I(_8IgHg:R&.G"2b4&K:m+X]_<a=9e`<>#X)cJ=a-FISK6X81dEqpMU1H\+7C*?URLeJ2R'W+<IQ;#p'G<ONQd$Sd(
%#!OA7NCmqX9.$MV6&4c^1saoYDa:Hk(8*bGAlY-'*E1M4'U2LB+k&\'gmT8Da[D:9J*.730tu;M'(NI.DWs<m)@r@,I;%r.=QF+5
%]q*r=^UH"f0ZDfiG%\b5bZ0[Rc=VphGSP"RdP.DhIQ>stNE?J8:fZ<.p>,%`Im/Gu6EnE>0&i@Z;,K>W'+N[s.at`;J.#s;>pifX
%loj[:n_I\^Ias6M`\$G80X1_0$1!F9H!AQ"]ff',-7UC\j9F4u#/N-!b74\*i2Ici8hk';BqlV!IbF.IG/WA0WAQBhc3\W&)o3^;
%#M(,+\PQ-p"E9,jUd]NribFG<k_,/^OU);UV%e\[j!i*0oS)YSU=^3JKoL=iDhOb<1=Z9o^_05=/4BTj5?UQlX',Yk3glYK`8n$q
%I$QS0#4t1'!t"L3&UOg7.0NeqVHP7P74`D>P>Sk"/.F?8U%mu$4.[&8]mX=!2gX;RY<2`/FM$KUcs$XNB3=6Q.A2h#j'=/lC]jh#
%'@OtPJt7:k1hC"-qUiPB\ps]6<ms"J2O_[r%rNo"rFD0BS7YGigCEK]SVdhoE!L5(%_N,k8K/3'NMJ0^SLlI@`"Cr6S7@8=d0rF2
%-IP2!<-p,d6Zl._BfRIBdE:TBh7$Zg34B;I88q9;Dp5B:84'Q*89YiKZH@f&OmPH"UDu5?1oF*^ES6!iP>%,:7@A<^ae%2>*Oj/(
%7Y7PIn1YgFiuldlR)W=gR%\4-Dg_Aj_d5k](an\CEA#\Z-^OelQ>b')T+a#$82S0"99emk)G16=ddMWp<<ACmDTNI[O0J<`4lilo
%Kr_i'o58PJ01!+k!d<uPq!8m2dl\WgK4U<i9KUBN1/sT%`W:4Eg(=s57h<]XR@8I(Wi@2%eE.1&L)5M<8Xie&)Gi7_.N?oK7,q=-
%EdbqkmlYZO*`%\B`:,gHdp?3;X9nZh:]rk9"q9Am\2DJO#e4^FJ2F'$IE5$5;eH8XI\37A-X5-#5t<D9,cU0nWPGs'p^IH]E<49.
%N(d5b[WQPd<,FBn>*])^@SQ?\1`uUBPfY@u?^O-"-'8+ig.C<m/IB.KF<Y7e`MTNj>/]H"nbZnh,_8gIC8"a,YhEV5SD8Z.&153:
%jZp=jMjT!$!Q2-kMKYaZ=,G6:bZB3*_ljC]5+Nhb22+U]*[NL<^cVaPN#G4f)Q:;)!3^p,8<bpPdPlJ=o$9rc^eQ95/gV6U1UWj4
%k6Os"P0smmLn\;[2U'Q]_8V2]%Kh6mSD#Qc1V/o*'sh\=BM=ieU;0TE8,b93E#f%Y@8a&nGe$XQ7mSN_grqu!A5lNpeem7Jb/h/U
%o&5YGTJeNiS0L2RHRq&NOV'BibPc&@\NQROrAXVkYAnlMdLQsoQ`DD.@Q%+%WQ2c5=<QCK[b)21@bdNI)GCPW],[U_N2F=pn[_d]
%O5/d$,(9bJMdOsGfgHO,nDFV,QQ?Z1YkAf&1TpF;@m)G2*G$Ak2kMXnr(1bf-fYTSD4'H?Wp7PpGgfku=c-]nE2.`u(IQ=?Kdnus
%)1:WPV<i\u4-*m:*I(:JI!%Bt(u$dR'L0+&mCQKPoM3"V>E2a?,ZD2D3hfrOF9mS-YIj"@h`eSIK"!5`5`<,1./F@&%E>C=S6Ms>
%(*`P+#=d\)NN@C`^3f"Gk<:2&cdXUN0n<giJOImUH*YSW]kthifpn>LY(>cJ?F\f7VR-Ea3[Yu!TY2JT12<F%e&DDbAU70ChuMDZ
%ascg30*WFe:5XXD0QdVpO+=-$MWC@^3ZDZ$Na?S."iSVKAf(TfCF><g#=V^Wd[`XRkl)f(%q7\8C33Ym`!fd9N"S]8PkOm,TKJl0
%&\k`k2Zh4`H4rIYk+-CRk#l+(o"L>SL#Y&'P[dC`3r;hCb<#/C34s*B$L6hDi-[#*b=j^L!?lPO+s$0eW:r'`VW'62_Bm[:,UaWb
%&S90_d<.Ar.eX%>N=iDf%'QjT0?1XR[9')=1Y3:UOE.*!:Z]\M6eAW:4PN5<;Cb/%L3B)giD=(I_;mq7_68XSRrS=<Qh?u?^m<G9
%fghb6e!(:1DD1.M+E*aX<_P^QA1HcNg8G9>M$\_VQ"YI=g,!)bAsV)a)$dPpSB_q0A!c^rgb<'[gJY:A@;1X\09FbNkqAue\GBc8
%lsVA5\je;ghJM#1<0%GE_2ILk4+'+cZN?+eJJ-:D0QkMr"Se/!q$98BY-/QP3%BkBeEoYY$G.Yj#f/pjKa9>&YoX\.3D^3'.#<$M
%e'Z#1_LY$<.&%.Ea\")A+@?/cbo#`nA<ELuiEos[[d0HiiaK@+mbiM;E2fbeLJWHsJ=L2=dP"EfdjabI.)om\afr(nTgulN![[Em
%D/XapC#;3,br`V=GODW[,TgRPa]lH-Wj61hjsi5Cii8nW>XgFl]R9+/^YZCTNYK,]i_W-p#qL"JgPX.p3`(rNU1]U*&PJFh+*eFF
%R*9#T[?QA#7O_^G?8bb1@K0H3)]G*$2g-/ie1XeKob,it:CjI\V,1)*88:$t*Nb,t3hunp;Uh<`ABraS/"%QVf4WkH/YbuKY!@p"
%"bEum]KXT@c@\0,EQGs#VOpLtDITQ>*4*H\C1.(1-Ct$ib)24=7BjuJ.B:C5*+mO^j#DX@qGA,#%;Snj5c3gC]Kj$MOFXkj/&Dm0
%)B:!&jV4r!l:7]l%hmb$linhEd>kM_:)@\7>\,B8;'g2i_`@ZE+pLc'%MOhbeUVD<0<N1&M<7?[\$<Zg\/^$!<LGt0MP`n(l]U2R
%1,[YcZu"aJlXaTIaBH_i7$gc-R,\@L9LM;617?'PVR[^Be,7GEGVsL8HF:YJ%"kWe#;7G$aj*[NI9@hAMMl(3LA5ArRogEDA5.gW
%:So;f(Fuf/Ss.kgh^YUr&Yh6WaAM>0+IRbF>op?KB<em1%DTQa-j!R$lm/p99r&%(luP'a[[huY*Ki]/f$R#kc,2&I7m]g/N>BW6
%SXBNg13Ft?0%4WV#%XcBlH6^5g#c859d1+7.IA"f0RB6O76'bg*#1fi]Z?RX#BM*[''>c19.DnQ7lF:'f/XV?S@gVO?[aX][A##p
%'!$.U*3W$((9h0+=K./'q<t*@EE,:&Mlgi@'alN=B1ak7Vd]sEIP0p_DQhUTGbLiJSYGqq&u"LiPl$>2<(k2e4j/3d.U$j/$VN*E
%XVY1J@".b-1MQmS+eq;a0O4iVATF@:6.,.bK]Um2)j4P0Z^9=s(WkM_TCcr"WH\6O$gLD<1dB:/)%>!&X_KcJTQ8=[curk9gMaPa
%UHZ:YpM=8TaHDFr\s0^IW_c-]'];?s#1e3@o<+p?XS)s?o,0+Lgd,k)dK;u!HGFc/5k5GX^beu1?Va^j)SlO0Itt!a>diQ^lXrCe
%-\)h8U/WEcLORc$l<6*-H2N7F)J[uKI-8Wn&Z)qbY#I/6>FSA^oYju79SKocE@_FWCCb%DKf%bKk92u40>q^;\Y"l'&T(8>F0o-0
%2Xq@d5ed$BHogGC7Hh]G_n,g%:iBMoRTdnqE!r[lUtG"[_LWEQD.UCG]`Jl63m'@,TggrSSjGJZY\Rq=mQcaXl9#R"6]SWR*aN/G
%B2)"$A]IcED?J.q<!-I?KsM<_]W`eAJS5fLTa'R5MO0lCH6TZN`:WCgVM0.NS/=-M%e+HNA!ZOgHQM6f%VcnFdJ+l\NLF'[fE$57
%X#H%'euhVE5WVLnB\3/kX#2YMCB_=9KQ;X-_NGr/?,^Li[Pgr7d1R#Af+cjG5^cQMJY8n+7at`CG4E8f)KRZ3a]T)/a>R$i?;q2r
%HJm(i.-o!dU%Zl3['[5@.$=3X?/%pSjg,&=SZ5,L/#q%SSKO(KGW<%2!*Cj2SA'/X:Qk(=*q#k"@%WQXFJ8O]a)H[$NI+G_eIaIi
%./7t,Nl"5[PjtWqhfR.HNjSfIJ4]1o8efiKO23NUSpJguh[0a+^AbDR=UrslD&ft&Q8e=_<\8<"D+n)4POE`9E/3pQ)XJ"p'g6^[
%pp3FL!nWk=)M?1*31QtpS#315Oh'3S(nQbtS40@(I,#ECfBaD(ntu`sWSD>uKAtUi0IjBb"&V+C:WI8\0_'L"*H$UoCO+B0Dq[#d
%>P7PC`^6<\'Jr0aijRjk&&)tERBlHi*^-[SlA8$+7@%9=&E1\5nmI->E/cW)A5F0K34122@(j]sb:+>t'FbBh=VEdK+XBO:-JT&a
%Seg*F1mm(h:]?C=8kR@=jP6upaJc@AaT;MC&LjgFr94aKc>G=(,.+<&U9nA\2%c+H^t3=Jdo`dm2&b5NnPOa5"&pqSEHoN+&@oG(
%=&uf0X`Z*p%R^_BY(M=\bY6;iJJq:aCa/tSZ]B/d>!-l@cV2MR,D_rBGkT7ef-h9L0l#ePP8TM\dkTalNZ^5kq1.#T"JShq8um*M
%%7IVV(*gc/HRQ/oD<,IGiFMc74,YDU@!!@HIb3NOOnGB;];Bd</MkF@>`1OIQI@f\iS9g$O#%.BMcEPUa>s*dG(7t*TDim/i?u7e
%$4kC6fGh_c3#M,L65aWcCRFe:U@a#hB%M<qcG25kW!&4/I=9D6>9gho\+-)(Mq5rTmrW\'1G[m36^"(1[GtLi9>9l\XF4R3f0Z.N
%pF(i'.Xi9&"R7G42UO36Rj1`=<W(7rX3]?-5#d&<IGr=g9_;/F2gE4U]-+@t-&rr%HF5f"*Z3F4]P1iVd=0FPnYfLF[cjc`phN4+
%5;=ZY6YJn"UPVo*C%V43PbmR?Z>34Xi\2&^A+,XPmVu6-$1]df!9`\qbmpk-5#--OFR2mFgB$RcjOVghZh]\7igOY\:_u/d.05j`
%Z'5j_6cZ:2)6JoV2i.T?>%RBa;<"%Q$oXGeOQ01YW[!a+N=?s&(8oZhN##KV[JKdQ-0);.Z="]ZX6Z6$k0Re/O_]WS?tAqih-ar]
%OqZ0FI>g+%r7hnA]V>XnW:Oj!SMSd>a/qBl.n&2W_:=i-47Eq"#8P12@?gOT';[1^g1#J0pfscp;.:,+;-A+b(U(*</*$hNGTT'.
%e`468h5g7.RrUU1.`Z,9%2g[A8_4@kM"-1q#2idlMh<L\JlkRWU;t8ph)5#\jd;`pO"KEBpd4aN_VS=Ja#+":13?Q_AW57P[^/8]
%Z_^e%Ml>sC[p.^rmd!XCf%k.)X8+nd0',K`71Fh^*(F)BlTo('(`G_6T^h3$1BA/57>@l3%sIVSR1[353&:m05cMXJ(-*k`Mb_,?
%$_O9OG,$Ph^'6V69[MTDWu,)r[[+ulf$']l"mCtW,>-G]e`o7C1'cJc/H"!W=\2'XoF5s^aPEgJ!X,T52*UXd?ApFIMpj+F5"Z"X
%ai^^jbD5^i/5G2d4g@jMOAFmCRDr#^qYJ_&YC#D9pV#"HEFMckaQ6Vd;a%6tn?A'DFYQ;U7)WQY];-UnSSBa:pM)bS&-@a.,mbce
%b0IE'mUDApQE<s&q*f6l<^CC$kI8gRL(R)(%47_;KpS5B:[5_d$^]rY,;S0"DF5#W</5jh%*-K2dJ@k-+[&hEc#[N-i"b1nh04l%
%`[Rbl-*qK*Pkss83%-%q*g_#R"R7sZgfaa'!Ppk932a2ZlK.Yf?B-mO17+<@?iWETU^_P=WTSt8$=_pk[1jOi@>G2I8<:-&J^'^_
%"D(32i,dE.3<lRV,e0Doi@kp@P,:/$]l#eB&Fjc.D8re=/_YabWfF#8BVPI;3D(V4Q-MYt"JY9tOM..b\alep2\3(][HZ5GrT:/T
%cl+N('/Vsljd32007mVt.76[c8\R)0G\/[acjX?Jm3Q9G5#o^nbrA?E-[BF--8s7OmBJPr#g0E0+5+35'ILb)0U[tLKdLdjNXfJ(
%"@+#"a\.,:W,H.Q/1sXiO4nlmhJhCT5n]Fu.eo/gkXSpWGlsYX^c)g'AXuB8/1"U5-"iXs_V5l%6Q@G?S65<%;XSmAo0H-p(L!s2
%<PuT9TjM;F[)=+q$6a@uD_rp0D3ZP3e0:+O2),94+P<-1[`?cT(Zm%_nO\tG<F^Bop8pje;TCVPKFL]?;#3>0O3.fm7j(`dW=,.#
%e%=D@8"62s>5&WZj[3]9W;96qGuJF._:R\@_meg)9\hPcK]+<sJAk0LhO6dKRgZi7"ci[VFk$f%&-JYUB(Tc;Uj\GTcLDUroncq@
%X.&Lrn]g7Rfk+JKFoKAeE?4+]e%b.BD`nLs"BZ$#K++H9R8XeRW;0kd,sdBE"WCO3ngV@fjbR->A&;>jbfaZEeu1Z$co:3`deg#d
%#j%`d]-<r:mU4(nXi(%._SoEOPURf0o!MG<+qM91'2osGFJgsq6)=rD)..(6/<SCJ:-..G$Ge0W>gG.3Y`*7]b@C.UOCQRk;5P'e
%9Ol+lDQ;;?qT\mG1sSgNTe&Np89_u6NtpGf4+N'c9U&6$R0nb=CQMM6Q*_/W%*!o9>Dpmo$i,_ihE%C@&i6.l*3g+`Bq2VMHBA[r
%1$Ka99c0nDj2(l*NP]m&/D$b./hSa7lgPgcebA(O^Z$6XDQYA&'S`0OE`.q*"f*BP*)'U`h@==(!ENRAor4eE2!MLD7nG\Y#AB7p
%@cO\VENGC\RYF6X.EYKNC*GG+k\N2c8T>n+.e%F2oqU$l5k6I)/M$TUAhh4?:Zc7)(im2o_WBJ:Yk"mVap*OQc)_"3J=(I`E"01L
%B*"1lUdBeOGYI^^m1[@n'X-VS[?bFt2eo!a$#U,+.ke=XC;V5tBbHBlg@OLYHJPU97U#bYJQA%qTb\bd\cFI4R*r19o#B+J5K4C"
%l_6TRJ@bLX+g4n\gJFaD!HkN>29;@L5,<M^49HIbPTV:mgB'K)1gF@LGAQfML1HQ+Hp(7EeCb#&>,*lB)5uoK7_9jh.9X>!RbL_[
%k@r$F>VNXT>-dtJTn5:(]2YcV\ksn#:K_3J,RZ"g[*%no">?/_\I*Qpfn3c%g6n\F%pgd96kinR7o:W==WX#%>)("'>Mqm\?WTIf
%%0_0@TT(Poj2?>Ug.fdPK"r.nH3e<t1^R>ii2PBu1"IE2W6tK/ER8gU-IX:]^pnSdj!AKAaB0l>Qbq5Wr8*=u$sR<NSjo"1<8X^-
%+6cN$EUp45pLMJ19mG&RI[cDLJLV1-U(TOs&%8_Oi^TfI4:kn.FJAH8=U_4+?=b1h?8U3b>D^=1KLW7]\=?e=qsA'j'fN[H+L*iT
%Ht>W4LLIYa_uNY"#ZdY_N\VKKOo$<SD<B=b!.&1S4\ERQ;+R(eHb8V8-[?GHmUf@BS0Rder`,(BVcYpN1HNWDAWRKkB!CKqKWu*@
%$Zr!Igf4MY,X%/!#tVr.h#b*nGW8mL]I8+5nZH>,0I*Mk8OYic6P#t6^>8p?:0j;-U@]q+#(/!d>G[j$lG^nP3hV8P>XMt.gZlQd
%_a_+m`0OnuNjbXf2Qn!(6=<88;*%b*/T[S,BB\3?9cr02Ln@*FRsTKQgeo%s6<8KG>tTd&:`_/gRL58HQ$&Npput*N,i=ufd1;Fj
%GN=jA`iAG;+@P`-N[6s37.+KQUUZo.nPhgq%W!TE/TVfU@HFr[IA</XqNt;s%4U;M9pj^g%0N1@k"D#,+jc'>nMoJC,0)PQ/Z\#@
%^<Sh[>%L<.9T:U4$-F$XXUp<>aNHlVd=\R72n4umI-(j&aO;]MOlmj+WpR?fO`A)7c2hq2#Z"INL(K,?76ZgEU+?_Non'W8#I>1]
%_H+N-p*c%Ol,8TU(8R]q%qamt7`t^I/<760AoYLmFZ`)-WN$#bBp9BqKGM?bSV'Vs8`68Ck:/&hV`fb_P51`5^g:NCWOmp]QE#7r
%Lm.JSm@.^uRL0(P#b'-cdlLL2<Tbm))+D-=)?bXN4mE:[(`+cgSIJmQP%Fo@MJ[dYK*Fa(G(nMI$$>6ZLlV_t!&V_VKK@LJ@42e7
%=!0j+,4hn27IW3c3IhDm,7flM6n"I+cm`btaN?;E:iWo2-VEfo<XL%L?48^#<UeOHASj?Y1M`e,\*#\Rj.AH0-Cg#5b(,!L"R%D)
%@V"'":][4J87;U8PT<]FaVlNlSerDW6Ej1M/DXk#b`R^t1nos[`TkJnM,Ka&@5^fPn>,&:J\?MUcTl,6Ktnu^@f-kfVSiib9QRU7
%B+c1m1A+$Hbi"WaoRkaooDq#-Drp(E8lW*p#*;1,cFOO^3O#R&6(r%3bD"Fa*sLkl[e5Sc0`d&Tmo;MA=+is[BA:pU2d=GtYfg8@
%>6P1R:)%dD:4a<_o`1.[)5QuF@\^S.'?#_GU0N=iJ*'*BXV_bITEf=tgo*XJT;h(e3DMZZO'SY.+YuK77hs_udT"QsbDlZNd#qSf
%*"0(4QMp<9n".D6R%jSBHT#+F-1n[dP*Yf@0o><J[&UK$f64T38@ij&(gQK^T9.^6RePTBB5g4oeI&2eem>nqr=o.7?;..6VEqI:
%\D9>#_@/p3^9U%@3P4)tP'dqFk*rs@LsYQtIGN7(Ccg*K[0%DXEptV5Gq^3i/J\AZ['_<h)R@"K`^3+UqghA+.YHM)*<ciQ40#ud
%9aXea%(V:jdX&je%4`*IHnp-:bieeg[lj-S`]@qs7A*8Oa+m<,MmZJ[,&kMHV8=Th,LQ[_@84R\+akpuE`[46f!P!S;1WpKM__eK
%YK37gdtO)'F*JF_`0+k4dbR=a$DUb0`!@.'miDU1OtT*i_,_%Cr?UQa<.a4a,</Ft5RQpBKlVE""l+D^;B_.]';!d-&Zk+E![rB!
%TOmZ*e(b.2TQL<(5i-V3\XA+UHK?d::t\b]aTZr`U_#K$#h?T*qSV#0,e:j)2?hq+gkVDTN)V]M_;K,_&XXP9+Ph`_ke\I^JnZ1_
%M^H!t_]gSTFk^pU&p"]J&//VRr9?>P.\Of9.A;I8]'<=B'`%jsO_G<Wmg9"4N$D?<DF]^e`M%u[]E0X_'EY"`-Ck4UBhQ([%^6EN
%4UC)0i^2hBeYNZgaW=:S9)iuXGI8,:cTK4$@usR);(*j#XPU=J;FKXZ`W)r3:<+b:)M3?XKW4C<bKn8'YQ=DVG(TAOET,3n.Y,Vp
%859QK^WK^U16cme#/E.W__]6O.e>T9JkF]iZeo'70;4.D0quP%Mj6Dc&Mm:L&hAddVV$5I9mh%uZF3g-"'6E+N&::2Um7Iqdk9%6
%'t9?ak*&:D[uS?\P0\tj@Tj=>R1cUt*'3dQANb6bjE2U,dkc9t#TX`SnBc1oj@OWA:2:\".n]2K%h<9E`3JOoe4`$[O-ZfWcB-F)
%Y::6!fp>8a)GI3P#\6qC":jIe(ol2b0H'#lKPpU)0M7aIpQL19M.)Mgj;o&V;iVGGY_9&AiFT1Zpe453omR%CZ6KD(/I6`''N75X
%.Gr38(H?'5f9TT,f:qKekjiKIIC(#.7@f,#FOV%Aj"#!EkuZp9Pcki@,hZu!Q`uc1T<+CmlR\pl8[_l4JZ55$G&7=IlnMWXK`*]u
%?S!7&H;W%=jLDUnIVWe,MuVK!Z_qt(q5G8H]a.H8,ttg8Yq.HT.Vd[pQ3f"AR`_&PbN`1V_3&:MBqf&0!oL#S%oR8BRkI]Ddlc@m
%2'o@Ff?n0$&Bd[Y2<rOGlX"(LbG%2>5LAE@g^Zoen9")0eUA3^RPP]6$9OR-(tD3,G+OF$Cbsob?n3MeVPM]K[Dc<,=(Jg03R[Xr
%c$l4AX0"a;/5ljIRHMkE4Y"0o<_F`E.i'A#j1iOlekVLhC0lmkMAZ*XJdh74.el!/Qu\p%3)PqFd"O).Pi&>MaQ!\f-15quXi>pR
%bBH#K\s^H-gH,PrQSYZ4dRLi[4SRW>*Qj2sI)W,!Ej@%8?6e<:NdPUkD@[aO,?ZL=3ZlW$+j,t$kmD!eR_mI>'TY_ZfVoX:E%<n4
%Vh,>I4PCC,ffe/-p;<t%`0@keFSo@:fBMp52G4N@`Fiq,Jd]7(Ji&j,%`5102m,X\6jJbelRfl_j,H((,6aO;S:m!*<EI@-NqPF^
%U9O2V'/S8e0noldor^ff1.V#4W.9IP=6K52,-nuKn7K4:"*P3[[j1F4kEQb\,JU'be6Jlp-VTng#T-U1XGneF<1]KRM(b/8[CrkL
%rn4#"KHWo;&Z.hYX@7@@'DTD"9'&Gp<b^rE"Nl,77"8u3%QQ,FQD+/de\:Zq&RX;CP1\p9a9WMA$opic&\sktjJ8-+\[H6@dHfU1
%)pZ),8LLCe:4]00IZC?JnlnX\44p:?4r#,"Y>JkbW<HM-K'!j$P<R[(n9/r-4qH6pla)ImI^0^c%^<5?aB59YB;T1a[Yf'%g^)AK
%O/lk!7"-B.ePGofa!VPeFe#88[[I`;SB141@eiKR33;*u+;S#6`XClJ?r?;.@N33u3BaH*Y-W*Bo*B\!'YjHW#Gp_Z/NOJn#ogi4
%\(.@ghjT:T:7+f/R$nFf>qB'ZW0cI2au9'OQ5*_`TGQ1nT*Hp$Ft6$\'6%!L4F7Lr)T:1UkWsG]I!K[L_ThV$76=>rJs;=*.KTL;
%l+XPc-BF6q,4P_[Ha>onN)A";X7=LG;2sp`+h/B*^TF0")pI,?Z6sX=<4p?\*KdGT)"WFjOKW\GTM#%5lBqqFLKdC>kGY2X_k0u0
%<toZurr-b/poIJkSTZL1"G5cIpLE82PZF_7H?R:UoU4GSe\?$.G6m*B,.5!_$r$J=cOB:nf!M3!>WN6*g51XK&bS9O^:bJ\D3ke!
%h'=IW*0/3qYA^I:]S#$8Oh%P_6+kZ,2T`H5JMPM>NQC5"osFANN!Q.Q0J\XIgtTCj8Ru*W7g]iGErpU.g7E=6jkT*&(K!tJ_<j<A
%g8VR1S+[W7<09E3/;=O8,<E8kJ#;(IU-s,eerDkW39XP5ef6T96W"B;U&BQX1<`E7Ii*Hqo19!Mg.qdXPgd^o*>s&&86/&(@./Gh
%DYNlGoZbDVNZN8r9U40Jo'q)i=m7f0*a'E;F6fpM'Mpmf-')`)JI6N=JR0V./HCN!E;pNHD;d$'E;J&'X?DGg3b36CkjYpkHcg;l
%ll.82&Uj)g0rqZk`HB>NP(P*ab.+G`0iRS+,HT`r`=s`8H>&61;q,]rJN=6$3pL[0$:#dJ^7_+j/_Qnu$eJidV3j`3PTtV:2b;>b
%<I#X7UWg2ArhaVJH1st5<@OT%#V^?f]h38nhJJLR$h/g<a+>LS[fB,i>>hh>TsP&/jrdP9l.%1`&u6,I//Bq$V&th<Bpm+e6FD]/
%%anqbDJc!Q.hET_`&[Z#86joIm]2LhX`.okZ84Y5P6^&dYU!u,(.f.\D$qd;j)s)4>W,u=Vo]\&W\l9Ge1\)>.4bUD$5sf>[T(?m
%_\gA%Fgsnf[U(ca#mJK#,ui5=&XKGYcUX36e^nB$_Z(k!ZFul$E7<\?;/<J%lI@Wr65lh9,FU3/41S^\i3*EnTan]0.lP]iN[)=,
%dapY^c$cPm-+9]B&d0:`8kE!HIVmNJ)dG'6fPV)R7^4DMn.6?,J;Hp@Ue@C>9UplH.'4>$!aN#ZR?$?:MVtc/JCKfL;/3Ih64Z-?
%64F;,QP`7#@"sD3EiMsp2sofdMOlLZB?&KdGU;9F4?R1\URc`8%#;pRk84(&o">r?aU(c%6R*g]kq-4\qeSgE__.jE[\[E60*>4k
%p[0*DN%-ROFkTXE4#P5[+mj?W^Zq8+^9/m^:4?4UnM4>i_eI'5)TO=k<MgHi'X32lh`Q/s;Q$.8CT97n4d4G1Vc8Qo$gY!V2@f]-
%P4G0ag8RP$G:[?Y->p;hbM1SF)m6h`nVIEDal"2%gEC_E/NUkn@`3J'Qr8fC/,:`NS;SS#N79_GF+d(5*[*03fgbg6VP'"4oh5aj
%HaQ-')g4HtTd-K_?MeX"LsjG'i4,m@ACt2Ur7pRU]'#QDJ1?:kHl$e.QO&a'P7Q:ED.SPn[RVYI3].`*Lg0I:KIKEPP7M\4U(im2
%pLW%c05ADP2,-A7BnOn@YK@,=@h7Ub1Is!@'jIh`#XE49?Y/I&S#b(h`OM,@PNrMY$YON3i#_WsZ>eTd@K+p["*\"iklWN0id=j[
%p^\6m1<W7cg!`=p5_15)*W-M3T''Y5!6^F;n,$/gY(28PM!_.5Hgg*GdkBUklc$G/M0TIM<qUj`1&)Ko@nRGlDu1`3AQjsh"q0`V
%P:Y?"NhV+_$I'_^:S:PpSa&+tVCQJHEopP9kph:WqE:gZ.kn+K1coMN<iqM/V)ZA!7QH=[$G=)K(a([P%9i2X>%?a61Jl#rKXOKM
%J]V:9XoSJpN^KdflP0Q?!]jID[!Zc@?b)+F'^tN*E[/esSXft&WPc[^(T'G.h#)MgN,*rhpmN8!UtK&$MADe]ZE#Id`YT4O&rA$q
%@V"^*R?JYKi*Fj2!Tk(Y6$gEjnU!-+TW;!d*nOEKSbcHrVRTLFb,1+%$3pkPCZQ2U<AKQ>[*2@n\Ngf47'RV_"S=Bb0pkk`,$dYL
%6\>D^luthao@%)J5ZTHR6hC>,ZOrcmjJRcr%8i#FU[WcXA\]0A]'E@o8q)Oa<[VJ65RAZ6;df&=7;MX(`^E\#N&.J0P(o\PT,[SG
%8\"'\0[Z#&3t!FYn=&F9$,97rN?8o!L@K\B/@&j=LCef@HjTft7u7n`Au=F0FX)OF`7I5j,TZj;8'#0hWMRB`-ReO+,gGtU@)8>9
%+aNe7rCVbZ/8TE;N^2c\GB]6+Xg%E>F\73\W]CN2^K7Ms4\Asl4-0V7Eg;=k=SV6>UdCtt>S,Nq`^&5`NSi_cOa)^AN=i*kQs;Ua
%Q'?q(`26\7!X$)s#/,)tP%#">9Q'&V.N<YuNZt%jE#[@tJ:]>HarH-n&&BUo?4q&&:(AB<-HCNImhc`=9o.EaZ3&rU(/V4cn3FI]
%5[tZDqn^LB-lBa1"g'u*HMW,:'=?]k.!;?nr*A-G!`VKsl/JW>'Vg$E4`H,oGsL4j[8Q!:!UQIQ'8(/(W!%_5H$N(5I,cblp?:q]
%EkS)?s!i(ngBT^uWmJr57u*Lkl::$q/]54/-[B,L'NL6/G-ICgb^5rUoGf,+jD0]cV2"&A]J>a%*$Z+t%Gb'"5Ps%0SIqMU4]0E(
%Y`iE/7)\o!oUR`)AX[TddSBnq<4e>H90l6&;f0]F,ro=1i,spKddsc(=]d:-Xi@J'"d3D/UI;#t`pp+]!lPHSO4*(U3;4.Rf/;gc
%X.UUD<6P+8BPm`J1=;4;,?-.#T?'".a?)2N+)N;gAjD5T.6C`Zrn:\)[)o>67F0&kaL$\9&!^tU-lV'PCDV^EK6+$)HXV(3N6?B0
%$XrILB'dZ#0'l9=5ug1;*'Y,`(-s:DjAV^A]'@['XqJiQSlR+"JQlKTnBk7B%uOS0Z6M+)?oFQ7`_Bi,))23d3^k+]o`#8*:CHnL
%B;hoSmm=u+NJ@pFpQ<UQW"?u$4m_gRZ/`D9j(*d2Gqt4]/*$\;=YkgT*_3l57](P:_Q"I*/I-r#<jPr-=]4eejgi8QX</35k0/\7
%CH@ma-!DAJXFraPiAh7_)`ND;0hhu"n?pDIpl4C#Yet1IEJ&/8](-5J*+PGN*n4Wl(_CLODklh)q^;ifP1-S1]]ZVGoY#,nD'Ejo
%U$/K$b!W=JLlg?Ho_UafHHTeTDEDuC>KQR?:]uqm[HpS00fHR;-e)UfE?2ZnbDT5;3"sb'VS%t(4PechIIE1<\aS?LniL$-U#+]a
%(PLQ.)lo0^Jq'f!-p)!`/4X,4Rk)S2*5Bj*8gRD12K^Z/R*I=K?(kbDDuSEEM%[q+,R2&phTq[MEA,=QbhG1,h7T@<!Xpc,4slh-
%cE/]PnqCsW'E5r!f"8t*+U5`5oA#BK.0p0KYOKh9o%a9N\A`nRU?1!1`]7SHLl;uK)qse/<3/D8[W[P*CErJRA&8A(KZ79%Bm)OA
%%V?"\gX3R`MgeYI5"_l,Rq#&H:`++/g4+hD*pRU#4NRQ5VXkUj<cp2(.0BrtC85_r9(f*\7k)5/RTS,;/]aG>SED=&)6,'Y<$]8Y
%,-DPqXZY'Ta:HWnia,Wtoi&P"fpDbUKZS6nW_RQ,STiF(bS_+[-!YVp6feNF)L(ZjPg%U0bVKt6jGB`f/dDn?@KKJA?>&.fdK`YP
%ECRdAP'Sgfm(MFc3B(h)V)B&u<Ad;LKd8DTSHc#3C*nPSenk0KHD)#]#+QpM0*LPeM\,\d^^S>J]Z:irMZR/udZ$ko7>%!B6`:DZ
%)_=]6C=:h15$?D;-LD@B4^6*XU-=F5K];mi3%NI6@Wkm-pUf+Ieao.XSXlb_^rV$C!O"c6#WgucS=Ug"\nftclI-KWd_f:lQ3olh
%&aRM#G?-V=eF`qaP::^B4=PqAU;k+O>?-Uf@*?5M"9RXaK["7R$?AYu;<nLm(qK$0kYXJFnc71(8gD=$=+D0Qpkdh,Il.J%Q,rs!
%loN&KE4Ae2K4Ngp86^n+?c+0-/k`$p.4F-Si=lLs<KUHYj-Y-S.U:f^fHnI3'S7'6IWc6Z^(B\2O\qdi%;mK*>VipF2QAf56NmoC
%0`,^TSRI+9K$.="MNX/bWnD]XMP!eA/k3aaJ0r\YSYoqulg.X<eO7gUb!@<<pq2Sj7is7`0aR>nTc,olMkA+Uk?T"6DeiG('[]%,
%&Bgk;(".E9a5ab0Ps.Y(R_csJQj-!.h/\^)RlWgmmqbUaXA\F'l^N:'F)R0S.FU0UO_Q>#b,)&_=[C8rXb%`pV.Osp`i[=`TrFP_
%?4,YtppLf(H,DJa'T?1P:/_Y^=e^^;C6`(t5hC.s7uX@c$rYbMX?H\]%:;*X9tVZXme`"%dneh[^<)*4\6q].CKV,s@;VgXZ"j6!
%M)g7rk`ea`k\WB2YOs"mI,TMBIGpc+b2`Cd'P?pJF5GL8$X'pu<PnD)Sc:RUEo8u<,6CHEH%WV=?joCLN'cEj!YI7(7LO,*0MuBW
%foW-qo"d#:/IsZQjJ618p+[//_\?oJd&M$%]rEOW>c=(-jEVqf*]?o88B^R$TUc-5W>>t\ij*U_%Z=p<]Z0Q9a$`tug%D'!+H\8e
%IrSUe#G6ac%(#Pb@a!#f-L@09'Sb,bZlFt7F-[O7:&t?&!T!\S1f^IPl&:g974M'$lY-UFOD6SIklX]t9?UsL/!jgLfTJ&LZIB;*
%QVCrakQD+-e=.%)"gH68nA1f0!Vs_N:rK1c/etRMRDQ<U_^fhb*H6u8Cbj'f@#"6G7#3N,OL=9@n_.9*NO9T>MZ,@H6(5'Ce;l%`
%QNi1/X>ti$]mQ4#"3ER1(CM$?pG#Zhr<-60+(I3FFldZ5SiTbZ.]5JF8e9pF^G\N!%&6W2isfT#n^'kVQAeLpJp!;cq-@Q'qE:^+
%]T*Q\1qH[IpngZg)FL@0Him8Nc1/E:ZIsu(6C?oZJPhF+Q=/_T)nK:U.]`C[;g-&Oa"^tuF5Ni45&EYti#'WIcthpePQM0FdQXOq
%\B6ZgcVH?t'Y=AJMh/Kd^hQM^L%W0Z3e3sbXCras<QpH>!H/3B['^F!@s77>&jsY)[DaPiG-%`!PZ-74FBtQIAouY/"=G[XbObX"
%&]#La^;_Sc=5bRk.ZE-FWY4.rUs&;/p;%KHE36:W6/WO'md%"$hQZlOnm9m.Rg=Dt=pFPGTqVZsh]'(LhE.!9HY(>P$<R1?i`3#%
%Zu*r/f><6%j64@)5L1IDQJ.tacC-16A6"=G-=_!Lbs/as_FbElR9($gSJ%E%;PdAZppA#EQm4F2<D]#_X:DifUJg9hQUb^QfTlU!
%^4Na"<%<.u=U,n\+r:+WhiW69*nT*H^,P4hhHJsN\cZ,^3<23[XnA%i#:`\5S9IOc=(5q3lo$%4qT=Qi'=[r+_YqaXVZgSja,Rs)
%<?l%<4"g*(:![fMa3\t)K+OLH`9+Si/Rk@SA`Hf&PqA/tU3OA)MhAPYkT])uD4[<JRL#DDdc@]%MZ0miYlJO7/6J</1DmAVPb>CL
%M5,$%O/G9<'?l)baT[;0fS&>dPDk3o,CkL,b?,0a0tZlsL)ZHD\f0)C^gIF,Z1&2*rpBtYN7)S%&1,0JOM96bTk%!>._%"7%ENuk
%UL88khM,WpKFEH5*@dB"%o1:Kb"q5qR?1u0Zj`uA/r#bg>DX:flt)CO>u4Vd&F/0%C=*@S`u?jfRq-=]Ki+ccM!h0*Vc.Vf#(&@r
%gl?$PB0<9$pB\cqSdUV2-rSt@@5U>9Ugb0"6IfpXLj4#P+mOX_+6Bg'T/GC*Aa3L,3Z/%kE!T8G3@,Xg2+kqJWB/oaj>fr2l;ZRd
%_)_PHrdW/*c)r?cP+D=sG9VPOe4'Bls-#o_C7$71!<aSO!XD9u6u0TIfDa>VO0d0S>MWRb[ns.-$<`+>ZQhTfc-=M!XehL*aD?@)
%S$qE328`hcAg*H[C6;8Y8h2nQmZ#7$=[TFd4N;iRMdK.uDDmK$lO^p"<f`nG4"F%3GaL(]DGpnj_N,m90j3V""q:e,4:8fMS4#;E
%&ue[PS8:qLg"[p.!-MGu`5-f#(-QIpRIk'2G/M8'8uMpS\G=!T_MrH^>0h!6N%i693-&C6CJ'LdS,>8^<A56'((tUkrU:n%DFW'F
%?'dEG6=["[LmY@)@@8\0]J7pR+i/8+A<_`]16-kQobLi!hGS8&UDe_<f&aY1<COo*L)lgNhbs"1rH_!J.l"YJ[:aWn8d`QXb,6`(
%?:jh"n><OM[N58UY#t$I2-3'#f`olNcM,eO@$'4V72Si?;,G_M8];t@S+b`gf`M0DPPcN,%B7N3O_3hMUonAIL/>mSmrQ8iMpBb#
%`kN#f&Fe@2?Sqta515S7^\$aqrt004"KT.-]NAoAShkOB&']U'L7!&aPFB`MeIU+if4gIt]h9/^Q9U]Y3;snke$$O`O%;P6lLsf9
%HbKE1F&=_&d(GZ&s3(kHi6(WrrU(0R0_@+!N3E1!K!7II(bW#LXsUCMkmd'BQMr6<-I+a0#]-r-R9\F26=CPZlmurYY(f<+p+2e%
%a*CDo;OonX</HW.B[!I`C:tBT(_Tph^m^)WoS_1cHSl.'7W*-WeagB-7Iu)_R%$9HOi;*EdF(,TGGaSUTWf[XH;E1nk\Or&_HX8K
%#,+3=7)]OWQ$q&qCT$(7==%9Q#e(Ha6Y0ZhCcUirli>T7P;N1)7Q`5rK!A5)DCW"(O8C+=s6H$H#P\F`p1%?jK1#M*VlafpA1WQ`
%ps7)"89fT9<eND'g4WcF""EJqP)K[KX4U,HHs%-:0^?bRT=Us>kq!`F(Mp=a0sZPeg\m,k8uK3'^tlZ>m$?`j!SUV[4u;"=)-046
%2D+7AG7%A.*XpCFa]?b+2q<&q<t=>F^_iU7bl7d\3E>]"mE`9N88X3-jVb]`Fqc/)bT55VTMJN)Ha[/M&K[>e=d`;F,mW:iXe<42
%,;RY7?'G->1V;m%GX(_g=j\o;:)I$\9k6)B9H0>>.0W'&9crL-CFY5ma(C?f!^h93:FV+pAfT0t,2<A6]#/VcVp&[/Qp%M:5'W!F
%l6N*)-2!Su(A"(')OV'4NME+r<ad>UAX;cm$u!MsP62I9$>J>f:_&F<&?;/l:^dFBH*L88A"&Y4&<3+]\@^tr-qNlh[`D2EiY3%:
%KbC\giu'?hDA3\66UbOW0I!N:)1#b!UU`52K"LKR<0;%/QF]7tS^72N/SEPR^D?F:V4B\=Yo[3o(Jb/$_6ND1=.9DU,;F@EUCOGW
%k?VN@PEF2%$qSS0$%UhZf0o4(-bD=`75;G!74f5H@/@3ISKu-`1kt8G]D4<t.u8U+VRBVcOC!IC%B<\\o7da:r.k?af&gT#c0Jks
%L!!`1U+ZNXMn,s(,Dop<Q>J@60)ie8Z&Z4s\rnoq_2drq^]YmWG[nBYli>VM=8J>n[WI*gff,D#8Sj-l4#,8YFT9G?kq<O1UC25l
%&#D2FhsnbeJ65A`HcFb'UhY0N&J1@%elFZPm3CNp8kAdg3+]dNeR9lZ7I]L&U4TJ:A1hi*;][M5[HUPCSQW/"/P/Y:7'9/mg*2C4
%<d0fBAi7RJ%OY3M:sH^.^a@Ub`*I&(e`eIuVFh$5*]<I51$\(Uqs@.IIMO5aO0@kM4edL*%TYudiW?%T?m_F$2;7/p+S@a<?.c:)
%V8`\O/uBncPJXS1S]eI`>r@E]S\hP_mW=JXYtgUg`+(_>bGliXm928IM@NKVC1@m]oBQG&.ebFfD/uG0Qp&Z]Pn\O%P'Ci=%Y1C`
%P)m8^jt(C!F1;3D+\EB_[!G-VO:(la_kN89naU2X-`OPYS#G06>ftYpMs5Q_?'4?T[Z]R0Ff,Se+K$cSV$"\P>Pth)>dAn#^:2,1
%JlV9Sjt*7V(WS>]mKT!.Ccu<)+o2"Y]>n1-DdX3Xk'Jss*PdC^l7VWDZ:o?"rpZ*)G,T'n;^)?s=GOl(:_?d,'G*5;mi<q<IWMFP
%1n!UE)&(f`j:&%Mg226+l,pl)X$\Wkn,:TLCMF.=md9^'-N!R"lhrL23q]];$iAq02N5I&WTOBc`:\'Vl2*5@L131@WP5k*m<3@^
%/!;8n5;5VV0))apJ`XsUb[`UmAJnp+cJ@naNJHt-N$`hR[^VB,?o*0?s1,`0]mJY]!Wdq7hjk6_<tZAW$.oZnCEI!>Km>TjcBtBK
%Yq)'l>08=T7__VlaiRWJJBK@C4$8UIkCo4b(i!l-KP)>>R:`#a?F0V];`S$e'';t<+r?X>C(][W1=-A$7W>Z&^94IsNF`Y?.F&S)
%UeY:aN#N"oj?f+qNapaOAkAO,`J)AmmGqPf(J1gMpN#-mMKFEWa16ghMiY0f1YKH:mr-;1L\5U"\PhOqXp"BQ+tOS"Z"`L05P,*,
%ZuL=aA5*_:;6RRnXb]c0SBRi^%PTDd$=[`G0h';44"J?H'@TGjlf`Vpg(o.i8WUHHqN[;B.TRqFEelE/?>(5KpCc/0.Rr2d%4:es
%dLnsJ@3KWeKQGCF4j?ajLjS\V$7oRT+`&dN9(h-K/XMMQ\r1U)`mkNl&WtKE8YhX/0G$jnh42Zc25b(@kuYK,HJ\]fd9LuqXqi$*
%U:[-@iFZ"1\JZ-YZ-t`[=eln.Vb-YMF3U'W;lUJ>8%1N!FXEbrbHK"p#)%S'*9l%6r+e/?VWsId":6;n%rVkg95sEghA[W^=5M^&
%<n&rWq^ldp&Y)be0n#G3Y#ET0QC&TDV>%mPRphWSd7k7WmQ>:]N,B,R\2hjI%hb589jAn:hMG\H0`"X0.Y5m^;"qh,"@d5To!lK$
%+=*oN+ETD<3ATk1<=:;KdX/91%/#frAp0_XT6j#%XYYeol@dm[m\G-AEdo.,?`uFbbOHN5@F'#L)`;ESkR=`"Z`@Y%hKXCZOS/Cc
%D,GLNQ7IjR)mCcP<`1n/QdW6:mfGkq5[=ZYQjso'HDoN&Pm_kWmp&Ou2-@YP+>AP)??F.j^UlT2]4\&DRBK'%5n)\2dCqA4Oj##i
%(ifH<KF8_fc]^E^^-5$EqulTI.U,lAbT`uZS&1Qob^\]WOruIYi3q4FoF%Zchm*,5B^_!Ja?h]D?FpNDo)jh8M)T3!FcG9j]DQf0
%s(aAsImgZkRrgM+RUf;"&]22=O?h\BO%=n2LJq<,,LS2W,OA-aO1L4$M#gQ20dgI'Wh5@,l%LiZ,[+1>PB<YOj@)h\HZUp8Qe"$G
%V#l(T0$0u-;a>b_Bphd;Fe;W1Pr5qk+XI@V+Hprg@6GuAPc6)#H'tJ_pVZaNh=E90P%QPLEuIsWCm&Mr$j.<WQ_]RT.)B!de&l4l
%_aAXdCRalpe!B+E$FV[ss,s<,'7hS8R)2h=>%)/HD:m%!Q$hLkE%NSo2X]*m<6$uHb]F"r)G^9JWI!iB0hqm/&u.ds&<g\P";LBs
%K)S<mC-+N1`<*(kaV'n2QW<@,dD`XQ:I(!j^S3n'#QM(J`dLcg1-+Sg$4W5I2`pZ9.CuQJbT<CfKb\,/lDC"^d"N#Jb9eYH;(>l)
%\;GEIn+n<rb0bptH'4kmZB.Y&3]irZig9=XKnK(\9G5jer:-B5bC&aZ<JrdP=\Y(un?K[^R8)8eV/LD(1c\fr7;DMmbc<tN;oE6&
%$-n52WWbVW%c1LYrm/p9k%#0;S`pO"/J-p)-m$(d?3rfCG-]8*M*1dGT5JPQo0PpSAj2!2qm8>oCV^NtZJTOO/"9FeV,PmjYfGjj
%/u]EL%sbcP`-nD+i<<T1U[;]okk*)V2Hi_Z,pK>NV+3+9G@q&*OerJ8cE.OT\*#P#L-#%52GX)CXcmT063RjeN51XECUb$!\+_p2
%h;3\6C"8g%WDZ-,\,IB%]X;=h[$Dei`eDLOr$7rQP_WX[of4^Je+mdHTb5Q68FFBkh@fG>BB.G'.[Qr2V=pA%!a^m"=a^trq8+2e
%:aL5SQC=kA?GVclh40u.]sj!EA6\0?i.3W!40hAQbAs[D4<%V,hcm-;\)dR)kU3t)'VkbXqh^*Wd7YD7mG9mo\Cs?S)AS9rqMgK@
%l2GbA!o&'+Oni5\C^M@EX4?]e?&`E3<L&MCV`/:iS8f7Ak(KO1NG5EkYff*.LhpdgE^rW[L0tf@eZ2W#EJd]%9A<Z$NOhTejnO\5
%1OR:3p(W#.0-"3H!Ef#i7i6#joG-96hgT4=rnC&E:SK]7WVZ(e0uBU[CRl);a,go.C$RAQ;pn-/)<9aDBd"'J]pSktCt$'&92Qep
%)M<^@;q9g3?H]#Q21\LuWP,CMdDZ0T<:l*U5mK)DeOccks(0j$_1L+@la:e`Ecm#cdi-$f$jT5TL4Jc;?I`O:"i\5)c3j1s*05%K
%!0Kf_73Lhci*-$+Y'+WM"@[c`*Nt/p1OCV&'HiXE_eYBW"h-RKXch5@WTR173uni=l_H1P&o%WKTLmB%.s1T.X1>Mn7X_H:Zch?(
%Lr,=Hd.7Qq>*T'Smt6'`ga_TLno!hK'Wmr#C7c!4Mq'do5Y.;f1Xq(o@O3/lY>mdMn`kj$!E;5VKAAa.`K*-7jZ<2Tj*oZ-%:&i;
%JY,[%*g)n_;%5m5Fb7D-Dr`1%WDnEcUs/IW<6bE+/V>:u[:S^V*sZXs+2:)FC6Kcd1O8]7^%]Fu.JEWjY%b=jQW$%c-LM%4k"PWZ
%#5Cp%mqG\55$pk$Eoj<b'H4ljNBD]#6,s_uhF0=!9[VacbMPMU/%X6HQ7#pM+4`i8p09B`IacoAoHPjACOnXtO/,<W&rjNpP%S/#
%cJV9Y2$B`nq&<Kh!uatECY>L#eQ2'G+[3?3$X`lho`T@N_mE^1k4:/\B4=$l@R:HQ;ENoE;C\tnAfL_jV;4SGm/.*!]B6Ych",<U
%0nFZjH!ppuX-p]j;OT+Ij?ZtXOnW`gY[%r*DNc2&-GUX:+_fQh&gAj2c'k]Cl^4EcWAKX8&GrqD5L?mSQhCRbf(VO71!NL'C[Z1B
%R?T?%@Z'o,27[-P\;VD_k,,*!X-P*L9>!]VJ4qojjlgq"H*#o,+#ToZXWL;:Q(.+"5"pP6VDJ.SMD!oecN14Fe,A)ZnMG11R+Bm<
%k[jJ!<bc`&ATrUEoG[!<KuA;Z7AuiTe!LZXMMf!4:;;0$4jlilf(5mZj5,+IV:JJr7"9(L8_u\RkKitkmiXGLd+pR1Hp]g*.LYc-
%R1Mj$>DE?7HZkbZe^HGjm@>\>p21$`]t*Y.F3npUjT"qcf;*c`G4X1:&eXI,rQi0FhL>4:qXK*^TDNkm?f(P%T>!N)WR8.;)EhXV
%+6sJS-F.&h:jmaN]oU0CD'G-kD+l%$:*dDeO`+$\-Jc:3L&:7(:@ksb-3)b1qXhBAf&m(+5PO[d^V'$MlC\(-^Vr]_1og\*^<\\U
%V9=+m%WsM:Q03V?&(CE&^00psq"SpV,l7;lpXplf\GGI,Y2o%ss)W+U\)7.gIQZQ[k<<54QhPp#D/W5C2VTX8$eP"?R5cn&pJ:T%
%hFAc,cc#VR6dPCMH_.]lL<c0#oq)UXZHX-QJ*t5HBcK=<cbhnqmc+J"H.0Os4=``1J+[QQHOkT&5ij?i5<e+_l2<d&XES-$r4-J:
%I/NF04=cbaqVsmDM7(t4T6iB-rU,I6irPc:p[K0:]^P_[H[Dd%Gm7D=T:`c"JZeltnnN*?pX+5ech.#-F3c+XH`FR.L:lt-T;Eoi
%J?h@a[1C`ahu0cC&,?(5O4X0gIK+1^='n91M.)hnrof#q[16%8>q;d]"]J)/+C@DO;:Vsd!,U9/D>u%R&`F9M^2@,d@M<O=Eos*u
%5232W+t&k'E_-4o:iBla46^td.GCpboQ=o=.K<"k^Lelf-JF(=4?SHMZ8:pAQ)'%Nh.?hS`;r][`H'sA?[iqdapdm^aJ31TZ4G"#
%%c;YLoZ.Dmga%GR+nq;@pTLpce1kVBS10GOoa94N=q;?GKc!P@R8?h[^-0SOE2&l/G024TM[0GBOkk&`@B)EW'cE1,>+Ln,(f<sU
%SfrFhapqA+g0rXjaWk<\Q3>Tqn$@L76#rl'`*Sg3H%#m5Eg`4n/RXG+8NIFBF`aW%p?U01Bu!\*fG<lad'ZU\csY=N53)]S.S0uJ
%YHOf>R8c\Y*>'RLV@H5Al:.OQ[@/>ubBjbh?D$+f<>pFkgkVau9L4!q-Pe.(9Z+ej@U?AR6VpSj'LDA7j9u.KM:Fn;!0Y;ENce(P
%W=GllH^?%DV0O`AnQ=PVFNs>5H"9MuaiU^NLrVafV:tp!*V1*-n7f7$%Q2bN-AT2-Ph;)=LcKsiNb4R:jlACu4\hFWDi>oTb>^&j
%'>89p,,it[56qQMVWaJ]+o+s(RZD$%oS3g_Y6drr-,4A;l4/\F<a5f*9C7>_c""ph!b1TRoF7jj`4k3o_HE.^JZTUhObQK!M)Mo'
%J@2qY"RGBe6StW&ImY2\Yu!!Dq:A#RW\:`c-c/u`_P_dA7Z_,3A.<;.CZX/2a-`#$#[>Kn4\ABkas&l#OkRa-0_K$n.CHHrXq!MO
%*;<=?V_Y!b9=seBYuQP4UKUi!Bgjhj4E;LTl*=d^S*9e4d)t!Y9k#_f*KJ\$NXcagZq:">\$_+6="'jC3Za&up68[p"Mc(BG\h17
%<g(@h`8+N]fO,WjIe$'K6O7t7PpH_^K3SHfKbOpXY:uMe+D/Uq)aN/7S5iY"GDMllgXf:*Yo@/V?=/7BBb-&rA16s%+B-NZ6;g`(
%(mo)6(K@S#mih^/#t"\JV.",^EghjL8Gn'FS8h9&I#?HR]-]dkD7,a7f4_.u*7%bVO,uT<&82$*akeLX0Sb%=1M!j%mq%p)`5oZ8
%4A-u(iuZl+JRNg?nHljO]M0l[VF#ppHhQi<Ek;cm[,`PCiDSa&4Q+E%'P7Gqht+Sc#ChdjHr.C6E[E0(JGNtq81j>9@a^!V5bB_h
%*7YOg<d'gDWtq<F'$R&D#bccEnG"F,5Y3GCJ''!%'\BEO?<_F0_"g$6S[6THhFTs=kEtR0-AF)3O1)6D\nWem;,L+tC9UQC>1TrG
%-GAL<.E,h$HB_Ep2hgb<\5i(ho(E&&=2&KFQEF%4X"Oc!!kGZl,W8/1JW&U8D/Ub[h6JdWf!Y5mGk01Jjsg8PW.4V*Scp8TYE^3j
%'K8:2GZa#fXu/0`b^MdHQ69Y0-Z<9CqI,oVaus2.JP=njhr25FDXArKV)Se,YAPN11gUm7"1#Q!+TtInSc3^(O,o30g^g=1Nr,CY
%aGm<4CX8sbE+:bnL)[2(274"#MIstO#V<;UQ<QF[a3T)as.-R"r70c8!<-:kcRU2J:"oh3@YdDAI`P([06W:ih5Wt2EA:7:)Y7<"
%:4>(qnQ]4BrCe`]m9o=Y&\_;69`9$_lV1Mc8A5DRLh?ph%/S.N8AAZg_M.K&$adOLWjr0U%)WHMo9GjA'd5/\kGg)Z5#,g%=dC%$
%N78BYf_['o8rKIe'Iq1.HABkD24;>)8<&]Y*J>+so"mZK%+@+1^m62%qTX.IKfrXW=8UiY]h9G%_/)9,K?KI,DXu_/ogb:Sk@OCh
%3M;(,E(k>5YJ^A$qrEMWl:c^i/n(e3Lp`W7q-&VJ?3eaqrJb='[&[h,ZZH8<W*&n?^5LnuheaB\UbtCsKXbPgHGtJ0-`/+$4\"Vq
%;Bj7@2]*Wt9lC@)^XD+,9YIOl5$sr9TaCL3JH^9bH=+D@\4mVFDMk#<R7ahJ[>lg#2rJOcbpVb9R6<*[ldEUbHlAqj7eD!bGZ"Bp
%<UDh3D:CT)0k)"Nd^%Qh0SSP,(AmThR&tjA>`p+["cF"fI"L9[EZBTQHVW*H7lmPWTl"Y_RfYJaQ<DW]+V7?8Ok1qP`N]1M5B,t\
%.Y$ropH!:6nn?T`csL#SM2%="-ai"@<;j+k(48]pWWIW$8VtXhm5tP;(?a`W8]YP#I'TS_;QL:H\(:2s]8_:.Xf^c?gEde@>2o.P
%J,VG'd:b-&;<.>n'4;)QXU/:FhlN2OM_@SHZEQ&8F,'5!`FV36mT@IY+g-n4MLEmX-o@g&ibV.f93+P?bC<HBA,/'pOaOr>-XEl`
%6$`D`rftl]qQ]AfKmDY.5sJ4QfF^U]G;&&XA*#-HPgIhbN)"2f<b4<eaG@YYI.+?2Q4iEUB>Xe\3jZ)ncu:krSS;Bg1bs><a"Gqg
%?FH=5?IK(U%326p)YIH$O2'F">e]/2j%"[mB9kHX7sqG+V?Jg`8#pYr?ij)PNYi(*30Mt;=)%#jR.<nubk2mV:-dd\`WhZ<HoBPj
%Z.KL\=t-Ch(T0riNlPZR)C^gqKg""T>7uIsl!O*lIs6Np1"GYEKQ:#n1gg@s;MacWm.oIs!A!=@"Po#9(1YFSA_]jfhJ[EDf!$c1
%U4#sZ;ni[_i/Tm@Vquc)]5(beC.u%%pb_?PI%S"oPnXMU:D7KJi&DlA!HYB:<oTBo5rj?eF.>o(lA2+G%j=coTiSA4G?Z;Q+o(Wm
%9T>+d!5c.kTGq3"j-hcD3\05_4_52O;hA]?88#D:?DJp:e`6]DR&i'-QHR)SB\U8UB`>[s7Q`Rq[6'Cr'=9SMFj#EoDj#sQDZ2Yt
%FA67[<`a^hlIS>8E>pqe$H)VBB)>A.`B+!,NM=J7eK&>Hb#H&c%!Po(*gt?<965IE_@\Zgi>FDpj_M`(F?f=tKsBZ"*O'FK_J0@(
%\uh'T`+@_"&p<)Y:[^<rNOY!)E%UgJ<#RAC[<(oVeWGW/d\u%#\!2N2/t=p%c+NA9!eVl%A;ToG`Md)"Al0.m@J;"%rr8uU?X]R[
%\PQ12-&88tR+?uNqU0*^@"p*D]SodMHYY8lNU,YP*NQ]-.YIMmd)0kk+)B2lB!sjm8FX7G+"6=<4-Q@Q,84qDZUWCf+hG-YIu38G
%j.&dqYq1)qH!<hH2:g/f:+,^d@Ht*^c`gcRin]3##qYmh4.+Zm[]XaC?If[Xi-r'DN!Rn:Yki7WeG\mM]p5r?AY:aqCUU:Y^$[bc
%jX-[LG;OIkHO47cfn;n:-pMb1*@C<I&4E>ugW:ice:#Gl@UX<eom'ktbsHq%:D9aG9l25YrFS!@59e:iJ?>T*3Ln=I==L<#SD?I%
%Rn!J?-)N)pjQW5:6@$H1^!0O@26_8;moo1K;Oi\D8W<IVd(at!]*%(J]s!O*I-mgrD/EDY8h6b_jYM%E_IV,P_9@#`/8XaiW+m_D
%V\]aoKH!W)eQQ"i"O]8rZY:D$CK?!caZ6g'WOs!?i(hQlHEhnemdhcC;o?96GbX7$mAG%1kR;O9>BBsT)ZE(PkLFt>,l1eEi>d/J
%1Z%@pG4!'bkF=pU(,16G]D4`nAYls,4Q<6?%@`[F;D`VClW.]f4d._0iR5<ha-VAWnqD,'_96Pm:*,4%c;.Zp<;RN;8@(UZYqp/X
%%.5;3B9&Vb+$/fi:-/BggY,BB9+*B^87<Y*ZDm%12KbD;DhLEB5CDp6rlF&9-^)s'_D_%KnYCcL*PJd7QgVX99-.-cFh6K+C2pcJ
%@&#bomn0mHr$nCFqL!aCb[:<>\kC"9<m"]VR_&K0W4i[SNceF@gms/DE5dn_jaO[J$A1n$0G=VehQEU@VYKl&pXZW*?TXZXn`W&M
%W3pssr$_C]ND6b?91\g(*uW(hRajT`E!g/EJBDau94U2RMI%\D?ohQoMH!\u=%@I)*eRrb<>J`'<I5=.$idVE=W,NTgY<1a`UOZ<
%HAqcG^YU[rN,dc8KP>WlL:>S,19B`+FQ2t`81Bmt[a'9o[!%/6Of$8E$WHeVP6=I^dKKg:,.V$<E(q&_?^o=m8C;YkYshadF%[]]
%m4cILQLUZM0sXZ-%FF?'n_):S6K.?=2is8&?/*C'rO%n$_ks,0Ef'.'pgIiImo_E9PVb+_`PV*7>%*euUKtR<V\@XE?<=9!:#d@-
%cHi9YAQZ,h&ZO0K!3D'M[a+\G_c3`9JAS7/W")BXq:;7s'Y>tVO[hQ;p8R+J^=t,b0m1`8)$EUU)@]1Q&gYg_>L-F\[P%-+>-V=L
%U/EHo<nqNV!]"1+VO$+m\PgnC^j%k[]l_iZG?ZZr-bUdq\1TW:4KfqVdI(p,"?"AP!"sV$;#h0L+In8]AZ3>%l#e=#Q-dL&76LFq
%elTZ\DT1,lBLS:W@7l-VO]RNY9;YOo7@^6sXYVm_d;r_GbQI9u:m2912r6j'_F6?g/0ThcFH1_^r`2c42:O(YWpM'm&OFVn(HOQ]
%E,1)aj;(2kYqb?SQ>Pg\=e1bWXjYR]af/d_2<R`jX$3.dj[soOMAM*h#fX1C_HF:)`MhcbV[;mRe?(UWpa2Fa%;E#[DYf%Y54Dpn
%:jtIZ)Cupp&)hQ#BdCaeA&OO]1R1,]e<l[Bd^@uC7ljVC^&9XKZh&BFMqVcsc_fet(Nt:PlJ";E+lZLN7-K<J1kT?umlW+Tg2;`@
%=,1GpL-[Q@`o3#p:$DkTT_%=D`,"DiGjk+0Rc];/YJa]iRbF#[*!hJlHEZ5I2cbS"&!+qXq+!$'`><EaA_mXWo9eZB#NX1%%c+tZ
%:KnJSEifp1\^c)qcBlQC]Lcn,(kruZjkhS1QH<UL&Xio[ATan$e++$SDS:A*88M$$Qj?8J\,7FuW&&uMi5r7m,ptaq_NL[t-)1"u
%2(ZC6J@2"`C?r#TZ2S9r4=KsH,e[0*auXAXn[.BLXNZJf9d'S$bpk\<jDX3GRjSlQ2+;/P1@j<!^9#+e*m^Q<bZn)&r%[KOI%Ir>
%aIZ\9MRMT<[Yc"$0k+itS"s$gWY8(VAQ-0LZIg0/6G(O:Y)M`LJKtJJqm:*K5g<Bkb34GN[#QT*J'q]27T#P<jZXjn3g"\)J[*G@
%M.qgb>9]7g;r#GVn"*R[>-`A\;_J3g';bQ%PGO(@ch"1p@8R<&#m40fPBWK'/2+Y;F1r,ZLi\'3k&Eh'^nR,q;R?#$9b>-pBghRL
%hXahVh<9PSH#nLRj.o,Cdh%AZahL&u]2f"^7=qGCbkU#FH:D)gZn@QgQ])[@62oke5)IUTR2Bq#S2=9FW^:M3Eq/TSj3%l-p9156
%rsG^l8]>6ZJ+mrhSZG7c>1[N<=ML6gqc-d!;cb,3"ULMT1tAS,OKU'PW)O<k_FmliSoc7V<U:4rg(_b/]u2mWrACor'EW(D#3f6U
%nRhXVB5*6.^0J1g=&Wo'=+.^J1Ep"a[b95,!2-g0Hpj6:L3f*&!NBU?0c%9Sp!\`7*@omuEk''5YJ4-7q)YIH5KL<`$$>ai!)?A2
%Fh9DgdktVg+B.EA\Q3hcY%qdBKP])gJALY?(Ms%%`Q_!VY_90Ca;E^Prn1ErP>Bu0=lpGXldNlS>K<3f/aF5%rIZm(n?#:2n:'=k
%OiQLgF.0O3U4:72GA0&m<<tee3ADj;[<>%=mN'(+.oQ\9"#t5Zp\h@W:STuAeGIegIaoP=d6YQ,[hZUeX/d1.%]!!Fcjsn?e#&H/
%XsW\6"lcOYdm81B$ZiA[,:hjhX]5lg#@2"NAb(3q;pZ.;K%5O,SF5(7p#jnC[4eA$@Fiu3W?uG:A?R)cRhd@_=(l'!mJ,8_KI]:Y
%j:BILNEKCIH`tts^4.ksnb$4/Onud6(EVep>JBM:\mLC=h1JT=l=XnnQj,t[rOK?,_TCJ.^FKaKREbuko5]&B`<clRIujIOqJ*e:
%H2mdNqR)mmcZca[g0!`_'#uirGDQ+R,^J].`CZ>s;jmDc&\Su)H]39K;L!g:cYGRn-CU>*2/UMD6@@EjZ8#cYQ1U(KJ(o3E.:oOX
%OS#5E/2g4C"3k;48[d;.2c*D5+_`dRDm(RC5c_K(]93upYWSBZYj2gh('/I?F(\a6+GVjR1\a5lr;+2)F('q]oGUs"(MVOh6BuX"
%5G2E]@Z(fZL$DG\5m+:C9]*.:Bt1fF=P*L$TU9#S%#8RpG-ojH+G#VQli"]O140mV"oeoj1!TI.O`fgk:*\7<8Ya_5G*B/f`=$\_
%#l6XSieJl9s763fL]@/,s7u]m00fI3^\kS@qOdfbs7ku2a7eucmH$S4rjVpsJ,f+is"FEFs8D?BrMT\f++O4`s*jrSs6ZHY1Y;X'
%hu5R;r'0tK^PXtcDklL`<gioSf&X_AX%_&#e!O*#Tj>4bHV;6<eSVl[4CU2XbOHXC2MGn6W[X%!j_K!Ss-&:'cj^32,!92m(HJRf
%r,guDPZ;Fgh`e-as'KDaLk(_#$hO0s82l`PYK6Ij=@'Q/)Q&Z*L&4lI.&'GPFL#Al'V%>TKdm'qPt&A:7<OE::oNKXc!p+bk@'Z9
%Z3X!pZ.c2m9-nIMAUTCZ@HDm1'Wn2h;eh(Z)5PZpS,M8Eo<6=rmb_-!b7qOH!DPs5ekj3g;oOf2_)4S$9\Yc_<TW>MW/^-YLIdln
%EXu"jZ(?"MBOr&Fm.#^i(K?Q`Dj]>cG09C*0ja&;r`b7LLOc_^Kd@V![H))*CkuLm,bkTWL%KFiCu<^Oi`muoCJ:WjfB)@="=%7#
%Fcf>IRkbtki>UFKk-?;B6,JaQgob"%@m14+Qn@"#"Tm,+Q:?UEO;s,IkWLjCXj/$6]:WBXq+o.1C_=^-(eOOt]K<L:H<ICpS(k,9
%V9[iU2F6V@m;aI449[8[b*GA.8KjAh6(=9/QBgSp9G[L%li]M!Mf0\#GOJ1GRqkh332q)12_43AL%g=t1=D5OZATJANp?28m.\te
%,Ue-$<)YliPG^QeWabGF?Rp9=XY,"+IeU?0i<Zi5G&G.HZ^#IXq"g4/H3OnnA]@HOE]_2)3h$_,8,QFT&sqC)B?RD7`pNPQr8c9R
%#=76kDp6HORrDal6+o:HO5/1&9ukCrooP_)G#FlI&O1PpM3J=EY`rK2k6_qrQG8o@`U7&;+2^kkJ1(pNE&r]K\=qh-kG(7Cp79gY
%'#:m42/>$m19t&2J@p$$gFb#]4g\A"kQ^A'cF6nlS%N_mcZWTTpIN`D_TifrfR)ELo'=6bZr73>DQ<5CWeM50l:4S7pYW[XqnFjO
%csG1^:%`X273>6..(,@lEPGiMojuLmg3e@W8^_\Dpl'ZYC=sgh%[tifUkMX.V7:::183ep_-Tf2>,5r%s!pII;\`dq*JP#8F.\_"
%o(mu%e')/sgR6[F-8X<VImMIR*<u'N9B)C-257Xh51h8ube)3C=8ijG]qq[A`9s=0#FSh^Y5up^,:.hEPO!0\pbk,icVXk<U<:2t
%?8qcjVZS'V9@19DaBfqA?WG'YY?@i5d91iZ8Ldo]]GfAN@]%^cVI!/Mn.&@,$L:*q,PHEikm0eZ1DH:J\5ecm/ZFGVj)_+V*nkV5
%0nF-/d^@F4!+*k.XEIi?NJ]S%/:D^MNL7JVn(kCp\Omur`dR^^\lJsr_EO9t;9bY&"!FGN?g#qJIr#+Qmug)+]pV,jeul@T[E;H$
%F_)@\+anteDo;]Pq1ian\YFbefM*G?lmS9X_F7!I7/YZ;\-IOg,nOc/U&qF%l-&aF3P1'l"&u>`c2dhhUgg?4f!\/iS=cb%Jd>!s
%5*cP<l*!IEZ5Gbj>rtt?VBU?''5t(s!:-NMj_=Q4c+\HXS?s#+#D_Y>_dT4L0?rJ:("6(_:\)C^BTn[EIlA[D0[4LT8E>G2%Kt6W
%VZe?/0CR]b]ks-JHCMQ>lY)T>;*2?i>EZ@O;`pHtZ*$_$IZV.+aa+VrgaOVojCEs4X('n3o=R_%C/&%`^k<O[49+m?R^emYA\4!c
%^%;I3aVst9qJ4:[%02*EHMKh$cAV0pjucis:8j^aR-Z.JMXWBcf<i!%,Lhno+2eBN9?5VS_D'a'(;["jf"35,Bhnp9[6Qb7>Kc;)
%C6Z">"AQVQZI)EYeo$;sp3uGcq7t2K6CH'm%MW[?mr&$ulj(a=CG$AFA0d.K'aq>e!ja6lbV#^&&Urf?\s7*C[ZtC.:"Ot^V^s1g
%Ee@^/'=H1[03][uk>Fq:j9'&tgH%e1L>VQ.]\@#MX`TEn.q\@kIscDrDm?2[Jhrr'm@_]"e#kfFgmQ;&&/e^Defqo4Q@CBlF/12@
%/KQ[XAk=?Cl(Q"c&;/0p(uu3T?7G\:FW"d9^ZJKWI4j6$N["%*?bWg9n9F3XnOi?Zj5<Y0caPZ=PAS2o]sobi:eC,&`c9XM)4&A.
%k^7!Li=U$V\'&qT!&\uBrp"lk?;I]L8ZXn@^Eh+*i1QBaa`\[CoV+/L$(pU+K5`NnoPHF6k#lU<-"\RK!pP"kq*19@e6n6Rm+"<H
%V)OA8TrXJH,ALD'fsDb<%C/YLGO?aV#F%b!`%Una47lb5VM@WgA/S-CFXftYX&aSN3a-8b/2tQ-`Y@rr.e4(!_;M_`TuI<.Wee0]
%%rO),lZBkiIF$CI<F!moqY;=ABpF(GpOeKVam[I4[kKbMrpah'$+SL$kfro$G;&nR7_-9G18AG_ReU!/cV3K,@]NukF^YrummsbD
%Ko!669TgE/>^+HH"duYMpUZ5I9;g90#%Q7IJ%%;=!'pgQ+Xt(I"C%jS$0tc95C&fiO%dO'F6t?3!od@G(L:"0;pa)Q[ED*`=m<Yg
%g^mA4/f,0pKiR:uju@ETbptEi&=d^nV`D(!00d`O-X/Ks">T@c;e&bhFIA^_66qB:L*Lnn[I1^XRpDAA`tO>XXDrH8*f3F;2MTuP
%:@d1o6ElqhkIm%H`K-sfLZs':ZS<+HjR9PA+EQZ\#D&O*"ZKecq3bTZJ,82mAdIHgr!LQ/%6+(Yl7)&Q0ni/8mO8gLe#%4RRR1?I
%MYsn+5^V_VkfNn+nRdA%jgO0`=`H[C)/suMg^%068he]Vg&)?jT5t^SpQ7h&C`=p,Ds:Fg74u4ML7D$dJWdtsT?OY$;S=$I;hN`h
%b'i(=<+sD:?Gn4c=lajIqP^k<TrAU,NG!RO'R<,fPpF2rRpb=[d'bOLs0O/tP4?^5aZYG;mdV$`FBL/Ua+7:!;Upo48R#4Z9(A,[
%4\G7Ne?dJ\Y=^DNa$*-BjQBje0k?!?:]mFmEh/Xp:?SSA*i/%gf2=m"jP8Q(KENfOh2&9M2&EP4,ELE-8',Pre1AX/oFMF<C*=rL
%%B(&4A?37DMVCYqZK]ja0<O5*"e39.g-JC`TYI;$m-*.e:BNsR:3a^Z[^pm^!"RdN",]VJ.^IQDfi^=8m5uq:VQ>6aVm[b3I/e!p
%P7;F.N'o2D.,YOJ?XN4"X^Nc?=L#_N18h@l8')SnZH%;/#m,$&/>V2N-o+#,\9&o3<44L=1.o.mq6_)i4T$AMY(]9/A\Y@U(2BV7
%%gGnq@Z4mO@mj6t7FL,<KI'fs-pW4D5XkBUgU2!H^sr*M#IO+KDl._S-0oL3j&N:o.Rp#&:cWXZI&F#n`-:B,>pA6-V1q4_Tqq^i
%31td?+%O(`DgBVl&]m(1Sc2=uM](1JI#m/t%js2l)?&Z@'"!P(edl][H].*C4uoPpT'TBnQm@NT%2%pkf?Y0^SC6OtP?WcicU'?=
%5^L7ia-:>i&Z8"<Xon&smI"6&hZ]D`4]T2L3?)4=pZ<,irMUL5b^F7dmZt9V*N/"(eQ4lgDnW72K]uBD:psOg(VoX8RXUU3Tcu0/
%*3-<oY7N,.IOf]2p$(#B/WVT>5f@U<S4iN(5+0-$H.T(9&YiZ*lF@O@GAhaOj3_R+a#=6B_h?:>/;C3CK,!!:@bRMTriK5-ntO!W
%[?;(8ftM43FF_u1):7bsAW[=;1W-[Rpm:qUGC<rr+9VAC*3iHe/-/4]H%57aIZ5N7M&\kIXpK#,*RQ_Plj+PnX:I-SM_7[a*umKO
%heI/D73G`,o?i8He-Y=_.7HocF3>3eZO4`l\$jjNo<5%,L?@l[U>/HcCCb@9eHMBfoiQ-8?e33*^DCg\FtVrG>oRoQg826%X%`2s
%O=l3J;WGmjrCA@<$>3S6h#n@;-,:./;*9oILm&"+P/Hq-Wgd)aNb`A9Z\D@L>Nl@@^qtYJa\e'lrWLc:(u:U@_GU'gRCacu0aY4N
%#PO1nRV67fT`Mo->tGOTl@$&uDW&5[*i:[EVPHeOQ1pF;18KC@61S(Yc`6'#:O96U>Ei-cfP?_JS9l8SVO6Y[Jebo!#Ni8er>(="
%.?QB-SNP"TJ4^Kq6b`[eY<_[37aBM_Q);AplsYsSj>f`2b,Tge]+?[Q[F?gnNAL?t-B`%+"NrY"]3/Uk]a=Oj+(F'58-;]4CRjKs
%Pu=YUn!gV%:^Zj=Lgf*k;_R0I1S]_h+C"`'/O#hGOdG`fCHqRE/cH8SNgr:mr9#a*LJItb6i0$oa#;h+L_\3_1WhJ!k3G@iC/([d
%RqM"h*eeZG4$0F%Ag:'UQ7Ko'>>f]6d1->dQS@utk.RdlU5ufJqFmsbp2QASNF_:ZQnh$Qk(s8m$eGp>j.7+'el"e$8lY'sONF,=
%=WUE6Y'ZGlCd7JDp8_YfJJ(-G/&$tmQSJI!59%YDR[&eW<k[^c+u7Te.aX-IehW*(Y_h51VeLNDA.ndE>LN4&Z&B`Z9,#ug_.L:-
%H,q+5QaU.DOL;)s#EtEFaVhO!;lW(HlrN-&]Cr?_DEqM\m,&10eI\-R>NXePrRd2UN''"EgEU5I4^US;@DWeY.A%n=!N<p_1o#Z=
%d<+Cbg:X1^7c)ik];*tqHS_4^lOH+0KL&;:5E5RoTBM?."VQbd%lm01s%I41mEMY`g:AAM(ib*sRC:%j%uAc?-RH)?-AneRCR%^L
%-^(@`i2d$iOtKJ8AYuk)cO&[tX.#Lmq/I>0H)*TieeG0-XOKHdQ5RDR>gr>I1VEmr^M_EL#?M_<k$EjSL@:n0h4hLHcJ:KJ^g;&&
%B\)C)]BOu%XE"!.%Z>o+4oGjjb^Jq3j'EQMF,$Nuo4?jpI%`cP&g0'fe+:6g;W^h"$Yo-2+7`Gn9jobeZ9+74hE>hYalbtnf("Qb
%qqkQSjTAu19iR^J)*Ych&oAJ"aN=[sCt`aY'[AlDf?$`,A#f*>YQ9jkpUjetOp7ug4u4u=Lqha01X10;R:2+A%=Cqn1;uY;qR2iK
%Pe!;UX40SH<,J0G2e7fQ/B'[`me4u,a_BO7kI%:[(riss?O$K#a8+a[J'VH/9I/FPn<kM6UFbFs(Q4FfPGR(h>olu;c&^I<%=Zj,
%R];qu-(Mt5bVFQ8=uu]8lTR`%RIZ0m$bI^I=1.ImmPWpdhUc)ohCI6;XA++5if@9p"QUTPbV'DQj[Tfp>6:7bA9Kd6^)S5c_SCD=
%He7SC7c`7-pZHs%TGP>Nqtqbh.`Z&,/L/$[AG:2ims^=@S%koJZ-J\us87HIpaInU][uJ1aS%Nnm4K,V0njUYQoq\mp?/HEmJKp;
%>je5cU[46]:Ppr%&0U>8:,*_pe@`g;1"=9B53/,t.h:('W`JlR]B!<T;^&-SC3_';L,Yq/Lhu5>20QD2ggq=XFXG+J=XR2@H>GO-
%%%CN(2>FKYMB(fnZd=1A9]u=/=C4PjO8j0LqF6'2@d!_BB_pA"<gg6C6u*klNNR?m9[gWtn%K.iE(NmQ8LEHac4-j$e#tjop0a7a
%3EQhP$X3X1LhAY+c6M:OpYAJT?DhV6G0QVEPmXXhJr8S^TJRm7E.U@C$a;>dNC5CS9q><iR9Ij^qdi"O0DYs`,^q[o@Bl'[Vnr3l
%Wdjr%K/hT%G2a'SdLg8C2[Zh%4aK5:1.ZTkA2'i$+C;Nq72$:K9?'Q)%YSO#f"9?*<GlL_T;RTPjA`^j?8(0u'cQE)B&XT3<3bMj
%\kPOI!]&St_7l*5R+\e-rGJ]@D'5%tb;T-?)S@tf("TK>Sa^[@Gl>]JBPd$/*2cJAHl8q;6i+iQ[:B#QA]RkD8="neIZeK3Bq/rg
%a`9*3]m&kFikT/hmSA5a-TOW&T1fs:[2/l$[#d<5^AD>]\l]'"\pU2]EWj!Sl.0aR]b9/.9@O$)lO&!bQ)m_,no%+V6EEpFmR;X<
%F_d(YYC=(7Q>-np/S8J?_V9qXiZ?:0NKr9Z=H>[*]jobFO4u9=cUTQf="T&2f_Dc#NA[jOj:Y#h?c*2mpMp6(Jc>.!5[N4TYtFa;
%X[iH0mH`"HPJ^s**2-rdg(lM]mOr4G?TWoJ=`gVjo*p]0EK/t1OHAk8V0g@C<W8enA-gH;lRfq&&oeY!f7RoBfWWBP=X>\PMX+K\
%gfYFfb&mQ!C[;:9WhV26I2=PkC7*HgL:cLXkX;"R"OEcOR0J+KhdYP#:gZ]an++k$^%F"nfD3h*4%ZST-3M\,lM'g*75<?RrThW`
%c)MV^h-ENbY$+*nE/m.Z.i5(mD]]Uac!AB^b)bWt6]pR<VJ/8f`m'DPSXI[<3[=)&8Zuh,e?!ZnYZ6*iB?l;):ZAP5mbV36AUoL8
%QVeGlf0&4TIB\C"W/L+Q<#K3.jKetZ.!K\>,]Xd6Wo\c^2P3UiYW=Sk;c<)4>lpWfrpqN6]?C>/H(*LPmNf#/jL*,U`\O#e5+Oc1
%%-"eO;SUbY-%6#$@k<BrMOQ[pXca%2&=;T>n>?N0:g+.KEr&nk&<edk=BsuUUhATVQ-a`#>pm19Bfa)5U2Tg>VnW^C[3S0,e1!#!
%>dtu$9fqee:hD?@0lrl=m0Vr+3bSWK-FaU66h6#TdpZ16K\MO@5%['nIrVCj;*RsnNr#ZWoCr%ZeOMY)]sMr15kV\X>%R8:_l#K;
%?GM8,/DKIS%RNe)!u?U]ml-+SM*b<-AVSEB0>N-#Gm%KaJ:jGXisK6jhAb=f_5\e\/O[;-+,,#J1p?Anlm!uUE:AAW<5rKaLc&'\
%c%pBed.!duDAg63`j=m8YDef+6ONXn1VO@Mk>D0o5@"/&CP9LM>oA4=UYk0k=No'I,]+UdDO*R-i$]==TIUa`KZeJC)DP^-I\Du5
%rIHoiE'_Z[9C3c'E0RN#M8X,9KQ<<CJ?\D/`RLe[-.h8N+R*3OSi*52FTD1MqWe4FX$)IsU1k7::>VHNUK3eA.GU7;@HHT>fZNdu
%=(2BXF3VHI=sgG$2jl4XW5YqmJnFX<n%CkMoPd].7sM_UoT>tFS!k/AJ8cpr#&^X.,!h9nH`oK^4bL+6[B`RePku^;R7Qr^rAQ\0
%lt6%7fFICaVk3-!Z^P15,@tJ`B>TdeFna*e?CXBiiop1!U_;c$e:7$?<QiUFnBiI>E@5?jcRJu#GWr+;4`97(Bd:(-eXV=cbXfc7
%4"jb!;c(PA-Ki-6@c(L=iE#2mp7?E'-6u_o<?P]pA`VIFrH<g3oq*)F=eqr?'-O("m)dt_1c[2(`8r`(-DgH8_#@sqEQr@L8B@@E
%EZ^[_;R.'$0-E(9D&+U!g8I'RA><!t5st_^,dmhdV'eO,6qQ%(+`/fRkQMkemA\]T"4Vn`Y:RuEr?1dbZnPB8T+)&O''qVVF""6s
%-tAJ]R#dP0q'H#QU^@cdKRUjn.aca^ClpVK$^9(\?_Xup]&?uQLND4\V/>HcfI/m0=pP!=nD?(?or?>o-OFtg`%W=Wk5sYB_r]ro
%i&qMp>D2W*!313k'X$>6j"a=1T;QU?i_;YXPU\3"1uYh5<bk!JNY-.u;Z!!Jk<NObXGb:LVE%3G,?KuF:S%\laTUg,+eO5;Ea/Bp
%WA5pm3Ia^)Bfq1LRJG@,gpa6J<lqG710&@7'$.mr!*]8.kEop:qJbFDE7IA9'QL25PP9Nd.1)4O@DYbm22%Mt,?9#L;)g_A.N&;Y
%qQUcg&Wn96\r;4)$(Ff>rdf1oSlMD0*@sKc+i#+4R[u^MlXV']>#9MT"c`>n>*jtG.dN$Bo"9780`(CKA1D"H\'"Pu<F_H9NVV;?
%1.fM')R%[9TjDrZ13DAT@F5ce*Ri04;f<0tnOZ.9AFU/>?/5H,*gJ(X[;a[s:nE[I"7D02^HYoF\E9"*JYu3?RTMU/V59.6::J$S
%k:+L*T[E>Ef'N@(Ef@rIGAj&(\g-c9>nU!B+.7C&jN8LbOkc^XYu<Cc1Nksde]9`*bgQ&n5DM$ZhSLT^#Y_7WJ,[J1MmoFAio;[B
%$.U9"E6_VVV#Q-F;@4kYL,$sF_H+Bup?\M1DX;DWXG7G.*R9YQ/n9QAMb.dEdq%Fk;S=`@(&c@G$um/t$#nY\FM^O$IZ+[@VX7gm
%_uaL7Kp_#o=B?*>\O,EU,Z-nOd`cGtlQZ;S4B"tZ*n)P*9u0/kfoJ:M$3,.<^ASe=lu2f*FD"/S8pbV@W@oH]kM3sB4;i6CmG$6h
%^m,D1Q0iaB_!\XXG":"6#eVq;.:+%uSDMEd^,l8pC8sl%9DYq@hQ7>gdWQAN-Auk3>tbCO,obE1b\UEKL>K@mf2P-2]Kb-'6.Peq
%e/6NZZD.rlJpfpAUP[rsom6..eP4rnT9hCZe$D>UEP>!u?EMmE(;4$**ZW]eCF7h_+0ujan3@F].&_"P\7]YM/P"R1`CU&Ah>j=3
%Q8C9B`KN$,+H$)0oo(q<05hFef,'KGK"#5C>c&+Df5Sde2G/`H7DDG=IPYk`i@q^=4Hbb07k+`#IS8gVBh^e;VS@(BIj(H\gSae[
%MRW@[;98[B[CSR')U]C$'5cL#Ed5-\EVoH!ADa*aL!n:*H?Wq71D;^DX'[e:g$'Q_4kmYmer`J6G&ib#^Cd?6liK=sT_%"^T&,bs
%DA'M8DV`K$%Q6lQEo#XiR7)sS\[3Nn)4@iBFulakE:JVr,n!u6c:TR*N&&ejg8F+.W->^WUFhh?Laf>El!3SfF6q(pJ]!<!BK,;b
%\hFLK1m(P:ZnL>"DjrJ2^;KF2`0_[W#W_oV?2)T'r<Y9;p8#_iLH(nB-4*&XD\IY/l1<0lHKYY8SmAA6D$*Pk($)5]6:Z3P(<tH^
%O`mhmN9PHLE\!N-KYm>7?K].=KM[u0(X+)p8ufLb#l?FP2V'TK;b,gXB`Ea5;2o7[1(j-s^[o#XkJ+Zn/-",gT/sp:5A_-,fjhsp
%"Jni&DG6h_>M!kNN`B9HZ4_k#l1/beG%'XW"FORRIb[u>Rn!0IC%Q]L_26=IC=BjQ".pGjOa230Wfs<cepcr$SFJ:5DcC[]^iPMb
%N1e3jh))7;@oOoD$*X=*2(?Q47@ak6lX,&+B&Z8[$9n,k1aj4\?na,V:EL:[?cs)2FO/5pVT?na=*:BmShU2]ElMAk$sj^5=XqDU
%m2qU.*bc8ljn6#g^FHgE%N<$;07U`1*8O1?FZL.c0'HW%SRh=QNe*Q4PMW!kBq?bdBN"Gb#h+OMW'aaT*5\)S:7=F'D)sdCYGRjb
%*tt4Qjn(biP[Jmb=]$Ukc4GP=cEUKki(]=Uh8rD6_?<E.*7:\Kq.1Ioqe5#Xb,LUn3,GlN5J>XV(a9j;fsE.V8*GZ&#QIt`ZP#'Z
%RZDn+)jqn!MK<,1B-:6]Q>\tGPaP-/eiSo2r5?6n'c]V`AK4kj*t+=[?bP.0-ET^"%Fq,,.4LmhNs?pY569F[IEhoJK[1NN\`:<r
%hX\:Rds:?a@7S,,*Aqg+r\1P#_s-5m;Jg?9dbrGH\J#]m^e*&E`MV5GcDpeRLqill*?i2mpEAVIdBIZp.UqKX&;W%hS<N3Z)+=@:
%)"(,/\,G(IqpFfQRu2F=U*cWV-cB=-nr7#UCFBF`&(\],r1!I?jge`nbi[L#%NHb?q1Drm/C8UH;h4Z0HHqkh)[5#s]NchleXc%d
%b$tlF?`E+UBlhmHCYS1Z8BcFeIQ:L1-Rgdr!mriUHqq5g6Pg7^a\HSBkq`o2n8)k&a]#i?qfJQe@?<i9^[^k48`3Q6Eps_/@cHZn
%U(QF/2I'J?l[b`P%@7crVKb:Z,i"V9$(::b<i.Umj>H7YqGg2J!@/i/R(j]J3I3^1<#UD2F!BYKMUq'S&klg@V`6(o>RaRI9"ZK?
%L`@ZRobE)O&OPue6o3W_1IBgQBr]\`O:hBKKHZoYnh!5Ij&sRTr]>'ufj79Of/_nH&=kS4XjWL-gR+.2o(sN;gOTdFCNQ<*GDF/)
%ACPM((?!5feQJ(p5Yc[QQY_7?C,<c(elOin'<&f?C;!"*JN[4#I4rF*q]XnH8`?,S#ph)h;BtG@NMFG^m>5B^.O)sGooWcXI*K3$
%5nQfpPhtc&"ujGH%N#5E:u`f6+>V\1]:/%<\^BJ!nlZcQ<4'jA`4mf24[9#:4!@(tS?dcACC[T_Za;_j^3hZ\FGcur$hBWG,R4@t
%lf,s;(%n#E=o%<HU<$\]<=$Y#q%D/iJlC)-g(pOeR+Lp1ZN.cd^DkCg8Nop1>Oc&?F0SIPm5Jki`A,?-4>n0=O_>r%TQsBX65SI=
%)uamP]6bf=E0BalH/0WL4Xm>3];(lMO@"N$&B%ice^>.O/npbfHR5XQd9m\O8"=&+`OOfF[,:oVg?S/(CFLBLd]\lDnCJd=,tZZT
%CsoN+fk:@/GLRdP,0;W/K\^2@GA+-VXFd3\*tp+>-b^TZ!a+H\Y,fEhNhGJrpP(%&Z]5TF+D7bOG"9s^%V?o(eU4qb,Ks2D<JLSA
%W0JWZgf&H]AYHgXO#@lLc7k4\Zj\?ANZK'oOWGD4\B$dT05Z-),_2^ukf#A<=AM*i*)rI6Pa^P#]iE@Vl-,L/HZtkY6;m\)*bXco
%D?:92fII0l;tqAg$=9>lY]<Gd;Og1Y[jBW76b6^t*<"#%CZ)NJA+XL++FTs'"<:7rC<^o5+qSGsL_FLQJ!i9])pLO=X]9>s7An0^
%P?*ueHH2qBD3s-[<5>::MXDLaGhiD=E,$EQ'%9a@AB;sCF4F/sZ?$pk8aWXA9VF$oP'7:3K8M]WD.ri)C/1A/eTiY#MS&R(/8fAJ
%<'$qK:T1_<:i1-J5-D#4L+7k^lFM[>(4!A511?0br9\\DdD#_FnEX9=FQEel4a,7!).@<>j\K@e!qA_\6Y$-pF<jeecK/bA>j;9W
%#rH"),UnO02cL]3^AmV>J,_$[VYR.NR0G>R7I=3XR,K+P:f!pY,';VY2Cb^!mDml0&2kT?8t;DAmW8$t,$&."!=1ZU9[B-*J6p(A
%HK5q0jj);J(0&O]i2iI(1$)A&9a[aP%@'oICs'gf/5Sk2$<o,ZL-C,5"(ZgS!A(S31B<u3_<8`hGdUK*A),/-$\uECi@.sP-qm(L
%2b3`/qNNOP4c6h9moN"1iHn`SjeM&P6lVL=_Lec))4>t/9sNa=C!+_<AaK:8X5sJSS6kin^"gj[gqUWPN\]>C-iSRs^A[lsbRfcX
%B@EbMo6(Zb'P[Hg#r%3\E_7p%8`0Vgk'DA"dJU#SGUkNZ;2i_IO'k-&_CpE5h`tK?0:[L\>qWauDQG53$!G?\jPXce_^+e[;`7\P
%>P1N4DU3<ZCt^0EnpJ\!RERH4%KdtK63iYVj6bqTAusCML85KHGSLdP$e@\)RT66FNjU$NaIEFO(_3GQ&JQ>*@>:^PD<^`d#%JF8
%46#sM&JU9R:6lXs8)j37>j;5)CA=?d">/m%L.SFp'5;CF)\%hg8eJC\dW.YkhMkX8T"f[(-"J[3c\WJH=!I9H:CVrm)=hu8caSCl
%OQdLS]E7B5+!D<D4gTB)q7-k5`?D(I')Gd7^rp!ne7j&5#((#MmubtJr9V%fMu';mY/t:U8PVJ]iTj_`O_OKW/TY%;hO"$?.+$?"
%XCnB@_IY-Z\ZR7B1tTFMn!/!88&'Uf]kSN"5NW'8QEYK6gN%)5WRW1mOfI`YWOP5UOB]X[N!snHFroh2.b8f.,knlFDq1BLGTIKb
%6gV@`?fCa_C'QPoW7lce2GB\3/6jAtc8VBOI;]=idYf2m@4[ro5sm/FcaEk-:o6%t["d&+bisFq(i0I`iSE2eWkaI]T/juP[B<\h
%TW9,EqQ!?V6M,=Y?.7M6<ZW.eI'Au]PXHj%E^r$s6#d/8__g/BGYQMTQNq4:D!.qW.n,[.4F+/@/@Ur[[QXG<Pt`j0!i07n%`NjZ
%f'It'fpo.ih#;F.]_d/&Q-@iOlfZJ<_HFCn,S=+iKcFD#mYLEk<HfokC9%"$GfI<Jo:s*S13kFH6Dumm+R&B*R/P%/SF;FRTu'Oj
%/@9?;[H+iEPUm'ld:V/c=h(&=G`5<RP]9h,-a&Jl*49C5iauB`KBMJSR*9V4RjHo<$jde[3Ee?Y`4!b42c#l9nM-8#R&tKm&X8fb
%I!Um946P@g/\c_,eX('=mb"e?@\YeC9]%[#e'/CgjjFR[imk=<U2KM3Bif;gT(2l&jEEfU^RBWLJs#hdRF5G(JT3KoFrl0qIQG__
%Sn:QT_[SH<<ul(b+#E:67AI7p7@fmr*4^E_jbqbq\PUM'I'<[^\9]*ArG?hC%NHt5/EQSh3YIW[']'u0RF-g>qUkaB-FBIk;bDL@
%;Fi+S?(>h\SJ%(A9)ff-@T,8jY-.-G_7KO^Mhj9[p=c?2L/cU0I[1)dnTuR=oM?8k&qn:\S]o`(.DQVdh;U;iq[><'X,VD\_<B<e
%PirEXnl/s;IuP&H$Z=\?X*V-/D27b#[Al514t:AA^1CCL="P$nHG-VoZfgpP-s9mh^,+ElpsukF1s'J3cD:4O6\Bl_qYiPMO2#1@
%i,;r8J4d:Q%U[>Z<nB<qG&"SH*HiiZ8sAqI^iIHT7%RO,W=Vauc+I*p8su2Aec*+N9ktT&LAV]XDHL%eHMT5YRXD!k*Y8KfH&-'1
%b+[@gCunKgVI'C>47Y]&kcCAOcd<#nq`"V[&uH.QQ.9,@YOJ:.['rqu"g;"YrR#3t0a[blX!I"MjT8d>a%p_t/n0S(@6b,t>XBD`
%CGAW,&<h1]3I]%"%nZ`Z]/7QpM&6If]-d>OO9XdZFg"Q:<=hf06]4K=YUet*o9nE"O7%/J>0n8E-/.ZTh4E`^b*fphOWdhn$:Rr'
%n]Q]]/Y)C?[@o:sjH!lSDLn]mJ+:nI<:B*5DP5%=9$]"]KJ/NK#.7(1Q!aqjC9FdgOR?,;\_ES`K)^E$KA_+c=5ZK%0[\.:A0uNY
%&8SeQA0HBF[,ToKkOQk@g;fOT.luYPDZ%'k_\o&.P(mTHMA]%&k!i$Wm6fV>9;p'UO"JlkEELVkONFdF+)C812>J;nn9Mp?k?pP1
%R4;JNJ*XIVl"G!Gd*shFLpDA@Z^jCgkoOhaO%#\5b_A1'WmENO%QNgf[_s3@]m%X+a=RMh<63g23j*T8H,,ldh.&[mI9EY(N.(/<
%1Ypl@"fg)3HV[Z@+3)fZ?%q@l]<*Hfo`:.PfqB1Fc?QMD>k'm207sA+p*i+TDa"(([,kBX;\lZ=7%TSW[qNQYL!<g@"C+hL9cG)T
%SP;iX<"h$hI<8`.!iCr99m3NuP7!BU-<KcCeS]2)<d'di-0DCRAS2im>/F"W/Aj*K9#b-Z<8Dm0iR2?PYXgj>MC_aO,n0?1)S5+#
%;i4OS+nFZoGu>*joDFEu2la6k8/AFKe8K#;pW$33Z0bN6DHShs!!C=K>:Z;W<OH$!'DL)rr\p.$Tuh#2Y-DMVhhCQ#oWV$SV(AQA
%mo@42$k.:2,+'=4#^<%YLq\U&K0E:$=M.GpEZN+Vr?9p3@fGol!9*AE!PSmUN2blS9;5F$ls6lE;0AouT.1T00@M&c]$WFsTX0VM
%"?NSW)TU%cBQk;gQ(DX!F/7dJ2:opr8$3X?-o([T<QN>@]q('lq@1DjXOF$r@U.4&!e5ou<`37-V?ELRR=)/%(=?VF`Oi<eK^ULl
%Pa?q&cHrH/aLP5:0sH(^nnUTK?EH=C;mQh)'0MlVjEq@bj)LQopm&:CfUcVJoSSpiTO3m@-s@F!`f=7<1sOA63QOVVC6`CL*$nD*
%7oV0bWcC4?N*SR+ai&(fJ=$Akgf1ji)0sd`WI@GD9p<tR'ZrG5P+JqE.2Qm@+B1P)($'B%Onk57P/t>-;@d>WSN(bckR^a-;5%/K
%p"fS36OKC`MeIH3f@Gip]O)`GFX3TorQb98nW+/a7lL$R.?L2!l1F:`:Ji$57_AG+8_X@1aAK*8-7XQ/Q>bjPo@Cd%1B]:-D?NcE
%3+l:alf2ickYX-tCWa;%/6e3$_*8W,LPUsS>d$fM/eY98^-4q>?+h)D8dTHE.I4g?Y2i2p9>eBMe-.W3WYRE3OnL][?1g74Z:sQ1
%0b897iOrM;[W_#P>//ff2NcosV1=G9_bu1d';TQ5[C1Z-:$T>4]4GGt(=&,#?oS&6WCDE?)16O^kGjZC&i(4`Sla<)E%<pY%g#=0
%<DKDZOmWb0'\%g_6HmeY!u.S,KcYoH7\jpgf^E"$qLQ%NRna]l8T@l8fgmd`Sdp:l8kO</CC*]J)"q3TW>PNM>MdQ6145nhFNiEQ
%ME,!:dF.LMIM^IHD11d?_\(O5*+dMt!0Q9:@B]"%5+LF9mpb5g8FEfWJ0+Nu;=esQf]3dd:c_!5Xm^\f^?&c8&D0Kk%V\le6+=:9
%p;TO63^DR6-u59sC`?=JXb2/$1E4hu[4H@u491L`piYJ%Yh&ND2i\2-&78d>DJYm$^^_slHdEQlYF3L?1F*n_\9a:G_oa[uC<DU3
%ca_ce.$G>YdV6>+7jtn#qUd6fBEJ=7K]Q1apNT1k,;[J?k#+K5e2Wt'PTh4Jh#Vrs;t#i2Y#_7G(';WR$sgakq]>.WQ!)]'>-.#:
%,S/,Y?hYeaMPnt="o[PXM"MIG3H+^=&OJq5XJnat&0>K@O8u0NFBPg!T";-f&PS'Q:as';*ma'2[OI'ZP5RNFTF]0(3eAg!f$7?o
%RL#$Q];m"ni^hB'qMUa'ouH-<R65;]C?(S+DC"u>PHWct3g)@EFm=:n;Xf@1)<OW-/^TCSjMS(f>d=_VdrEL1^_4*s%@*ck2s9n(
%DI-JhOED-l.udl#,?"rMGm8H8V/a<;):_8&CZf&`WK\enAp6+#jR4^FAn+I.O;s$3+U)<kX\5D<HGd/QQ(#Vm7;.noVBG2m\bF$>
%e-4K,7t0^VZ1H?$+pSKn\^#BYY^TUW@UqN,f?p2Q.Fl[Y3(..6F5j<(oB,\)%E+_2A:g'ef<f?D_KYh44J4>R!*B"5m>N<^Q,`Oa
%egSE:4jj_gI@`44P#S=\5dko#i,Pc)>(U$,mkO)i.R(>_W[!S;Cr.'o:A\[u:o0MoFS)+V>?a3:6*aV>'#2Pd3Sh:sSSn/5eQW#m
%FR\dg"h!EOEfq<,fdoj?n%QjM&'69aYJ$7DT\u]/;T6d.G,.6=!\d^O];hJJ?Nc19KIY[Ie76E4g4]aZ4pZ3=HYl^/Wm4SLbE[D)
%%6o'aIZ>@J*_Nr<i@TMd$pA5Q;CgrD%"LM:d"3R6cFSAn&hZ`q&\aUVi5Rcf=hOd?J28T&,nh5MGk>'=qX+%TlX*P6s!r-h63<18
%a5q0D+KC2aQlgg-'p1JJ/,WSm4?pdUTK.q0e1:`b*)\DY[0-mWa/W%:1-"?gL,?DE-HAm+#`l,M"`AQ>FMBYo.\?4OE5+bdfe"Rf
%.2Q3dreaAS<K9"*P.]m=^M9R9:Fn#m,'5>\'F.*8n:Zjt^K.D$Le?2ciQl[BUr@*FjtjDEdrf))_RKc)?VGPgZe8dpM6p;k#kMN\
%_H]tl.kI'6A.I[XTYOj5bUacWGmh&)HBEZ$_d*n0Ig'R8ndLN-Q8B;Q#6-dFWI5:M9r1%4eu#C173OTjF=\t_%3Z"H^/u-rK!sp6
%effo&SkntpKU!13d7idMD(*JhlIKZHIlDRF@).Z\bV7SS%MbYd8FA?caToV^Smsr<+9WSS$\DUjo5e;L$bo'(H&J_`1sE"lW+N"<
%F>'tPQ)c/`:.bD"27c^,9"OokJ>GUq/dm&THN^5!U9r`KF/"Q7.U6cBil.kGn48&)6P`q;![SHn&:^`d:L@/c/V6J5bl$'JU_GtD
%mp*dc._hrC]n0*06:_If@@,H427g>98g8ne=9O%^:DEDkI+(t3NKh2+.<3MQ+5I6.W+s)I]!Y81dcnMOb-m;gF':Ga4Wem+f9f9E
%JUM.2/OSB$I,DPIdVs$+fetYWj0uZeOi$?cF_TfeHk>"Wo.Wb1o).(/B)<E[?)jVjB#_+]M%^Mg[8\?;b&b^t5g>[Xo-r(d>@AXS
%aMc8R"o"2BruJlL%ki9l?;_-?WiS83%*`aPiNnrR%Q]WJY-@OM12h=Hc[tTH(W[jMn<`PuWCRD^;I*G9lFgj,Zh<jY6\k85ChKNR
%4MSM7XRqTKNW2fj]NX0-h=7\tAX71Pa,jN,c*n1R65fgk69mJNau?pEe(@]T^8sSIS!'/m%s70X.F`T$aa);%[_H-Ml;pna(%Lmt
%h.9qtFd>G=C:\T)d=e/(:YFk)1]t?q&0T`_%O")8b(Jp#-.Q^(5"m\G:=YPn3q:b&>_FgG7LWBBWqSk.B`Q/3XJ(WC@t8$,[lg1=
%g3H4hXQN5MQ$ZlmfC4olXQ2#4DG8JobR^LJQ"9j%?Z"7^.TlM(/BLJl+ZIlD;kFCH_Mc=,O?Ub%F%\Y>H`E5bMY)"&D+o_;V2mH(
%n!STLM]PP8=c6o;%3<%%fhB[Jr+Ms?^j6GWhRCE6Zj5KP!_RFNc5"u.m_M?j*Gi6Llkb$<nnrMrG/u7;I,EXsQI8f"W4-W+0'j-N
%YN@@4$^F$NWB:t(?Nh+\n8>QaCntaCjG#Qc"rpo?K'Bs`f'_=ZS$^j+Rh!g((27WoOkP4/=I1Gr?RGh'aU.AI2S+e$N=CJe,k=IZ
%]mGeF:$0/SmHH<.%)IM'Iq&id_l6b.SU-BUbSm4homSu_&:5e:7<f&+q(au"#8.sNZ3(&AfqHYO[gRNM.H/TqeZML4mL0W%s-1.)
%0_kL(NKT<Fn"TC2&-lk/JQK*VE1T.8o+pcDqm*j^,q![dE9e9]F0!kgF$jjP/[`l>7L7JRZ]jrf<=%Tm?1<!1&iPuC#:G<>1:k7A
%:045Cn"s4XB^_919HK=lP*ABg,qEPD_N0cao.tG2j$H2G`5m=PcdVq'%aE15\B@H0JqK=;JX7[H#l1m4=329c2.a&2a9RBI"%?NX
%PQJNSEPnb79fPoQYYlc1pMa;[N`5Cb]A)djGjh'!:OtfR$Sn]/@7\5Bb-W,m'Jg$k7&lE^WNgAuoeb]@MMVn(jNpFOc.(0,H*>m9
%1@]R:&1$rR*%d\CRqa7s=U'%"`JVYY#Tf3Q*3(4Mk!DX"6+8R]mb[>--%:h^4[.dsDnn`-lKI)UBPcTWNNmQRD!DWolDsT%4"Wgm
%1K.#2&%mV.4reiI705r>^n`0gjo[=04`TmH4X5U*TP&8#5K/CtJ\79me?F.a=c1Oi:>8Q,$A7dYXdbO?6,KoWV.2bTVR[<K7`A*?
%GKM(.+=^UF#PWFrj+ceEC1\AVMUje[lNFat=oHS#\Vm0J?df.BP*SH1EhemOlL!@M?G9k57nVUJU*kD-(iYQ`0b<EUmH6t6qp^Nh
%e\8-)"6YH/!'^>If_>"=cqN=kQ%n<1D@\bnT`E[sD%=638WC'KU0`eIIrX&0H<pC"Qi\XPe&XaTZd>baJ`:F#%ZbYWPj1+WBM>l<
%c8E#Gi`sMT%u+r#6Ufj8aGAN4F?mI'3_)0@#nG.eG#B9t8a(KHZb*f7\6&Jc]ui+nF6IK6l!'-[k<+W&3&,TqSY9*(1o[5S;`n`B
%#7#R_;7.!uampJgVIUl1*Nih((u`al!;3&)!UJH=mmk-qLFnXpa:LkH4KcUko=2cJ41l5ZTjC>BM&mDLa\9'&lDltTZ<Bo)Unb0X
%-AN^7R!'Q\BZX)VYF<kX3G+V"Pb:IfE,)*26=i185o'6%]U;C8d,fNn,:E@N$I]$qZ+lKs+.6u5.a</DH_tB27"pjBo/B&gV%?*9
%A24He8sltiRT<#3-s#7&a@eN6(pN!p$:-Aq"fMr$\/%"DKX[$n=#PZlXdi/2FN[_1\q-!qd>#k4aYiRn^4ma@gjr8^hOJ(:4At&Z
%F?VWF=AsWLU$[la9,99lWa(LPWoQ">dcb]!W#8cdlQ@fr@3opT=1]7QD5ZfIS@;*#GVI=@9hc!fBe!-9'9(n#J6SMAjtl,QCG(18
%MGQ@]9Uq4JP1rkuQ=(66+\.c5/1^Z<0st[b<H]0dY0!$kRD)DC(Pq6/pSeOk7jl3*nPU<WX1kHoda:MtPa@ePM$kjIAV(FEW3(%2
%KW@eHR"E=ujCdI(%l+t,n2PV,,eOQZH(EXR4B_#uSOM=$GcK>U_#-!^nJ->0KY_j))T$<3iC@2!/Ws*pd;/@13G-C.Z;g<IbrtYG
%*#.F%qRg45RnSme8,L8[HCDEl3rSnBajc`slS;aNLodAb=a_uIK_*;BI_#3_D=$XVL^^$=l.1)3p;su\^SgX$HH&#+,,%b<fH#mM
%5J1SDrW-DlE=WE[lR.l*AS+ie_JmdbA@b#c:B,4[cR=Vm+YM<Ijn6S_TO:oJ3^HM`cHB0SMtfONB!_aV?ekpnKZOZo2nU#JBC]k-
%K-QH29,7=3[])arR5*o(%/M8PrV$!6QW;57O#8U:'U-GUg9`V$a>n=GZ[WRSh'pOHM/h*V\g`&-rO]2d4\VN)=8oUjL+R$f*,SFT
%=\mUrV/E1q(/J?[,kB;?GTKf'eD`sJ6orJ(HLEiLi$m(b3ubOk^[7)3\TJ@ck[+;?4P_+"aA+Ko*_(ju<m<`e7)X@'ISZ5#2%:Jt
%+OMo&!mPd<2/AJ`Vs'bTeTL*Dl6Q__XA!gC)jD:;\p^X]R8Q!r9(Z!G0Zm&\IEVog-7LI!kp1Ms`"QibX\Z._1U@Age+EHQs(D9_
%K+m'4HiQ6=ij,T0pXc?iT\6eB?dmihA:>n"XlS-7d83BW`g1f'1,UY@fDs/9pSJk*Ub9lL-m<,".D2WehS7H39a'^cJjZO"ju&u"
%mE(A;odKLc`HDp8[UNuPTeR!TJ8DjZhF8HcgEaT'F^ph7il/B88ArYN;1WVEoji:C.LH"/5kJVC%B6.bX%h,\EKUP*E7dqUnpEqr
%7Q$rh)YC5jk1^uZPG#%\]%O>Kje#h#;h1UL*q,?LD2_)?)md&O4tF#"/Yb%^N8ZB8<B5-LNbm<DGM^\L6M/-nOjDh_6qs`jb72S8
%V-2OlQG,oRm7a%sM;*IaHV2U"NcL@%7lXBgZ#EfBUsLom-I>8lZGR5n6sQO7[@"hXRE0kT,j0'CQ8Z?OY@9AHD="gGDk@nZ\HJ7"
%jT`(?>b3<E"b'ApJ+gjomX$pVf(69Ai&B03>?5Vn'k2Eq(9[>s2@71G?Sn(,i.j`4b-h'l6uC0&*pZW=oh"$a==Z[@bo0nUa4NqY
%b%p"(^>lR.bScLm?o$RYoRC*D.>!>sP5/hoUg[Fi!SD&RQChY4IVFa'1GO@fXbLad3+X/7Nsg<;g%HqTQ>!RAO?.<X4>Y;jS8T1r
%9jitiAlcI+2B=U1D(3)IeS.:H!,c]VPmriu=?m&*e]R*4</0-sbAlQ(VJ)+J8@,1-Nr":6eoU:d4'Pf4N,$/)9Y>0`g#R#62Qo3k
%=fOrk<l3"F[%+k5/YR1%iB6`XmTc(OoFp.@Z[un>G;oF-COY*Tms'ROmsP+XB%SQ(Q)*LTM:YPPo"C&rqc]]c@mIMK#!)3/[1j]7
%;`FB7SUk#Ca#b_7NZa(n>-oR3d#LAHN"T$U,WhC`Y^"?.KfE97Lts$k1k]Enj-_c!it@2W4_>63[sIW.g(8rbBfYa4C?@B2-DmTV
%=1brK_"AqS)+)*i_ZD%A*u[AN_2@o]p>kk7&,/^g<_c6s-BY)F5ULno(DfZfdc0i2Uu'+f3#S6Ti6lA\A1#jf;OF>q`L-)UjjmQe
%JI$r0BIDrhiHC\0Vbm.(#?Nj@%ermg5UOr`Vp>i;b7Nptjp7CIs.YOB*.uL(cC$og"d;]?jJO,*.ndg\_Mu.+)n+.o<o`9'+5%;!
%$J5;g9gt3nlAd1RXAi#;qfp!<l?m9tlF=@Sj3=.SLteQ]Eo\]]7pI<I^7^N\JWcS3RQ%+_(V@>l][&>:.Apq+HYNftJ<TJGB!PVA
%VZ.jPRel,QlRV5pa[rk2N-18[)O[T-)7K)H(,NUrYP1lJM*47gP/oQ[I4k5H(MUu3*&ZO516Yq-hQ:MKLV9cW\BIR/c8^(kTSW_Q
%-Q^$:)MprTQj_2<R2']NN,0*po:\+Zh_V,]WI.*1<roW<PM0WlII`(Z8=8HNY?-lX`_[oO<<h@q$F=/FIP3STgRlmsds@1l$BciE
%8F'^b>X_t-cjF0k'[k=<qI!u!9d!J?ACsJjE6[96:ar5/f!6b4>sP1GUDIFO\@>(V`p;Ah$6d5HR8->N!G.oi79>>67JHAX6km\T
%,Wd_4Z]Q_aU*fuI-#uocXQjk#CpClO59NI+kU<p.r5:457"X)i2]%!YQMHDISaB8\NaiLI*1(]Tcnd`*a><m\404#/MFCj&U:EdP
%70c99Bh^Je4<,lA5:N/EYMK[2[Eknp;7*5nelE=@,e4#KQ==X0ZY-It!rk*3ktB#S*MXf(;kGTU?EB6QeH@l8o4)=SV<@_JDfOF$
%AEkt-(MfMdY83>t$un0$6?*4,k!sGh/5$]e"]\lS'd:%Z.]Fa3gtYook[[gr2YM,[>o;6G/0sH@kW)l7SKoXVY2_8m2md'@"%SpL
%nM>;m%@)*i(_bhTU^n=:J=c$C9X1kkEP,Gg>RAttF`Wmae&J;u&h0u(3Qk?b601G664/RUP)7&MPJp*JJVdSVkN=mOg]4!Ydn#:6
%&VLLL1r9B'2@D,k\2k\p<`kFf4rV9>2?m5:Os\(.aQW@3`^r56.[&Y!bO"0e?3<_;FV9Car><VVHQ3mpnC_3d.qc-m2E97t]5LPQ
%mBt+_&NO'o#k-#.)p_Q#;IS)o+SZ]!@2[pM4.gaiY[llSI>\D17.R)1U(rG$!7PPEa=or]SEOAOg56BcN@]YpD,"&E'4-R<B0F)b
%r9`,*mGDq^rQF`Bb^K@!=5hHd75BdqR72l3<5oC,bDlQp?sK^<Qq#no>:WRX-8VF3Oag14M"q<,>siE2`"+r#q:^Z1*TFdKol$4f
%6KD%]-U;$2WCB.8-8I>eQIc?q>Ia#PNErbDP$>>.#r3\7(t$49>,Y1Jp."]q[_-a=Hj%0cAl@WbiH,%B9]&%s-%$m-BuYMMQF<)h
%R*&Z^T>_\SF%+GkSnPB7LTe-I$t4QAi2a9p]+2R!mSBRZ%dONGZZ.`(h9P+f="j<O?hN/\9/<G3$]isB%f"MZAoGZ[f.%jhDDY&/
%5Qk[F0,h<2Lsg)MJ!EsO+1s4U\OBp)N=B7T)p`hC<Y-24>ZbLeS69I+^1D[MZdAW&r8p9b_%Nn1rA=c5AMQ/DoWXp?q"M5qLAJ[Y
%;h$d;LT@AOCf\`u&OkMQ-2VmTY(,c-er=FQQJ-AG30([jk$*\ePmm?sP)NgnZo>>OTC8j2[5ASQs.ndn]aC%-lB@.n-%EgXDXAB+
%s&t5`M.tl?ZV*0sLK#MJb^fBM*'<DldEehuU</;hch<=[TU<o9ZtGhK^A2[4Z?Rfh?&/"*)MreY&=l?rH'WFL[[om=&U`r>88O`E
%6oob0<i^`YCTWB@\icCn'$&*ckL*.!erqkm^UZ`\FrAMf)t$>Vi8i=9"iJT'91Z,Z3Oc^?+PFh9&N<G'IW!;/Q@Qgr&_O7uI+2Le
%-#Inpg55!6S!?jjOc3;P`2>KdFY/&h__88AXgteOnWTRBKUd[jK%->XimHiML[KAm<pEsJoC)>%<h-ec;S/%=2<(rR&M9Pp3mE:-
%#PQ^s8_45p-:]\+4>u<,4Ka)<]"rhE,0qm@d1>+'l-W8j%NV`pflRIR@/'d(G)=IUgQEno*P%VKL(a_N'@rdn(L8uG/>n;(+8km(
%_7iNVHAFPX41A'He);C=Z=oi.E=;.:?r#EK:oS%#?7:SaFG,fa;g41**j;3GO0"@_>NmI4SlXfq[6)GeM9J\N<m$&(Cn,JKjj]NE
%q@+?=o7^rI+8->0HU6o,@lSNVh2`g$k(m6dOJZ9QBCDcTVc4ggqOLd_pFA@h902*FNTa16Bks2b]NN5'1+jkh&P"Y7b"":c`C3V^
%I?#Wa""L5tpSrKUPM2'cZdiht<Qf]YMOrZ%djeI@>*JYk=4S_/]p^VjU2<*e@FYu"PZP#VS^^ItPMJ4@E/E3d.!jQdh9eeAJH+Dn
%QV4Ck=PRgNeH*1M+'LU1J5tY:=EXI?$Y_TY4c-7M4k,no[O@Q0OfE-P>KQ&VGD+ioV$_rEnurbcbA[&bju->kGQ%lL^"/p4%Y'?r
%#??Ng63&U"3*r,>h:Jot8D*)*-i;!'[:>182U0k;c5J$ZGaX4T)1%P/-<G2#S30s(S&2&/P)LD3gl/1HTgT0A5$9OI3&EB[_qM6;
%9Z=9uKq_60Kqbc+5%e6O7!1un!l4(M*C?tQ73=ChnIf>T$Q#5!Vi*4ILCt=(jo7Ta;o_6dA=6*(8b@P^&L[jS;`_QahS$0$KSZl7
%hpZ]X`_fg0P5'V+\E6e2<o,l&cW+0s?4N/"5+!,a\X96R*FoKna/+5m^FKp$V>lib@?\pi=GJ&J/5>2Acs))>ViA^gn$uJZ3POH2
%U:<XZ;/N%t6<"#B6?j$CZOtNg2l7J@-#;EBH(\%N+ab+r.-sU<MjfK(=nDDHLuCfMQ-E&'k%_X*Ujp:mlk_](o]qs7>L:N-La/Z5
%aT<-R!`nliN(;>R]G/`BHBBOm;V_p.22.Nn'%?=IftWhX4F^c7#8SiQVlafCEcG5:Q.+2=.6>TCn5DicU.WBX/D[`6s5Lbh<O_&1
%DVh&d:_O9a1@c$F3OCGV0GN.Ac]'=hZGBUZ,\,='hVWXt5*&ppXm.EPG)3L!\+e0\A43N,\GuITA'0?-N=bA!BfZm3OJJNAs(ESG
%Sj_R7/T>5^PL=nag(#t,78Z<.8A6nY<6`A.rl5E0[jL[^Qg'G*.%Vb\q73^^7^lrWc#/n,1]I<X,6JhGq#+@$#*9Vck16+@aR8]4
%L,0:BPu;?*G7KZ9Y+WFO(>8K=%dT7?n>Pl0\:.E8&a%?SdYHd>PV8BFMU_"bESkp-1Y2EueEKo;8fpbL#0]0t'N0dITGMu<3PmnK
%cB(j;%aa@dleHpD,\2A@>9%CB*A*od'nAOJipZl9LrC`V_,t<$h2<!AGYe+@9[)N&E3MH##ib'aPZ<Je23Q$a"^<ga.^K1cH^>fg
%1WDW%ra?!IZ"RZo=Kfp@/Zh5Hf:%(L"*%*n_dr9U@il,Y^3m<0RU]7.o-sq6-L4:s&98u/?<H8BZ8@A-9U:U">^k\56j#7PCmTbT
%Hj;;E<p*uf*;_lnXRegc]\2J@Pm$.^W.PV;a"BA]_gEcFd)J<Kg/VmMPX?OBi2Nuj8Gn\?XHRW*`g`und"+]5<0J8F</4&gEY-R/
%ToR@dZpc>R!h7Epnfebi?`,H:$IimFdMX71;lEn0Rh#:2I_179E0tH6n"\.J8@M,[OC;%*P$*`0puS5aZ2@mE^2C@S3pK0'/ZN_M
%-,7i["+[Jpb,aJ5(;"pXTPeju9I-Y&3,g.KK>9]`,Y$GCgMOF.Q,[f=45>>ta%';("COk4_csa&m[n]=_F.pgq0!7-Y"C,Oq^"Cu
%ZD(q!)8;2sNK_:Q*;71UF[Z>a0ggAHdlg^3WQOD/9C5&>2i3`6glIn@6^gB\B><R=hG8\/]R;UHh'5$+/m="EYg(6Z0uRH2*;-S'
%gNtYh`04-rWJiW6cV$oCZ6nP7Y86)%kiN?$Z:n;,C!NO$39B(^n2T*J0?^e.LlIQj#/U)'ImP+6dgi]FZr0dA3GVM]]PI7[3p<b.
%m/;fT1q'[J6jW%!^Zo@@>GXhn"TY^3.LfrbbfGUe#=EnSWe0T6:8,mqMLJe7XcYqA(7DLJ9U,Q+A^\`O:<@HlUBR?MgU`He`$@n9
%N(4,+U7>BEF0EmE+ej=ri1P^RUOFTX9bR,;e#5$%I!JadJ@**Sl<e7L11RL!>SCg4?tND^N&5H;oeIa4>Z6QDYY3(2.K4_!`c%c'
%=JDL2fMlf+5M*L[/u[!<AE-SnrS"*;IAi#\+L4ik=HR/A?luF9%c,BO8Rd49;b.N:$Sh_2.%U/#"-X&q_l]0!&4:GHaY</C&le#H
%R5<YMMO]W,SWjcPQFIi+a'"peL>1O;rtm,q##o)^@E!WBr63HkPb9kh\,j+?)%':0Ik\27k2p1&@Y#8p)ic_4o3-8+>H>;O[L+[p
%/Z9j@Z\g+git`IGiZq=*p-,1r.3X@,,+R4uk8E)p?gui::(`H(;5@h1P`YHjK9iecn-,D'r:K'J0)lKujPegE"^;,+R,?G1N'%3V
%oMf!n7"*Q!O'.Y_-Oa]B1PDO%rE+r.e&bMM6&@q8_Zck)M["eN9fVYl?&4<OJ*mZ.bS6II[Li#EF$J=e"jGoQ*N+ehRPf<$,6"c0
%=u)X/T87u/\+R`pi;qOV"I_m#b/iT3J>S486]bfB[P-eDO058CIcpb]Hs+Wt^K!_?e(/QG/Ea7?LnR[`F"<t6^2[!rm0[3LZ9!Bd
%P^c1F3<D2TJuikfeCB&\(a>V\jQs[-]be.>@N:_PH!+S@/88K#;-Igm?WA'WcX;B&Q:sS/YiM3&a0MY6d9Xtal-LPn!Nq;"N4n^t
%E#:u^qdir)oY;.L4VQpQ'+,A\J^p^t,.f,^MTK<t1^'EYp^?D#5u=G:TLe1c3-EucgEVE\N_gB_(t"R!fEW*Tpi9=EEqR<m]dk`=
%]0eMk`/nB_;,J9',M(8U32ThO%Qo2$&os9rdrVhIIqT9-#&T'GZMedC#WR/fqhV!Oib[m\qJ(dn39l#bAJ!%F$X3m?UNJ@:e[`K-
%dtgJgb$_E%Cdj'a3Pra/#\h&>GU&Y@QYSN`&(.[%refg'!h7+gQ3Fq&L?tubZn,UZecKcq6CeM!Gs!R/WTq:L-*0c0^aAN6Fa*t1
%M'@/",JmG8jNe-8l-B_^-=?AC'UflDO<8khh;Wd&*Eu\DM1jGX:_(>&e?;=+!!$2IDmtAK.NAUdFh`T.1'dqoH?>:&$mNd?!5lWB
%_'sXp_g4>bd>3%\C-RjJT#I4nJlB>2HoeaAC^8NY"WqjS/\T42pU=-FOlUpUS.r62E@.F5Q8NXqp#O%m8jZYE49I<68NnIEUIV(6
%Ndn3S'71^aHgkRr+#N*,/B'0el2^4*Y_c8A'P_4t3SU>H.2d#**\ES--NhQ%=rEO\+Btg=!ejPm1[qJk(dmeE*6+Y]\=3"K3ZRBK
%9ng8W:-JQ`3"Tlh0ek(>Y;j6iHT=f"!!JIgpP7.3a)Y:*+Btri)d\[CfNJ%"^:j<C><6NTS6f<3g,WW[CJb`3Qi*R+)c1((F]l`*
%JD+U?2s;TmE=cIE3D(\#Qi5;o\QcYRSeGsQXXaMcV[?&(JtR^O!gV7kk-DalCEHd9=PP))!lKDNW1)c)87jGLH9o]@DtJ.B7r>>!
%3%b-.)&]=ZMjf_O;d=8])Ec6Cm-T*T@+^\qM"l>!e_A(=b"f_br3\t0Q(*&#e8UO8A*=.6+g3l;8$-DiapDYrH2]*!97O6^ff>K;
%&\1dh&ktG]XJB?<N#3ZEdE_a4#qXV(6#UJ!dst!MjW0Ik+fa#AI$sN'X>&H[%GU2VIt(.)0i8Ls=%!](UUltqm(Kj.2FZ[rV'qdu
%Upf3>LDsVk]U]H-p)Y8c\OXbukLuoT@u]dE1;@("5i=Y422mfB!@h"G%Dlaq<f!$>Jqa);d;qC!YBQjq'hG*/H\c%#;,GB3lj5G;
%V<\G'D]Ye*FSJ_aTg1]"Hmf.EDc!KlIQL$VGYnEtN5o;gUk'\(<8Bc^]!!m/=Q>qe!:cC?\`tuT$m@Pff<"EumKqQ9b&7h#5eM)L
%<Mjt[_TZFtn3C2LJ"rOFP(BH#2A3k<d;.!T'Vf=Z'cU>PU8T)%ViJU1^FM?r]+fG-5KPT5<BEk,h9sASButg589=r>2`@Vj-,5@#
%+pupj5%4km[),LV;XqV,J[jR<V422BBP-CY1H&4QN5TKJ0lg>q%-fX8fa=0r48?nW@J,L`/'tkBiHpW0p#KNnlAqt]ZX!aBCeeo=
%K?QI9"/$VV7A.b7.KSd;Q#BM&TZGa:9o97-p2ZMHo].J*dXZ=c<B)94X-cuL:epP$SlR&^>_1jh`2`2hMM\gK#OK]BeG%@=,bHaq
%c^%!48(q8>nN(-DF4.%Z%+DXrh6u\K9`$@'nO-=F&@>#jE"jj\h7F<=ClkFZVoF"/3#HsY5_B]uaN:nPa`oFdSo`e=<eje3eO#X$
%SC[1&eE43V1i?TdS6d`P%_$=/EACLSWjmY-56a#<mE`0j0m-1*MU*XM;ppOH!n1+7hduF0lUR516+FB!f_1O4ha4;MTj4`GNP6^=
%+J*o_RQ'b]Mg7-l6lt#"7Yd"t!h0\:3i[@$^n.<]H_5o9aD2Ts5AI+]_ML]Ng6]^S-#S1]H7F_hpVdjp)(I`fiY,-tI:W<3*jn!H
%(U;S?e?Q0HRTWYQS#'lc#H&9%7)%e`GpaqM<S1PR?.#*M4pYX7@@@muTl0^Ik(u^hNl'V:W]2[t>t+TqhDe<>gfY5\]Tk]sm6ScP
%)hCl?jX<_:#$jf0BmP*WAI582.PR"iLt3iJ9Ib$3e+'P7-U'<:(&nM9h%c;q(9a?)l'PFeU=-DhL>W0eCSEX1%s*Q>P;"&6lrGae
%7:?6kX5Cth\Up.L#X6->JP6_2D%-T=[C;_H9)9)<in-)FD.['5gJK#;HS'#*ic6b$,<;B(3#uO>8SpT.111UQ>C.c0X-A.;)*YM7
%(&8kc^!+Y''@^CVr;uKsCW<P,YE581j)l2mW4Z[n,Q]MJ^*U7LM@q4i#KN:M\b$LB[m^KWLBJ.BRk[k`9lTCN;,u3[@<q'U`,d'+
%oL27oo'gb`CP\7l+[D^0Xm?RLg(HIkl]c9T6HDE[6a!pj;,"V,;jLY?R872djjs^t5J6uLi2De(GNF6cV13gO$-7`HiXOE?!o;n"
%\]I/W)nWMeQadGpB\.BkRC@dbo@?2_-+1nXQ09JgNDCoQ8?'EQ?G_[EiRZ1N7c>c+()4n35=jO`YW+C./'^G?9!rnp?XTFc0JAc.
%38)M>!/6H;/M-Wnn"$:-27jP/BI2#neE%)c&JWd!&bCTOJGsB;R@7ZH1@4.d[VsmO@`L6*a$ZI%H7$1f7Q'aP'%u!I46SO_VG1GB
%Ad?<Gcb5@N:Bt/3jm!Yk#-mZRe"T\"(Rs6X)=7ml/PK:\0UToi6]@$a77oQtA#K$\2cS;[:3%?9F*cq'>'/lG\tl\N;D%N.#bOcU
%+C6**cLcgkLQVcP"i\V]'IBE0*X6ZqEPfC/r0;sd-#s`/W`GM8l0'+-6*2mDgfB8PBt`e>WQYEGc`Ci#i]30G8[ibMUc8i8lhr`:
%^6s<9'-i#O>!s4dZ;:sV'$e'GUmZeN0Uea5!-o/s6<*Ol6D1;/ZR/bgrbbB`,AOKRmG,f$EWiRCqS@:BMj4XP*M-g&UuO8$(<a<X
%h7Bn2\5.N8U'&f6:J<a!b*Sn;!LIe%p]e?<?3A7g4r9&G^)r^,RoZeW!'>6FSfoX](G[RaqShWTN<,k/#aR%3[ms.[;Ue(/j;R6l
%BDE8EY;J2<]0b[#5$fGs*IZ[.In`8ig[.W;i6IZ#V<c"]8Zjs`m7>H\''rG%Qq@tNps^/!!=928TO5=VnH;9s^]iG[b@G":gmQCd
%W(F:u>=qFR.:n2+VR=V-$5(A(hr6;P1P.GN`1&0;6(Cl,/Yj#GT\*L!d&+\D4n#$?P@"(HZA3b$TaX`&E@g3?80t]Zi'0*KYMT6-
%Eh%_@8.<o>TE)+!REE+Z+.b4snunah(R&^jZIJdTcmr/f[*qT6Z2(?:l^6:8r-`,O#PXp$U'-c/_$J$::=co&9f*!Gf$PnY.aUKJ
%D8_C.1^tNhIQpcJY.YET6pK54:KU+i?Uo<so,O&O'*&rF(epU*l#U+Q5Au.43=,oL;n>dl4P0pp<HbjWlK"2tDc0!jH:0XYlr5@\
%fEmM2AT]1L!L#:HO.9%YFP)uQ^t-'*5gD,^YRM%,kSR!pAFUe3g5#1Q9uS[uEJ7_eq'S]b/8rHL&ht.21rDZ4+YJQ!/+k#b7"D6<
%5R++8'H[@EF#`E)nF,TRhbakNC>s-7@,A'>W43&j[)6>+K8"AnKkE7`Vj%>[OLLci:nSF\LLZ:[oceO[KJglQ4"m+YXl1*tljLM]
%1^d$:1b]q_c2n?tJr=,dS/C/-TF]_(PY9Ig@N8oB@#j!,=C6eeD2P\<^;d04c9gb_+Z59IPK.Dto8bpYXPqYoQA:ORg6,'@%ZRTT
%@.]e#a5uudO_V2fP/Na527_!TeU"j`UXOWb-"h_;laaQ!^Zg'sUuKZi-28DVE0pOK@tk6;g-ZNnhD/@@J?^A[k6YcaP"lT1??:>T
%028hS#*K+MY9$0^)=t[d?S*W.mMjN!"Th"Z%&DF&To8n^H$NBg%[(K9Edc62*]ShXU%L8Q<D.dH<m3Z>9k<?o-+(bpA=]kA?7\Xc
%c`(fP,8aF*GV1ktA[6pnNZqK26bo*$L*[<c=;lKLWJ3H-S^X-AKCpW)ZR+Fnq[.==$^GO>;E[-p5e[t6*h@k#5^<Ta:"a0L+NLS(
%1.t$!1Hg%I2d`d9No0?U?QZbJceR'l5?60FIqNnBS8V-j46Xl&+BX5ik8f$W_EF\idp]nCfS_Ti;_XQD1-J>tG*iJrl%AE*+dHp>
%R"<$qUX>V\T?CmspO#r.Zetk!JE3`t?mp-=2QThdFC\<G?+:a*-J[h;FBEfR'N)!Y&5JK3+,CY/E!t-2_VE$f_eCs9do8$'k&Mif
%[cneG>-P*@bj$a.`63q(/CGYH$\N!Q()o'X_s)o56`C>&+uQ,m-SjE:c5kHVo<(SBl3bd1X47g.k>qW845W3Jg`Yr\0ijHRI$M*(
%1bbZ\BPENd-GlDpH`p+DHYD&k*RqtF$,`@t_=+(2PT4T6V+c2]+e_rlmfmN6E1fPEqQ^<*B]Q%taAOTRLQbMFIAh*bkT@)3+Q5aT
%(&$s%_J95$lE8Fu>U\"gFlD:Z.9'fpXqAfY/]A-LT/b+;`AM#V+O;8P9n;"ii<pWBj/?aPY#aZ[EpgBPD0q_SWAU$b$/W/eVp>,+
%rD-#rp,'o6dm?O2.QM7E9Imk4NUtHV3O,aXs0-[k$1Y`ldS"uA0F^7?j0\BRk0l'imG_7;@p,iD-I]FORICA\Zg$n*n8%\Tn?nM-
%3-J=f<T+8oOR@.4_mKAECenD[lQ"BGf8",MB^PIA3(nlmm"tl36d'jjeaM@7395(/MMiY2("f/ZP-iDLQ&jG\6@)n0l'G(,+bn=B
%;<$LM'K*oljX:":c-B=Qkg'G49ftps7A#/W[%j*3-hJIE`fRcC4!FoaR!B#%o$Dm1Rk(>[fqn.tZEu><Q!#ZW/)-ODfcFa3$,JIm
%"<Tp%H>7"heDd3lg9%:@@a/b#1kKJ:`-d)gb@+i,.pgDOb3cdH%;CIS8:BQP*\$WmDt?bqo=b#CE7-^[FR$k899-lgms_U[Pg7[P
%^6'a@KReGDK__tbTk5(jh$?NJgaqF*?u+_2F8DVJWn_-a>-i@&g`V_$56]5=!H'*DId5d(5bY8td%?Y)VDCE*DS[dYmR;GMbRYLB
%*5W&RJR=Nglbgs"8#$]#BEJe_WCF[>#n-Q*4Z7MP">`N`Tunkjb;r5)6l%<sJ.[T.$4Yn%rm;,&)WsKfO:"$4Rm-Q5G99#ufLf)K
%O>#asXGtud@nd)AGB(,(%n]cXbMfiq9S9NWAL[Z8g5BB:b`*f90FTB?b&T<VP9bX:\<GVBoa-JD-2Q+F6'W[7_PAYC/>Oo:XTupl
%`jB.Xf+Lbi0a`!2$6!JjI^Rk9HdbS\-smf]FT,O/)i:oolVu*k`d<V^*Do&rG+HRN5FQ&1\sK&/ZRm4+86W=K4)?s2\"a59b>mY5
%/[2a(<pSuk>pjmC>DIXUZep9%!!anlmm]c.20dR?`K(b2`DWsq85ludH$T6TojP)1ClNc,TZb9W9s,RW7[(3M`(J1&P1D:":)!bN
%p;$2d?KXhL/=UAUAE?[mF*Q^4L3O;)ieN&V[<2n?Q$CQn.+.+0NPrdi;0A+a-,hf;#TnP9]?$tN(AP.<l^eXS!`OPXq9Yqp^"8o1
%V;a$/BcnSn<S#])]X,I#jdEq]J(h9!mu?t(-^X1K#6oiMV;d;K6<"efXkI#,=k.5a.ScBmMs<+\`+VL=E`+u?<_WZf/mu92KbKk8
%F"/))TZ"Grq=&/,?N:ksNp`0Q*)0_[HF?F1VnQNBD->n?X105LKBZm(IWm^].U$!>^4n\EYI=/Ih9nn!/ceo_GhWkhg7h#gkrANZ
%[M3gpmF6/HkPA47P#0;L%\"N4d\4=+F2Js)X:uIL[MWRs;^u7G7AF81*+qC^>nR8`?RDg!_"";;2>G-EHDinQaOCPGAFNnr'1H'_
%O&/8=!$YBrN2q;dP11n6G(BI_0OHQZAbu/=C34mAASN%p^8K\!SO`7":s+C35O$q;*9:LhrdCPklCIB-!9aTMUQS8<k^\+Z_DgmE
%.nu`bVQ!-7=R'Bl1B/`X)p5\+ML[Q0!3c1i[>81XdR9b7N^O]J3u*1*7I5odAlSbn]TeX\";AE()WE$_ie(^(+[)VOH*.hBZLWAI
%Jg`69bY:F"Ni'dG50(e[N"6haJo20,1IW#h/#fe@aH_AJ&>9#4COKsK^W"\C&eDoH.SeLCN@DOa>@28'@b4O*nh%\"k[IDMft;K`
%k@ri-&'cT5ohj8MgN,;!rWT!ddQ'CjH^:VU3JcPIE8:XbFkT*?j:)co"ehH4.ZIDH"4J&"j0tKm+!sR*5t"UcAMb9j5V!IhO&`(Q
%X[tR.+7GJ0iH*\6&A;Gh*@k;X^@6-QiZ4oZUD2jf'IL[e95UsNV6Rj4,CM!(0)F/:rG/oe=Ps?]Y7'/pht68Z+$<,W,k$-h$rpYO
%SN5S1Bd0C^9]fM?m1`a<o`sEfU+-i>mK+huf)-(sOu//;<T=P?]"iX(XfScQYII]':n1*O$C!6#q[8hY]FP8GeqoOR_^<%3h<$N)
%@C@<LG_pg@)tK=hT=VZhWH"Q/7q<m*1gDNr*'MJ#gOiD^<b5dGfC9Fp9XF,1-Jt9jI_P<-2iXhK:#o[D_?Y'_5.;S1jT9k:8;IIE
%^/hTJ/C2=Gf.9gYLf(/7S%CZ(`:FMBS$5I`Z?_>DN?G(sBP-(#60BEB4"MZmA%f4,qEK1H)1uP8G6o3Sh3,E?\\#<cFpFJf?&"lp
%HMV8bd@H4CFEFID57Go",Ph44(;*.';HrKfPN=9O?WPGQ"m:`r#Qs`gF3&rhotYTO'^-c4rCE?2CC'$q![.':RMLQQ<j@l&+%EUi
%?.ebJ#UQ("$GXX>S``Hc`W[7n;o)4]75$e6QEPDN6>mTA@=G@Z!R,'1s-:h/SA(jaFi?4YB?f8imYuNOU(O=A0FFDl-'.C&bG_SJ
%0+$ZY9g&l.g#b?]A-M'k\$<,&#!;:RU#X;S*(@LJ2j@[=/0+N&rVC,N`n^Q@Q,s3e>P:#MjYuqiQ3B2$AlF[qJ=-9n6*A%]5_<e]
%EsW@jBSE'-[^[5mosXkpB+/ZXI"*o"*5CAq>RVUPjG6/Gd'"q*fg?*o/059-arX,'dK`Q"FfYn'`o"SBj,;L"]d7'BeO2hq;F?"H
%mA=)p%X=?)2P^#08H3Hg57.t,&6S\D=[P1UMH?^/!#`@*DLSXfhQi7pj]RI'@<3MZ)a070RoG^@Mb:l$OF_P:d=UF!jXg'1"7D"]
%e^*JT`)M'9G)AMo94Ssp&kB\OXA=B2[;GQI24AoHXRZCt47k97/_?d(9?Z.f\R)E_SmeM[c=A4S'[m=bI<AOi[c/\[EHZfM'%(`?
%\(=.FhRoVd]#Ero?Q@CI8>IJ"IB?>16t0!l:XjNJ#$I/-\&irkH:H;RYer@jBlRsPT=H5$K#aUO@Wu%%TV+amYsVJJAZ>rnf+MnT
%#t3^c2lo]p$Un)/;9p8a'V_XXl<X]uA:8ohdYiu?ocHeY;QnLShkUSCgq#F:Za>KPY/PDpL_Q,OHFpt,W9tZPFNGs\;@Ul"-tAZ!
%]5>7;KHeD<p[Bt0*jW`jm)&i,c:l-]-2opCG/U:fKoqlRX=7,i)Ps@c#<T&F"%,+<V[?!W:NcSqcI[]%:ASb*^C?G!droLX2\c)U
%CSL?P$.u?-7\$8QP#3+_f!37<I@Md.pjA<\iGsLIs".b6]HL![7-i:R"&O=-1J#\5ks.k`d)9C2RTR[+;_P]*qtoQf*?hq,n!^`4
%em\Z/$E->@^83fDaIsOE8un($QBg4#.eU0al;bOq(Z!j7IdT@NHs_JsB]9(`*0s&.U*EF*,$]?W_G&iKZ6#agAG@AJrH4+J@RSGK
%UmrV5C.k%pPmgSurWFi+5Ntq.lqeOD=<['Xab,4?;?aR7h='+!$4Z*H8&H@?iZiG#3\n(,gfgmCA)Bd$/l2=L6HELZ[>(=-:d.>^
%j5i*LZ`W8he%<6h,#'FqJJJI\!Rn?/oTVXGFp_4^]D9`<\Q"eHn)N_cM\`++`qA#5QPT[YKCs[:pB$+??FVX.e?bdKWKAL,0ET6X
%I4-D1J>O0T-p\)k0GlAU!7plmq@Z*pA_j<nHT(n/lb9iTX5/YCq742hY'56EkJl4>80@96XBO3#SRTb)]dTnO^6]g\,hA&@qDOf]
%#rA0l]N&2A<q"MAp/5sl?7(TcNmm9ndLJ*hO,PPBLUKhR>#0`9RMKMKa`tFap&']08CAMo5eZ(:Q9!#biDhBtED=5;$@cqa>93>:
%j(X(DT+_W=MkH=h?lcW]GIfsl[8P3i'%+FNGC,h:F_g,CAR+KcG*ZjnXg`\CV/.ujl^`gh$YNbSX[/JPr/C`m[;YH=]?=,a:H5#s
%!+I6/#`\<G&02L5*%^*6E@)0','_bJk$o>U$g@([RJ1.=O^aZcJMa&h<$5eR)?[^mXC)s6;LG[([5B=19L5RHR4c[bn4.ebSn8"@
%OC=s=i#kE:Nf1>=WI(tq#uL3bH5XCZ,p[9UOuZZm!Ik!W^5s&W//dan(+bMP%foM*_bUOS^d8ke3$/iq)%_9g<XMb1);uCFnn.8f
%YQF]Xgjig_4<o\GU#(+eWrIn%A%G'F<2'uHoTpWI#-\*1"N_="0qPaMOMuW\T&[eKhA_?'[io"?Hm*a>e"=lTOF)El]f[cWEDS?7
%].?f/p\I/LV=ZB;nZ6AR9up)JU^jOKCD!,Z1D`^j?eHaQ.@9oLP8>?J3U(s"K168pK3Bd$GfBf,HG'b]b:uDc>rKPl&Y#HumB]Q]
%&F[q&k"s;rNca]nM&Q[g)cfpN%Jqn+j*ZeQ1-I)4PpTpkP0+13Z$^GK>LsJ:#GdG>F-n?[:(G(lAL_l7.";BNF//u(P50i#__>NT
%NS:j;@ErjH40/)LBh#eDC\-r3FFdR:o((LHp3a[&Y9@CkoX'@pk]XDBaR1P5KqI)-rD`@"abLdjd.kIlJ$ork#4-R!\42V4GM$hn
%G7)7oqE;8-k)h2c@Vm?>c&!+j8i`UtCL6#DZ#a]VF?%c*or\&/j./5tA^P6W.^f^l^:RWC,,KeaKerZ(0EE/6k]$=Ds3KRSFoZd;
%gQ*O#d)^>J:^0>P2\T)k4EhQ<+?7][Sb250nE3E;?(J)Xe(rPeMe@s_(aP_AWoIbq)oC;7q8$VZ\>nr;f7C-IhDmq+UG1@E+]<me
%6Bk'+Bt$]gU7@s[a#\<NS?cOBL;ag[VY*2VPYcmqXq<j\GSQZD's)c"+1@/aVG(I,*s5jT&Aco_&OSc0?OiChh>WM+_*>E5!lB'5
%nV%(,I@0U$Wc#i"K@!s!igDdPZ-\Lk?M5Ut?u\Tel9pAA+7-q6F<M1?a6Xl6;u5'5Oc@1A$jORjCQ4%5oFHN>.Cn*g9G_j?E5)nk
%K6cp^XH2,8ae+?NFBGWViUZn%/HC!N>%%[YV@NTAhlGf@XOS%k><<JISb[76(i9UMTTq/K:h.qMTI+5ji*EAX"]B,.2M7'FnX>)6
%'Hd461Y)Ve)X(!q3_1q7'C`-iR^7qg&sIgmlk'mmXV=sK;!66h0B7@s;jB)Lk>j/ZXI`?9R/K<S,BSKER8]tClcq1:PVY=I-OEp`
%lKQ,[rha%imQ^XX=GAQnCGYnSYRLQH(,'p;!^6+M?sXR-pHlnTQ\3gXYmXer!*r*mDq=>"027ljVept9;GA)iLK"gGj?1.M?1he`
%oh"RYnD'93*\%n,mQg]pd1UpS5"RLM6:M'&.ob9&I/VV[2,l^>183rZ7jIeer',-*?t*P<7lC3a1_W9TM\sBm9En)*)Q=QjR?I?&
%Zi,F*mrN7\"<W]L/^.?>bpG&e6>nL694?#td2@5nX=JF<3#bLP3b;d]%<N=u&=@I0`**O3f@U*j2+'T`o2R8JbYo0+CH.C!6l7El
%^`=[02Ghf**WU#6j!sLXKlBO6BCT+Zmn$bg2kZWeM$-2QJU4Xn+UPg68Hn4k04jT`bi'O6kBXg@]AYgJZrtJu!JC!DWI"/R/&SJ\
%UiG,LVhQ%mqk\f373:%mo!'Eg1.=5t+9G8aG%jmG9c,c6!q1QYZTH(L?,TqS2^cpQ038nI(i]ae#!?:^lRcY[BD7*I?6UT?Ht/O]
%'0umMLNVqHFmC0t.BR&CTIAF!M(:#!eQoA;keMM=h"*8o.E^T#=h:1J-(<tJ#b'3"Cg(J"7nu4"*7Q``ItaA>HJNqeWBu/N2(>Pq
%&YC17Bg#sg.!ea.`@n]d")XiHA=;fJ_L!tEW_t&m(XP"(ih@2'p]acb690u=cN]g;Jeno/Lgf#uAI'8&Y:R0GX[&iKWH"=c]!4hC
%s&^I5aG?ak"lF1oF9[MLfZ9HK,hJ)/EHO/a`7$%DMM^@b4`rJ^&#Rjo\lO7],E9e%8)9Y'UP[IVok,On.>2'A2PO'9J;'uu!HIHc
%LfhUa7g(ke,M)FP$'muEjJ],r+Ge.`V_9$F+YVo6=Ifi`LCUb3=GbT4oj#H]_2aZs(!+(co2(U@`aO3O'ekR[`a&90<]E@7Z7sk2
%O/&$*nqFP$)OK*aKt5JiGK^V<"0>G\CAf,n$FJkKLA\Yp):,9L>im`3Y+s7kMEKR:qQ\SKT,Jh=n\$BNH!7\;2QB?$7?dtsCSa>V
%Z(6K^3U3Jmm">/)9_od!'G\H`/=0'kmDo@$.M`\`Sa`q+r>M$p+q4'[^IM/8F$H9d$8^1j:&g*@Ag#-8Lm"Y;'ERR0)8M6];KL#Y
%V]46i/nd:<>)8[J`j,;cSB\!^:lHh2+C#Sr0-Q^VP^$?A^n<8&kgYb3h+Vu`!0Dl6(>(7U2iIg$hk>4DiF>4)pX5eJ3SKkWEdX!K
%<P!<E_2hAlV*E8tS+S>j:)2V,;pWNG17PUO&Q?EaPkZfq8*q7@85OBD3##*Q4A"DO;K>lP\C;_6mS0KBAWkn4?`mLB@F^MM^qW'M
%K)"0;r'__A--dQ4Vq)q!f9o&e5M?IBLqBAT9qn*6FO8oTQsd?/>sM/8Tq^O`%S1Tj!&-c$=d.LVCbcEur?5"C*O+EEFJ=F3OC=sn
%aLi1R#aAq3EKo-p>/gL!!=I>KQ8t:XXm2$??U[V(nU)>8#^GZTKSZusI7ng,GDVeSZ+s85c0Re$)IU7t1`=MC]A*:rcP*JW7RUTM
%J`'_1\!(4pMASjK++8u=!F+4u/d=mS[A$n9<,Ip6!^i4M3Rt^X1fU:$XOM]aK.Xiu<U-f3Ot)Aef")e?$M$of@1pZKmAKNOQ\rYq
%iK)M)@L+3+^ARs*E%UmF)'`@WlcdCa"GhVC#qSK4^_OQF^R9_999*eg>f*3T&;++q9^eIEq"L-ee>VRPXbkc@YHk%)IkY?@<%l6b
%%uM+\S:-S4#q?t<iQ=YoK?4I?6E:AP?!YdHr<hkd7,$Tdg--h<O]^S.GT6DH\8I1E6NV'!Z+E+doMV!;jX`*.%E2UN`2J\VF]G&p
%mdRpEeg%@6ONc`f_)*?iNS!jabR/b"qfP&Z4-(5?4#T7SXi_*QIG2&K^"o]Z+4b:Kn\&S;*Mcr7.I*p370UJ)?2rn2cgRT/W_J7X
%eGo`6\m6Moc;tR4:pT+,+(b+rLi00Di_"jeCj>0o5@e"YZD=@#6fTfA$k/VO5B9io,a/]Jp![dl4jdL1,q\0k&+:K[H0CaD?@p45
%GXBfak?3J%(2;\qSmB[69dV?7TkY6cGPF0/N%$-?<F&PR+^MI(<7hZA/Aa'1@DM2\A$`l.^BV:Snp6O(-Gn?p43u>U)(TT)\1BAe
%;8Vs]^i_-TJ<0j:(VZGf5Q*b=7"jil\OXd@s4&02+,1@R.^']e+/Slo=<5SNOgO%k92/9#\s15@-=Pu3YMsr^>Hs>OWYh+k_4MES
%M%Qm/mX6ZgiJh!Zd&gE`\k-$@J8*kPmRks1``t"'5!rQg-iseD1FjMML>JOPajl=3@oEMr-8e(SXDZ\_LoHHEm;;3G.fU"7gEa*0
%hg)+n@DOmekrW=qI5"@5]2`7J*sF[_4BScsFM$Yup@9A]IR@,I%ojVkN:F#VCE0#"Xd;(-`nog(\E+=e?)$1_%.urhj+`uNUfOZT
%H.HtPM<4h*P9X%]^:L[C)"UXd9el<]8`*>"AD<7OfW&`HG-$!o0`Ksoh_Ne?X_\*sMSF<-'*#I07DQaMb=0>@7VPIrr\A]_>8pF=
%/H-qQ'\7P1`3S/X_hI!ZQ)-41_GShTPn8d7NELk-e/>L#e\..2#^D9R]o@q6af$(@?mn\@\l&-h/;Gpqm6lQ3_I/F&bbV<O4Idg.
%MFB94+r6JoDCl[eOX&/[D,A0DXuoF=]o?$qQ;7XCS/_I<9l(23rims_4Zp&]GDLUHBVC=@@3+T:`K<NO/%ApoC>E*i>.S\)Kq>Y]
%4O6!0lZu[]gO3t!qS?:3J/q(BhH0R*Rb01fmqWSI]8Q'IBd%t0+27Cf`uaDK0!Gi(MuC&eZ/rRb@Jn0S;?AUGZJ5`C8[qJhG0'`j
%\Gg1"D5g-'SQ.Ps[qi7*[OIhu(%qFh[-C)aPnjs!@.YAGldB-M1S2t$7B3rk%[g/Mi??CEGnP_0d38'[0n,Ws]5.)o+bM`-.o#![
%g@\lGq@=_(XQ^410B!aKW,+YHC6;*9Y(+(Zr:OAMGT5[E;MonX$PS!#Lt;[l=V;]LP('rZ]jmg0*Yh.oRXW^Bbl335Z8;O]HJc9g
%X91lU0XY5F$MCS8NIPJ*nV"+uM%*@/A!H'V-^_+s>AZt5LZG^r(07gKB8dY_-(KF(7q2$J/mJKMa*A!)5!]kG]t90Z!2Dc#e-72P
%EDfSoVI&L5j20D4'CeBi-Z<'K(!d%`C=8<Wf_/Wm.-EsM9,QEZjXQ'[0W4[h5bAs:atCuPYH`q^7Z`S09br#)=!=@u+-!NV^@-0S
%eH!kEl[2D4I9u?78@X1d0BmpW5.F7[QM3^YL.9ZY%U=c?%'^Z-aZr6N<KptDMmJ[9jK1P4OK&A),Y<LR#87$>H>"ZMF"iq-3]-ck
%kf]'^L#?I(Am!"KLM*'OoV8ikm&K2EJ5p!&OH<tiU5<oD'\WPF+AF'R@^WR$,ZoiQ'ipKQ*ZO,*LC*.VPQnKhj,SFqk"`=*!s$G4
%\\9Ul5laR7P$Qd?+u6g])`M"VbS4rbFq-nWJQIcscf3@+0<@tbQ^(3Q%Fk!>](!4RQDjC(5e!@Ema?>IajSc+od2:;P.XJW\-pa6
%2k^UMW28/N+$N6P!@K2YlUd$8G9FC@:i&XYY:LT*H4-G7^I>sq&1s_mT/$GpkSlUI8.n$PrrZiJ(a&"3k0UdbNFU+%DN?-o0Qs4Y
%&=1.c(q&.?p7bNaH,#4]p:#^IB>Gjd"OO&+U1q-SGsRlO=f<lC%E*bW/14_'M6'!Cn7#9_VikFH;F/'pD:4O^9'U)&a86>^>)05m
%E0/Fqa@(IY0[b&[*XR"ep@-Dp-1?I)Cg.$!D>:ZkbTqJ[,jnQL5-:^?/5uQVDY:Rp;#V_OTWNro3CB_Y29XO?_TsJu4JpsQi/ZE&
%b;PHJlXbBZLtN]`@AS6K$B02Hqb(e]QRC=QY*Tb<D],d.*X/EX4cUJAC2hWL2q&pGY:j]om9j[E(j^AR;.pLsO0Eb3AuDiUfB<Me
%)-KfVq<V:@<II`L5j_`GXO(I-&k^dm49Vu7[I4lb2Q<'.\]IKp?ESu+BC4LF2[QkOZ.Ns_WMmf`"oB`%DsQ1l+st=Q's=ke2Vb[P
%Z[<`FP-Qi8^:A[eCQG.#AA9TSVm`33e>oG3(Rm.^F-PtId?t#eH/0gIq:+@iaBuCHGl5&2M8]h$GL'QhXa(n^kts;UNFaVI,<(h9
%&A'hi:<IH$@=eWJH.G#FV,?Ik79qj?dm@V^:Z%X;FjVp7PJYWq''%B,VQ5##5R$GICQ-`Y:@$*S+a#EC"\!\q#ph\VNiMj@;&*=q
%NnVMD;H-UepdW&7e[^h75UJ"-!kpn-QPr2F3EO5m[%.U;h#+igqf$_en($-e\TUA+N*1M1"qPqi_*?BS6+esY_a7ZkR_Z*[/#(je
%nXrJpRM:;L@64hG]/6#&e>X&2/(VGj\.?N"0dI0a<?7s;F#6V6$,$1NLtMMuau<iNP<f_4gdmP1ocaQF&86'l)V-JL.QHfT(FF6$
%W&?D5?1VgYKZ70i,0n:``LY!N%GYq+*3qp59Q.dI.@*t5D,9%ne0nF^R1^lc/[G4\%dUg2',;#*_KVHkG/;#WX]TrJLkR-=!VVhP
%.0K8sB+"OY](LRZ'`fTuNk(u0WX!bM>u,/N_1\!oHqF^U%u0\@l_9Zg&SqP#fLbIi12W9:_K7*\70R:gf4!-umP`!pkuYYniV8P=
%:J31M^arA>7FJ5d>'%$C#uXqD[SYA>VHGakf?X;gkO-o24u">i<0';43uQ9=E-%m^j"59mZObOHEtA06Z0*k!Z`?BH!iND_BTcQh
%W=)(>E#;B,gQ2\4cGo#'4R:iQr?5@*m`g2CBK+^RnHr:j,`WkYpXXRRPHHV;T%Ta-*AibdG.k3(/oY2:K),"s2'ri<;_sZ+8@Wa%
%):/.5+!L^YH[A5DIi4WZn9'Ma^=7^8(6&S$<;fsq:kL(WoK_c9US(2i8=RKQ]l%,m5$s&>q"o@]EPfhA.&"L&7uK;YK0up!SIE2J
%bYd4+S@NR!Z3i4JHlG7Y;]pZefQg$WcLl2^mPu,Q7/(XO\miVt)AV2C0-:n%p#1$$2&71<iZWpXV6r"r)J(seP[hY(;\qous4W?#
%Q):]52(/gIHO\TG]6ME'P5]23Ln^GXBQ-#$TZK9TRCJ=]OSU;VI.XV/WJ(O:nb\tn[kL":J8sHcX%5u%$?VJp['_:S9-1Rg9ruD?
%#PaH--cSnc`C>#ufO#9ITh-:F?5CJlj:oecccn8<.8usKLe`Of/0D]4Aij<.L,m."LlOl;=.\jQGtqisG[\ARFn4L8R:\EBOUeJ`
%\m6[Z+sm&#nf&A)"65/Dpft:\QMBS?'L\$iM^;3927R4R>[T#1ZmL8.LHG$^Si^efH4\YFBi8Fm'pYbHS;]Qa/SR[]M%TX9-Il.!
%;8^O8Ys:/&mtdP)djoqD`-)*`Lfh>C]_2#[s8FtWnCrHe+4l#@a$9O3+91iV5QCP'^O$iIqk*oXa.NCTTE"CFro_UWrlm\*nLoCe
%5<o2;LHk_D<Q%-%YLgO<pu@urrlb?@Va(4Z_dEE?5Q+qkE78mGDh%YFs62cGjraREO5WOT~>
%AI9_PrivateDataEnd
